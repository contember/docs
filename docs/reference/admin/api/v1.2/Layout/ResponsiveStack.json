{
	"id": 0,
	"name": "@contember/layout",
	"kind": 1,
	"flags": {},
	"variant": "project",
	"children": [
		{
			"id": 1121,
			"name": "ResponsiveStackProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1416,
					"name": "about",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.about"
					}
				},
				{
					"id": 1185,
					"name": "accessKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1836,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.accessKey"
					}
				},
				{
					"id": 1122,
					"name": "align",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Stack/Stack.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "center"
							},
							{
								"type": "literal",
								"value": "end"
							},
							{
								"type": "literal",
								"value": "start"
							},
							{
								"type": "literal",
								"value": "stretch"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1123,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
											"line": 6,
											"character": 25,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
										}
									],
									"signatures": [
										{
											"id": 1124,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
													"line": 6,
													"character": 25,
													"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
												}
											],
											"parameters": [
												{
													"id": 1125,
													"name": "layoutContainerWidth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": "center"
													},
													{
														"type": "literal",
														"value": "end"
													},
													{
														"type": "literal",
														"value": "start"
													},
													{
														"type": "literal",
														"value": "stretch"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "OwnResponsiveStackProps.align"
					}
				},
				{
					"id": 1197,
					"name": "aria-activedescendant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1570,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-activedescendant"
					}
				},
				{
					"id": 1198,
					"name": "aria-atomic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1572,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-atomic"
					}
				},
				{
					"id": 1199,
					"name": "aria-autocomplete",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1577,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "both"
							},
							{
								"type": "literal",
								"value": "inline"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-autocomplete"
					}
				},
				{
					"id": 1200,
					"name": "aria-busy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1579,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-busy"
					}
				},
				{
					"id": 1201,
					"name": "aria-checked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1584,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-checked"
					}
				},
				{
					"id": 1202,
					"name": "aria-colcount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of columns in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-colindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1589,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-colcount"
					}
				},
				{
					"id": 1203,
					"name": "aria-colindex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1594,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-colindex"
					}
				},
				{
					"id": 1204,
					"name": "aria-colspan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1599,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-colspan"
					}
				},
				{
					"id": 1205,
					"name": "aria-controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-owns."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1604,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-controls"
					}
				},
				{
					"id": 1206,
					"name": "aria-current",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the element that represents the current item within a container or set of related elements."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1606,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "date"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "page"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-current"
					}
				},
				{
					"id": 1207,
					"name": "aria-describedby",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that describes the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1611,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-describedby"
					}
				},
				{
					"id": 1208,
					"name": "aria-details",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides a detailed, extended description for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1616,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-details"
					}
				},
				{
					"id": 1209,
					"name": "aria-disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-hidden"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-readonly."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1621,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-disabled"
					}
				},
				{
					"id": 1210,
					"name": "aria-dropeffect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1626,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-dropeffect"
					}
				},
				{
					"id": 1211,
					"name": "aria-errormessage",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides an error message for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-invalid"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-describedby."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1631,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-errormessage"
					}
				},
				{
					"id": 1212,
					"name": "aria-expanded",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1633,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-expanded"
					}
				},
				{
					"id": 1213,
					"name": "aria-flowto",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1638,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-flowto"
					}
				},
				{
					"id": 1214,
					"name": "aria-grabbed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1643,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-grabbed"
					}
				},
				{
					"id": 1215,
					"name": "aria-haspopup",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1645,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-haspopup"
					}
				},
				{
					"id": 1216,
					"name": "aria-hidden",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element is exposed to an accessibility API."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1650,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-hidden"
					}
				},
				{
					"id": 1217,
					"name": "aria-invalid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the entered value does not conform to the format expected by the application."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-errormessage."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1655,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-invalid"
					}
				},
				{
					"id": 1218,
					"name": "aria-keyshortcuts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1657,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-keyshortcuts"
					}
				},
				{
					"id": 1219,
					"name": "aria-label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a string value that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1662,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-label"
					}
				},
				{
					"id": 1220,
					"name": "aria-labelledby",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1667,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-labelledby"
					}
				},
				{
					"id": 1221,
					"name": "aria-level",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the hierarchical level of an element within a structure."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1669,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-level"
					}
				},
				{
					"id": 1222,
					"name": "aria-live",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1671,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-live"
					}
				},
				{
					"id": 1223,
					"name": "aria-modal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether an element is modal when displayed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1673,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-modal"
					}
				},
				{
					"id": 1224,
					"name": "aria-multiline",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1675,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-multiline"
					}
				},
				{
					"id": 1225,
					"name": "aria-multiselectable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the user may select more than one item from the current selectable descendants."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-multiselectable"
					}
				},
				{
					"id": 1226,
					"name": "aria-orientation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1679,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-orientation"
					}
				},
				{
					"id": 1227,
					"name": "aria-owns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-controls."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1685,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-owns"
					}
				},
				{
					"id": 1228,
					"name": "aria-placeholder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1690,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-placeholder"
					}
				},
				{
					"id": 1229,
					"name": "aria-posinset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-setsize."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1695,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-posinset"
					}
				},
				{
					"id": 1230,
					"name": "aria-pressed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"pressed\" state of toggle buttons."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1700,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-pressed"
					}
				},
				{
					"id": 1231,
					"name": "aria-readonly",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is not editable, but is otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1705,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-readonly"
					}
				},
				{
					"id": 1232,
					"name": "aria-relevant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-atomic."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1710,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-relevant"
					}
				},
				{
					"id": 1233,
					"name": "aria-required",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that user input is required on the element before a form may be submitted."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1712,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-required"
					}
				},
				{
					"id": 1234,
					"name": "aria-roledescription",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a human-readable, author-localized description for the role of an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1714,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-roledescription"
					}
				},
				{
					"id": 1235,
					"name": "aria-rowcount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of rows in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-rowindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1719,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-rowcount"
					}
				},
				{
					"id": 1236,
					"name": "aria-rowindex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1724,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-rowindex"
					}
				},
				{
					"id": 1237,
					"name": "aria-rowspan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1729,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-rowspan"
					}
				},
				{
					"id": 1238,
					"name": "aria-selected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"selected\" state of various widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1734,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-selected"
					}
				},
				{
					"id": 1239,
					"name": "aria-setsize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-posinset."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-setsize"
					}
				},
				{
					"id": 1240,
					"name": "aria-sort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1741,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-sort"
					}
				},
				{
					"id": 1241,
					"name": "aria-valuemax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the maximum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1743,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-valuemax"
					}
				},
				{
					"id": 1242,
					"name": "aria-valuemin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the minimum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1745,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-valuemin"
					}
				},
				{
					"id": 1243,
					"name": "aria-valuenow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the current value for a range widget."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-valuetext."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1750,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-valuenow"
					}
				},
				{
					"id": 1244,
					"name": "aria-valuetext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1752,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-valuetext"
					}
				},
				{
					"id": 1425,
					"name": "autoCapitalize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.autoCapitalize"
					}
				},
				{
					"id": 1426,
					"name": "autoCorrect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1876,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.autoCorrect"
					}
				},
				{
					"id": 1411,
					"name": "autoFocus",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1837,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.autoFocus"
					}
				},
				{
					"id": 1427,
					"name": "autoSave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1877,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.autoSave"
					}
				},
				{
					"id": 1126,
					"name": "basis",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Stack/Stack.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/node_modules/csstype/index.d.ts",
									"qualifiedName": "Property.FlexBasis"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "FlexBasis",
								"package": "csstype",
								"qualifiedName": "Property.FlexBasis"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1127,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
											"line": 6,
											"character": 25,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
										}
									],
									"signatures": [
										{
											"id": 1128,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
													"line": 6,
													"character": 25,
													"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
												}
											],
											"parameters": [
												{
													"id": 1129,
													"name": "layoutContainerWidth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/@types/react/node_modules/csstype/index.d.ts",
															"qualifiedName": "Property.FlexBasis"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														],
														"name": "FlexBasis",
														"package": "csstype",
														"qualifiedName": "Property.FlexBasis"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "OwnResponsiveStackProps.basis"
					}
				},
				{
					"id": 1130,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Stack/Stack.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1131,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
											"line": 6,
											"character": 25,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
										}
									],
									"signatures": [
										{
											"id": 1132,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
													"line": 6,
													"character": 25,
													"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
												}
											],
											"parameters": [
												{
													"id": 1133,
													"name": "layoutContainerWidth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "OwnResponsiveStackProps.children"
					}
				},
				{
					"id": 1179,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1838,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.className"
					}
				},
				{
					"id": 1196,
					"name": "color",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1878,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.color"
					}
				},
				{
					"id": 1174,
					"name": "content",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.content"
					}
				},
				{
					"id": 1193,
					"name": "contentEditable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1839,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.contentEditable"
					}
				},
				{
					"id": 1412,
					"name": "contextMenu",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1840,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.contextMenu"
					}
				},
				{
					"id": 1245,
					"name": "dangerouslySetInnerHTML",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1355,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1246,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 1247,
									"name": "__html",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
											"line": 1358,
											"character": 12
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/react/ts5.0/global.d.ts",
													"qualifiedName": "TrustedHTML"
												},
												"name": "TrustedHTML",
												"package": "@types/react"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1247
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 1355,
									"character": 34
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 1417,
					"name": "datatype",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.datatype"
					}
				},
				{
					"id": 1407,
					"name": "defaultChecked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1830,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.defaultChecked"
					}
				},
				{
					"id": 1408,
					"name": "defaultValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1831,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.defaultValue"
					}
				},
				{
					"id": 1186,
					"name": "dir",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1841,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.dir"
					}
				},
				{
					"id": 1134,
					"name": "direction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use "
									},
									{
										"kind": "code",
										"text": "`horizontal`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`reverse`"
									},
									{
										"kind": "text",
										"text": " props instead"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Stack/Stack.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							},
							{
								"type": "literal",
								"value": "vertical-reverse"
							},
							{
								"type": "literal",
								"value": "horizontal-reverse"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1135,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
											"line": 6,
											"character": 25,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
										}
									],
									"signatures": [
										{
											"id": 1136,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
													"line": 6,
													"character": 25,
													"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
												}
											],
											"parameters": [
												{
													"id": 1137,
													"name": "layoutContainerWidth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": "horizontal"
													},
													{
														"type": "literal",
														"value": "vertical"
													},
													{
														"type": "literal",
														"value": "vertical-reverse"
													},
													{
														"type": "literal",
														"value": "horizontal-reverse"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "OwnResponsiveStackProps.direction"
					}
				},
				{
					"id": 1187,
					"name": "draggable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1842,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.draggable"
					}
				},
				{
					"id": 1138,
					"name": "evenly",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Stack/Stack.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1139,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
											"line": 6,
											"character": 25,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
										}
									],
									"signatures": [
										{
											"id": 1140,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
													"line": 6,
													"character": 25,
													"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
												}
											],
											"parameters": [
												{
													"id": 1141,
													"name": "layoutContainerWidth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "OwnResponsiveStackProps.evenly"
					}
				},
				{
					"id": 1142,
					"name": "gap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Stack/Stack.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "larger"
							},
							{
								"type": "literal",
								"value": "padding"
							},
							{
								"type": "literal",
								"value": "gap"
							},
							{
								"type": "literal",
								"value": "gutter"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../ui/src/components/Stack/Stack.tsx",
									"qualifiedName": "DeprecatedStackSize"
								},
								"name": "DeprecatedStackSize",
								"package": "@contember/ui"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1143,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
											"line": 6,
											"character": 25,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
										}
									],
									"signatures": [
										{
											"id": 1144,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
													"line": 6,
													"character": 25,
													"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
												}
											],
											"parameters": [
												{
													"id": 1145,
													"name": "layoutContainerWidth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "literal",
														"value": "larger"
													},
													{
														"type": "literal",
														"value": "padding"
													},
													{
														"type": "literal",
														"value": "gap"
													},
													{
														"type": "literal",
														"value": "gutter"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../ui/src/components/Stack/Stack.tsx",
															"qualifiedName": "DeprecatedStackSize"
														},
														"name": "DeprecatedStackSize",
														"package": "@contember/ui"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "OwnResponsiveStackProps.gap"
					}
				},
				{
					"id": 1146,
					"name": "grow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Stack/Stack.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/node_modules/csstype/index.d.ts",
									"qualifiedName": "Property.FlexGrow"
								},
								"name": "FlexGrow",
								"package": "csstype",
								"qualifiedName": "Property.FlexGrow"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1147,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
											"line": 6,
											"character": 25,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
										}
									],
									"signatures": [
										{
											"id": 1148,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
													"line": 6,
													"character": 25,
													"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
												}
											],
											"parameters": [
												{
													"id": 1149,
													"name": "layoutContainerWidth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/@types/react/node_modules/csstype/index.d.ts",
															"qualifiedName": "Property.FlexGrow"
														},
														"name": "FlexGrow",
														"package": "csstype",
														"qualifiedName": "Property.FlexGrow"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "OwnResponsiveStackProps.grow"
					}
				},
				{
					"id": 1178,
					"name": "hidden",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1843,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.hidden"
					}
				},
				{
					"id": 1150,
					"name": "horizontal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Stack/Stack.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1151,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
											"line": 6,
											"character": 25,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
										}
									],
									"signatures": [
										{
											"id": 1152,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
													"line": 6,
													"character": 25,
													"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
												}
											],
											"parameters": [
												{
													"id": 1153,
													"name": "layoutContainerWidth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "OwnResponsiveStackProps.horizontal"
					}
				},
				{
					"id": 1190,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1844,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.id"
					}
				},
				{
					"id": 1418,
					"name": "inlist",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.inlist"
					}
				},
				{
					"id": 1194,
					"name": "inputMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1893,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.inputMode"
					}
				},
				{
					"id": 1436,
					"name": "is",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1898,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.is"
					}
				},
				{
					"id": 1431,
					"name": "itemID",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1882,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.itemID"
					}
				},
				{
					"id": 1428,
					"name": "itemProp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1879,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.itemProp"
					}
				},
				{
					"id": 1432,
					"name": "itemRef",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1883,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.itemRef"
					}
				},
				{
					"id": 1429,
					"name": "itemScope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1880,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.itemScope"
					}
				},
				{
					"id": 1430,
					"name": "itemType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1881,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.itemType"
					}
				},
				{
					"id": 1154,
					"name": "justify",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Stack/Stack.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "center"
							},
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "literal",
								"value": "initial"
							},
							{
								"type": "literal",
								"value": "revert"
							},
							{
								"type": "literal",
								"value": "end"
							},
							{
								"type": "literal",
								"value": "start"
							},
							{
								"type": "literal",
								"value": "space-around"
							},
							{
								"type": "literal",
								"value": "space-between"
							},
							{
								"type": "literal",
								"value": "space-evenly"
							},
							{
								"type": "literal",
								"value": "stretch"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1155,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
											"line": 6,
											"character": 25,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
										}
									],
									"signatures": [
										{
											"id": 1156,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
													"line": 6,
													"character": 25,
													"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
												}
											],
											"parameters": [
												{
													"id": 1157,
													"name": "layoutContainerWidth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": "center"
													},
													{
														"type": "literal",
														"value": "inherit"
													},
													{
														"type": "literal",
														"value": "initial"
													},
													{
														"type": "literal",
														"value": "revert"
													},
													{
														"type": "literal",
														"value": "end"
													},
													{
														"type": "literal",
														"value": "start"
													},
													{
														"type": "literal",
														"value": "space-around"
													},
													{
														"type": "literal",
														"value": "space-between"
													},
													{
														"type": "literal",
														"value": "space-evenly"
													},
													{
														"type": "literal",
														"value": "stretch"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "OwnResponsiveStackProps.justify"
					}
				},
				{
					"id": 1182,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 100,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
									"qualifiedName": "React.Key"
								},
								"name": "Key",
								"package": "@types/react",
								"qualifiedName": "React.Key"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.key"
					}
				},
				{
					"id": 1188,
					"name": "lang",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1845,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.lang"
					}
				},
				{
					"id": 1195,
					"name": "nonce",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1846,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.nonce"
					}
				},
				{
					"id": 1284,
					"name": "onAbort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAbort"
					}
				},
				{
					"id": 1285,
					"name": "onAbortCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAbortCapture"
					}
				},
				{
					"id": 1401,
					"name": "onAnimationEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1546,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAnimationEnd"
					}
				},
				{
					"id": 1402,
					"name": "onAnimationEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1547,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAnimationEndCapture"
					}
				},
				{
					"id": 1403,
					"name": "onAnimationIteration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1548,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAnimationIteration"
					}
				},
				{
					"id": 1404,
					"name": "onAnimationIterationCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1549,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAnimationIterationCapture"
					}
				},
				{
					"id": 1399,
					"name": "onAnimationStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1544,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAnimationStart"
					}
				},
				{
					"id": 1400,
					"name": "onAnimationStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1545,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAnimationStartCapture"
					}
				},
				{
					"id": 1330,
					"name": "onAuxClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAuxClick"
					}
				},
				{
					"id": 1331,
					"name": "onAuxClickCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAuxClickCapture"
					}
				},
				{
					"id": 1265,
					"name": "onBeforeInput",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onBeforeInput"
					}
				},
				{
					"id": 1266,
					"name": "onBeforeInputCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1387,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onBeforeInputCapture"
					}
				},
				{
					"id": 1261,
					"name": "onBlur",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1380,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FocusEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onBlur"
					}
				},
				{
					"id": 1262,
					"name": "onBlurCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1381,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FocusEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onBlurCapture"
					}
				},
				{
					"id": 1286,
					"name": "onCanPlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1416,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCanPlay"
					}
				},
				{
					"id": 1287,
					"name": "onCanPlayCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1417,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCanPlayCapture"
					}
				},
				{
					"id": 1288,
					"name": "onCanPlayThrough",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCanPlayThrough"
					}
				},
				{
					"id": 1289,
					"name": "onCanPlayThroughCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCanPlayThroughCapture"
					}
				},
				{
					"id": 1263,
					"name": "onChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onChange"
					}
				},
				{
					"id": 1264,
					"name": "onChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onChangeCapture"
					}
				},
				{
					"id": 1184,
					"name": "onClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onClick"
					}
				},
				{
					"id": 1332,
					"name": "onClickCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onClickCapture"
					}
				},
				{
					"id": 1254,
					"name": "onCompositionEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1370,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCompositionEnd"
					}
				},
				{
					"id": 1255,
					"name": "onCompositionEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1371,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCompositionEndCapture"
					}
				},
				{
					"id": 1256,
					"name": "onCompositionStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1372,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCompositionStart"
					}
				},
				{
					"id": 1257,
					"name": "onCompositionStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1373,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCompositionStartCapture"
					}
				},
				{
					"id": 1258,
					"name": "onCompositionUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1374,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCompositionUpdate"
					}
				},
				{
					"id": 1259,
					"name": "onCompositionUpdateCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1375,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCompositionUpdateCapture"
					}
				},
				{
					"id": 1333,
					"name": "onContextMenu",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onContextMenu"
					}
				},
				{
					"id": 1334,
					"name": "onContextMenuCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onContextMenuCapture"
					}
				},
				{
					"id": 1248,
					"name": "onCopy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1362,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCopy"
					}
				},
				{
					"id": 1249,
					"name": "onCopyCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1363,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCopyCapture"
					}
				},
				{
					"id": 1250,
					"name": "onCut",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1364,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCut"
					}
				},
				{
					"id": 1251,
					"name": "onCutCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCutCapture"
					}
				},
				{
					"id": 1335,
					"name": "onDoubleClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDoubleClick"
					}
				},
				{
					"id": 1336,
					"name": "onDoubleClickCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDoubleClickCapture"
					}
				},
				{
					"id": 1337,
					"name": "onDrag",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDrag"
					}
				},
				{
					"id": 1338,
					"name": "onDragCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragCapture"
					}
				},
				{
					"id": 1339,
					"name": "onDragEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragEnd"
					}
				},
				{
					"id": 1340,
					"name": "onDragEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragEndCapture"
					}
				},
				{
					"id": 1341,
					"name": "onDragEnter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragEnter"
					}
				},
				{
					"id": 1342,
					"name": "onDragEnterCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragEnterCapture"
					}
				},
				{
					"id": 1343,
					"name": "onDragExit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragExit"
					}
				},
				{
					"id": 1344,
					"name": "onDragExitCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragExitCapture"
					}
				},
				{
					"id": 1345,
					"name": "onDragLeave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragLeave"
					}
				},
				{
					"id": 1346,
					"name": "onDragLeaveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragLeaveCapture"
					}
				},
				{
					"id": 1347,
					"name": "onDragOver",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1480,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragOver"
					}
				},
				{
					"id": 1348,
					"name": "onDragOverCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1481,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragOverCapture"
					}
				},
				{
					"id": 1349,
					"name": "onDragStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragStart"
					}
				},
				{
					"id": 1350,
					"name": "onDragStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragStartCapture"
					}
				},
				{
					"id": 1351,
					"name": "onDrop",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDrop"
					}
				},
				{
					"id": 1352,
					"name": "onDropCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1485,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDropCapture"
					}
				},
				{
					"id": 1290,
					"name": "onDurationChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDurationChange"
					}
				},
				{
					"id": 1291,
					"name": "onDurationChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDurationChangeCapture"
					}
				},
				{
					"id": 1292,
					"name": "onEmptied",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1422,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onEmptied"
					}
				},
				{
					"id": 1293,
					"name": "onEmptiedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1423,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onEmptiedCapture"
					}
				},
				{
					"id": 1294,
					"name": "onEncrypted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onEncrypted"
					}
				},
				{
					"id": 1295,
					"name": "onEncryptedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onEncryptedCapture"
					}
				},
				{
					"id": 1296,
					"name": "onEnded",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1426,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onEnded"
					}
				},
				{
					"id": 1297,
					"name": "onEndedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onEndedCapture"
					}
				},
				{
					"id": 1277,
					"name": "onError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onError"
					}
				},
				{
					"id": 1278,
					"name": "onErrorCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1401,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onErrorCapture"
					}
				},
				{
					"id": 1183,
					"name": "onFocus",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1378,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FocusEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onFocus"
					}
				},
				{
					"id": 1260,
					"name": "onFocusCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1379,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FocusEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onFocusCapture"
					}
				},
				{
					"id": 1391,
					"name": "onGotPointerCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1530,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onGotPointerCapture"
					}
				},
				{
					"id": 1392,
					"name": "onGotPointerCaptureCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 1267,
					"name": "onInput",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1388,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onInput"
					}
				},
				{
					"id": 1268,
					"name": "onInputCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1389,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onInputCapture"
					}
				},
				{
					"id": 1273,
					"name": "onInvalid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1394,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onInvalid"
					}
				},
				{
					"id": 1274,
					"name": "onInvalidCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onInvalidCapture"
					}
				},
				{
					"id": 1279,
					"name": "onKeyDown",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onKeyDown"
					}
				},
				{
					"id": 1280,
					"name": "onKeyDownCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onKeyDownCapture"
					}
				},
				{
					"id": 1181,
					"name": "onKeyPress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onKeyPress"
					}
				},
				{
					"id": 1281,
					"name": "onKeyPressCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onKeyPressCapture"
					}
				},
				{
					"id": 1282,
					"name": "onKeyUp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onKeyUp"
					}
				},
				{
					"id": 1283,
					"name": "onKeyUpCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onKeyUpCapture"
					}
				},
				{
					"id": 1275,
					"name": "onLoad",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoad"
					}
				},
				{
					"id": 1276,
					"name": "onLoadCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoadCapture"
					}
				},
				{
					"id": 1302,
					"name": "onLoadStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1432,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoadStart"
					}
				},
				{
					"id": 1303,
					"name": "onLoadStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1433,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoadStartCapture"
					}
				},
				{
					"id": 1298,
					"name": "onLoadedData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1428,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoadedData"
					}
				},
				{
					"id": 1299,
					"name": "onLoadedDataCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoadedDataCapture"
					}
				},
				{
					"id": 1300,
					"name": "onLoadedMetadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoadedMetadata"
					}
				},
				{
					"id": 1301,
					"name": "onLoadedMetadataCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoadedMetadataCapture"
					}
				},
				{
					"id": 1393,
					"name": "onLostPointerCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1532,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLostPointerCapture"
					}
				},
				{
					"id": 1394,
					"name": "onLostPointerCaptureCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 1353,
					"name": "onMouseDown",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1486,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseDown"
					}
				},
				{
					"id": 1354,
					"name": "onMouseDownCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseDownCapture"
					}
				},
				{
					"id": 1355,
					"name": "onMouseEnter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseEnter"
					}
				},
				{
					"id": 1356,
					"name": "onMouseLeave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1489,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseLeave"
					}
				},
				{
					"id": 1357,
					"name": "onMouseMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1490,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseMove"
					}
				},
				{
					"id": 1358,
					"name": "onMouseMoveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseMoveCapture"
					}
				},
				{
					"id": 1359,
					"name": "onMouseOut",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseOut"
					}
				},
				{
					"id": 1360,
					"name": "onMouseOutCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseOutCapture"
					}
				},
				{
					"id": 1361,
					"name": "onMouseOver",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseOver"
					}
				},
				{
					"id": 1362,
					"name": "onMouseOverCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseOverCapture"
					}
				},
				{
					"id": 1363,
					"name": "onMouseUp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseUp"
					}
				},
				{
					"id": 1364,
					"name": "onMouseUpCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseUpCapture"
					}
				},
				{
					"id": 1252,
					"name": "onPaste",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1366,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPaste"
					}
				},
				{
					"id": 1253,
					"name": "onPasteCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1367,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPasteCapture"
					}
				},
				{
					"id": 1304,
					"name": "onPause",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPause"
					}
				},
				{
					"id": 1305,
					"name": "onPauseCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPauseCapture"
					}
				},
				{
					"id": 1306,
					"name": "onPlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPlay"
					}
				},
				{
					"id": 1307,
					"name": "onPlayCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPlayCapture"
					}
				},
				{
					"id": 1308,
					"name": "onPlaying",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPlaying"
					}
				},
				{
					"id": 1309,
					"name": "onPlayingCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPlayingCapture"
					}
				},
				{
					"id": 1381,
					"name": "onPointerCancel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerCancel"
					}
				},
				{
					"id": 1382,
					"name": "onPointerCancelCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1521,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerCancelCapture"
					}
				},
				{
					"id": 1375,
					"name": "onPointerDown",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerDown"
					}
				},
				{
					"id": 1376,
					"name": "onPointerDownCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerDownCapture"
					}
				},
				{
					"id": 1383,
					"name": "onPointerEnter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1522,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerEnter"
					}
				},
				{
					"id": 1384,
					"name": "onPointerEnterCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1523,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerEnterCapture"
					}
				},
				{
					"id": 1385,
					"name": "onPointerLeave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerLeave"
					}
				},
				{
					"id": 1386,
					"name": "onPointerLeaveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1525,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerLeaveCapture"
					}
				},
				{
					"id": 1377,
					"name": "onPointerMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerMove"
					}
				},
				{
					"id": 1378,
					"name": "onPointerMoveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerMoveCapture"
					}
				},
				{
					"id": 1389,
					"name": "onPointerOut",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerOut"
					}
				},
				{
					"id": 1390,
					"name": "onPointerOutCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1529,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerOutCapture"
					}
				},
				{
					"id": 1387,
					"name": "onPointerOver",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1526,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerOver"
					}
				},
				{
					"id": 1388,
					"name": "onPointerOverCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerOverCapture"
					}
				},
				{
					"id": 1379,
					"name": "onPointerUp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1518,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerUp"
					}
				},
				{
					"id": 1380,
					"name": "onPointerUpCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1519,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerUpCapture"
					}
				},
				{
					"id": 1310,
					"name": "onProgress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onProgress"
					}
				},
				{
					"id": 1311,
					"name": "onProgressCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onProgressCapture"
					}
				},
				{
					"id": 1312,
					"name": "onRateChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onRateChange"
					}
				},
				{
					"id": 1313,
					"name": "onRateChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onRateChangeCapture"
					}
				},
				{
					"id": 1269,
					"name": "onReset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onReset"
					}
				},
				{
					"id": 1270,
					"name": "onResetCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onResetCapture"
					}
				},
				{
					"id": 1314,
					"name": "onResize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onResize"
					}
				},
				{
					"id": 1315,
					"name": "onResizeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onResizeCapture"
					}
				},
				{
					"id": 1395,
					"name": "onScroll",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.UIEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onScroll"
					}
				},
				{
					"id": 1396,
					"name": "onScrollCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1537,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.UIEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onScrollCapture"
					}
				},
				{
					"id": 1316,
					"name": "onSeeked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSeeked"
					}
				},
				{
					"id": 1317,
					"name": "onSeekedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1447,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSeekedCapture"
					}
				},
				{
					"id": 1318,
					"name": "onSeeking",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1448,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSeeking"
					}
				},
				{
					"id": 1319,
					"name": "onSeekingCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSeekingCapture"
					}
				},
				{
					"id": 1365,
					"name": "onSelect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1500,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSelect"
					}
				},
				{
					"id": 1366,
					"name": "onSelectCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSelectCapture"
					}
				},
				{
					"id": 1320,
					"name": "onStalled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onStalled"
					}
				},
				{
					"id": 1321,
					"name": "onStalledCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onStalledCapture"
					}
				},
				{
					"id": 1271,
					"name": "onSubmit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSubmit"
					}
				},
				{
					"id": 1272,
					"name": "onSubmitCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1393,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSubmitCapture"
					}
				},
				{
					"id": 1322,
					"name": "onSuspend",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSuspend"
					}
				},
				{
					"id": 1323,
					"name": "onSuspendCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSuspendCapture"
					}
				},
				{
					"id": 1324,
					"name": "onTimeUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTimeUpdate"
					}
				},
				{
					"id": 1325,
					"name": "onTimeUpdateCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTimeUpdateCapture"
					}
				},
				{
					"id": 1367,
					"name": "onTouchCancel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchCancel"
					}
				},
				{
					"id": 1368,
					"name": "onTouchCancelCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchCancelCapture"
					}
				},
				{
					"id": 1369,
					"name": "onTouchEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchEnd"
					}
				},
				{
					"id": 1370,
					"name": "onTouchEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchEndCapture"
					}
				},
				{
					"id": 1371,
					"name": "onTouchMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchMove"
					}
				},
				{
					"id": 1372,
					"name": "onTouchMoveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchMoveCapture"
					}
				},
				{
					"id": 1373,
					"name": "onTouchStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchStart"
					}
				},
				{
					"id": 1374,
					"name": "onTouchStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchStartCapture"
					}
				},
				{
					"id": 1405,
					"name": "onTransitionEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1552,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TransitionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTransitionEnd"
					}
				},
				{
					"id": 1406,
					"name": "onTransitionEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1553,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TransitionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTransitionEndCapture"
					}
				},
				{
					"id": 1326,
					"name": "onVolumeChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onVolumeChange"
					}
				},
				{
					"id": 1327,
					"name": "onVolumeChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onVolumeChangeCapture"
					}
				},
				{
					"id": 1328,
					"name": "onWaiting",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onWaiting"
					}
				},
				{
					"id": 1329,
					"name": "onWaitingCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onWaitingCapture"
					}
				},
				{
					"id": 1397,
					"name": "onWheel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.WheelEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onWheel"
					}
				},
				{
					"id": 1398,
					"name": "onWheelCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1541,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.WheelEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onWheelCapture"
					}
				},
				{
					"id": 1413,
					"name": "placeholder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1847,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.placeholder"
					}
				},
				{
					"id": 1191,
					"name": "prefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.prefix"
					}
				},
				{
					"id": 1419,
					"name": "property",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.property"
					}
				},
				{
					"id": 1415,
					"name": "radioGroup",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1856,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.radioGroup"
					}
				},
				{
					"id": 1175,
					"name": "ref",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set "
							},
							{
								"kind": "code",
								"text": "`ref.current`"
							},
							{
								"kind": "text",
								"text": " to "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " (or call the ref with "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if you passed a callback ref)."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 116,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.LegacyRef"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLDivElement"
								},
								"name": "HTMLDivElement",
								"package": "typescript"
							}
						],
						"name": "LegacyRef",
						"package": "@types/react",
						"qualifiedName": "React.LegacyRef"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.ref"
					}
				},
				{
					"id": 1420,
					"name": "rel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.rel"
					}
				},
				{
					"id": 1421,
					"name": "resource",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1869,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.resource"
					}
				},
				{
					"id": 1433,
					"name": "results",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1884,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.results"
					}
				},
				{
					"id": 1422,
					"name": "rev",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1870,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.rev"
					}
				},
				{
					"id": 1158,
					"name": "reverse",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Stack/Stack.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1159,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
											"line": 6,
											"character": 25,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
										}
									],
									"signatures": [
										{
											"id": 1160,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
													"line": 6,
													"character": 25,
													"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
												}
											],
											"parameters": [
												{
													"id": 1161,
													"name": "layoutContainerWidth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "OwnResponsiveStackProps.reverse"
					}
				},
				{
					"id": 1192,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.AriaRole"
						},
						"name": "AriaRole",
						"package": "@types/react",
						"qualifiedName": "React.AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.role"
					}
				},
				{
					"id": 1434,
					"name": "security",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.security"
					}
				},
				{
					"id": 1162,
					"name": "shrink",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Stack/Stack.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/node_modules/csstype/index.d.ts",
									"qualifiedName": "Property.FlexShrink"
								},
								"name": "FlexShrink",
								"package": "csstype",
								"qualifiedName": "Property.FlexShrink"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1163,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
											"line": 6,
											"character": 25,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
										}
									],
									"signatures": [
										{
											"id": 1164,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
													"line": 6,
													"character": 25,
													"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
												}
											],
											"parameters": [
												{
													"id": 1165,
													"name": "layoutContainerWidth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/@types/react/node_modules/csstype/index.d.ts",
															"qualifiedName": "Property.FlexShrink"
														},
														"name": "FlexShrink",
														"package": "csstype",
														"qualifiedName": "Property.FlexShrink"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "OwnResponsiveStackProps.shrink"
					}
				},
				{
					"id": 1176,
					"name": "slot",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1848,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.slot"
					}
				},
				{
					"id": 1414,
					"name": "spellCheck",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1849,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.spellCheck"
					}
				},
				{
					"id": 1166,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Stack/Stack.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
									"qualifiedName": "React.CSSProperties"
								},
								"name": "CSSProperties",
								"package": "@types/react",
								"qualifiedName": "React.CSSProperties"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1167,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
											"line": 6,
											"character": 25,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
										}
									],
									"signatures": [
										{
											"id": 1168,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
													"line": 6,
													"character": 25,
													"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
												}
											],
											"parameters": [
												{
													"id": 1169,
													"name": "layoutContainerWidth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
															"qualifiedName": "React.CSSProperties"
														},
														"name": "CSSProperties",
														"package": "@types/react",
														"qualifiedName": "React.CSSProperties"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "OwnResponsiveStackProps.style"
					}
				},
				{
					"id": 1409,
					"name": "suppressContentEditableWarning",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1832,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.suppressContentEditableWarning"
					}
				},
				{
					"id": 1410,
					"name": "suppressHydrationWarning",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1833,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.suppressHydrationWarning"
					}
				},
				{
					"id": 1180,
					"name": "tabIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.tabIndex"
					}
				},
				{
					"id": 1177,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.title"
					}
				},
				{
					"id": 1189,
					"name": "translate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "no"
							},
							{
								"type": "literal",
								"value": "yes"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.translate"
					}
				},
				{
					"id": 1423,
					"name": "typeof",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1871,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.typeof"
					}
				},
				{
					"id": 1435,
					"name": "unselectable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1886,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.unselectable"
					}
				},
				{
					"id": 1424,
					"name": "vocab",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1872,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.vocab"
					}
				},
				{
					"id": 1170,
					"name": "wrap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Stack/Stack.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "reverse"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1171,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
											"line": 6,
											"character": 25,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
										}
									],
									"signatures": [
										{
											"id": 1172,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
													"line": 6,
													"character": 25,
													"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
												}
											],
											"parameters": [
												{
													"id": 1173,
													"name": "layoutContainerWidth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "literal",
														"value": "reverse"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "OwnResponsiveStackProps.wrap"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1416,
						1185,
						1122,
						1197,
						1198,
						1199,
						1200,
						1201,
						1202,
						1203,
						1204,
						1205,
						1206,
						1207,
						1208,
						1209,
						1210,
						1211,
						1212,
						1213,
						1214,
						1215,
						1216,
						1217,
						1218,
						1219,
						1220,
						1221,
						1222,
						1223,
						1224,
						1225,
						1226,
						1227,
						1228,
						1229,
						1230,
						1231,
						1232,
						1233,
						1234,
						1235,
						1236,
						1237,
						1238,
						1239,
						1240,
						1241,
						1242,
						1243,
						1244,
						1425,
						1426,
						1411,
						1427,
						1126,
						1130,
						1179,
						1196,
						1174,
						1193,
						1412,
						1245,
						1417,
						1407,
						1408,
						1186,
						1134,
						1187,
						1138,
						1142,
						1146,
						1178,
						1150,
						1190,
						1418,
						1194,
						1436,
						1431,
						1428,
						1432,
						1429,
						1430,
						1154,
						1182,
						1188,
						1195,
						1284,
						1285,
						1401,
						1402,
						1403,
						1404,
						1399,
						1400,
						1330,
						1331,
						1265,
						1266,
						1261,
						1262,
						1286,
						1287,
						1288,
						1289,
						1263,
						1264,
						1184,
						1332,
						1254,
						1255,
						1256,
						1257,
						1258,
						1259,
						1333,
						1334,
						1248,
						1249,
						1250,
						1251,
						1335,
						1336,
						1337,
						1338,
						1339,
						1340,
						1341,
						1342,
						1343,
						1344,
						1345,
						1346,
						1347,
						1348,
						1349,
						1350,
						1351,
						1352,
						1290,
						1291,
						1292,
						1293,
						1294,
						1295,
						1296,
						1297,
						1277,
						1278,
						1183,
						1260,
						1391,
						1392,
						1267,
						1268,
						1273,
						1274,
						1279,
						1280,
						1181,
						1281,
						1282,
						1283,
						1275,
						1276,
						1302,
						1303,
						1298,
						1299,
						1300,
						1301,
						1393,
						1394,
						1353,
						1354,
						1355,
						1356,
						1357,
						1358,
						1359,
						1360,
						1361,
						1362,
						1363,
						1364,
						1252,
						1253,
						1304,
						1305,
						1306,
						1307,
						1308,
						1309,
						1381,
						1382,
						1375,
						1376,
						1383,
						1384,
						1385,
						1386,
						1377,
						1378,
						1389,
						1390,
						1387,
						1388,
						1379,
						1380,
						1310,
						1311,
						1312,
						1313,
						1269,
						1270,
						1314,
						1315,
						1395,
						1396,
						1316,
						1317,
						1318,
						1319,
						1365,
						1366,
						1320,
						1321,
						1271,
						1272,
						1322,
						1323,
						1324,
						1325,
						1367,
						1368,
						1369,
						1370,
						1371,
						1372,
						1373,
						1374,
						1405,
						1406,
						1326,
						1327,
						1328,
						1329,
						1397,
						1398,
						1413,
						1191,
						1419,
						1415,
						1175,
						1420,
						1421,
						1433,
						1422,
						1158,
						1192,
						1434,
						1162,
						1176,
						1414,
						1166,
						1409,
						1410,
						1180,
						1177,
						1189,
						1423,
						1435,
						1424,
						1170
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
					"line": 11,
					"character": 17,
					"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L11"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1120,
					"name": "OwnResponsiveStackProps",
					"package": "@contember/layout"
				},
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Omit"
					},
					"typeArguments": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "div"
							},
							"objectType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
									"qualifiedName": "__global.JSX.IntrinsicElements"
								},
								"name": "JSX.IntrinsicElements",
								"package": "@types/react",
								"qualifiedName": "__global.JSX.IntrinsicElements"
							}
						},
						{
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": {
									"sourceFileName": "../ui/src/components/Stack/Stack.tsx",
									"qualifiedName": "StackOwnProps"
								},
								"name": "StackOwnProps",
								"package": "@contember/ui"
							}
						}
					],
					"name": "Omit",
					"package": "typescript"
				}
			]
		},
		{
			"id": 1120,
			"name": "OwnResponsiveStackProps",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
					"line": 9,
					"character": 12,
					"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L9"
				}
			],
			"type": {
				"type": "reference",
				"target": 1115,
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../ui/src/components/Stack/Stack.tsx",
							"qualifiedName": "StackOwnProps"
						},
						"name": "StackOwnProps",
						"package": "@contember/ui"
					}
				],
				"name": "ResponsiveProps",
				"package": "@contember/layout"
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 1121,
					"name": "ResponsiveStackProps"
				}
			]
		},
		{
			"id": 1115,
			"name": "ResponsiveProps",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
					"line": 5,
					"character": 12,
					"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L5"
				}
			],
			"typeParameters": [
				{
					"id": 1119,
					"name": "P",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "K",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": -1,
						"name": "P",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": -1,
								"name": "P",
								"refersToTypeParameter": true
							}
						},
						{
							"type": "reflection",
							"declaration": {
								"id": 1116,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
										"line": 6,
										"character": 25,
										"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L6"
									}
								],
								"signatures": [
									{
										"id": 1117,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"parameters": [
											{
												"id": 1118,
												"name": "layoutContainerWidth",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"type": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": -1,
												"name": "K",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": -1,
												"name": "P",
												"refersToTypeParameter": true
											}
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 1437,
			"name": "ResponsiveStack",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/layout/src/responsive-stack/ResponsiveStack.tsx",
					"line": 16,
					"character": 13,
					"url": "https://github.com/contember/admin/blob/027fac6dc/packages/layout/src/responsive-stack/ResponsiveStack.tsx#L16"
				}
			],
			"signatures": [
				{
					"id": 1438,
					"name": "ResponsiveStack",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 329,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 1439,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1121,
												"name": "ResponsiveStackProps",
												"package": "@contember/layout"
											},
											{
												"type": "literal",
												"value": "ref"
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
											"qualifiedName": "React.RefAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLDivElement"
												},
												"name": "HTMLDivElement",
												"package": "typescript"
											}
										],
										"name": "RefAttributes",
										"package": "@types/react",
										"qualifiedName": "React.RefAttributes"
									}
								]
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
									"qualifiedName": "React.ReactElement"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
													"qualifiedName": "React.JSXElementConstructor"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor",
												"package": "@types/react",
												"qualifiedName": "React.JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement",
								"package": "@types/react",
								"qualifiedName": "React.ReactElement"
							}
						]
					}
				}
			]
		}
	],
	"symbolIdMap": {}
}