{
	"id": 0,
	"name": "@contember/admin",
	"kind": 1,
	"flags": {},
	"variant": "project",
	"children": [
		{
			"id": 18128,
			"name": "HTMLSpanElementProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 18153,
					"name": "about",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.about"
					}
				},
				{
					"id": 18133,
					"name": "accessKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1836,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.accessKey"
					}
				},
				{
					"id": 18178,
					"name": "aria-activedescendant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1570,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-activedescendant"
					}
				},
				{
					"id": 18179,
					"name": "aria-atomic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1572,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-atomic"
					}
				},
				{
					"id": 18180,
					"name": "aria-autocomplete",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1577,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-autocomplete"
					}
				},
				{
					"id": 18181,
					"name": "aria-busy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1579,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-busy"
					}
				},
				{
					"id": 18182,
					"name": "aria-checked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1584,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-checked"
					}
				},
				{
					"id": 18183,
					"name": "aria-colcount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of columns in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-colindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1589,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-colcount"
					}
				},
				{
					"id": 18184,
					"name": "aria-colindex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1594,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-colindex"
					}
				},
				{
					"id": 18185,
					"name": "aria-colspan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1599,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-colspan"
					}
				},
				{
					"id": 18186,
					"name": "aria-controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-owns."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1604,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-controls"
					}
				},
				{
					"id": 18187,
					"name": "aria-current",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the element that represents the current item within a container or set of related elements."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1606,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-current"
					}
				},
				{
					"id": 18188,
					"name": "aria-describedby",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that describes the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1611,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-describedby"
					}
				},
				{
					"id": 18189,
					"name": "aria-details",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides a detailed, extended description for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1616,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-details"
					}
				},
				{
					"id": 18190,
					"name": "aria-disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-hidden"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-readonly."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1621,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-disabled"
					}
				},
				{
					"id": 18191,
					"name": "aria-dropeffect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1626,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-dropeffect"
					}
				},
				{
					"id": 18192,
					"name": "aria-errormessage",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides an error message for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-invalid"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-describedby."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1631,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-errormessage"
					}
				},
				{
					"id": 18193,
					"name": "aria-expanded",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1633,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-expanded"
					}
				},
				{
					"id": 18194,
					"name": "aria-flowto",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1638,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-flowto"
					}
				},
				{
					"id": 18195,
					"name": "aria-grabbed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1643,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-grabbed"
					}
				},
				{
					"id": 18196,
					"name": "aria-haspopup",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1645,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-haspopup"
					}
				},
				{
					"id": 18197,
					"name": "aria-hidden",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element is exposed to an accessibility API."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1650,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-hidden"
					}
				},
				{
					"id": 18198,
					"name": "aria-invalid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the entered value does not conform to the format expected by the application."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-errormessage."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1655,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-invalid"
					}
				},
				{
					"id": 18199,
					"name": "aria-keyshortcuts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1657,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-keyshortcuts"
					}
				},
				{
					"id": 18200,
					"name": "aria-label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a string value that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1662,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-label"
					}
				},
				{
					"id": 18201,
					"name": "aria-labelledby",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1667,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-labelledby"
					}
				},
				{
					"id": 18202,
					"name": "aria-level",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the hierarchical level of an element within a structure."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1669,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-level"
					}
				},
				{
					"id": 18203,
					"name": "aria-live",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1671,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-live"
					}
				},
				{
					"id": 18204,
					"name": "aria-modal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether an element is modal when displayed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1673,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-modal"
					}
				},
				{
					"id": 18205,
					"name": "aria-multiline",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1675,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-multiline"
					}
				},
				{
					"id": 18206,
					"name": "aria-multiselectable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the user may select more than one item from the current selectable descendants."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-multiselectable"
					}
				},
				{
					"id": 18207,
					"name": "aria-orientation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1679,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-orientation"
					}
				},
				{
					"id": 18208,
					"name": "aria-owns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-controls."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1685,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-owns"
					}
				},
				{
					"id": 18209,
					"name": "aria-placeholder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1690,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-placeholder"
					}
				},
				{
					"id": 18210,
					"name": "aria-posinset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-setsize."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1695,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-posinset"
					}
				},
				{
					"id": 18211,
					"name": "aria-pressed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"pressed\" state of toggle buttons."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1700,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-pressed"
					}
				},
				{
					"id": 18212,
					"name": "aria-readonly",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is not editable, but is otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1705,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-readonly"
					}
				},
				{
					"id": 18213,
					"name": "aria-relevant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-atomic."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1710,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-relevant"
					}
				},
				{
					"id": 18214,
					"name": "aria-required",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that user input is required on the element before a form may be submitted."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1712,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-required"
					}
				},
				{
					"id": 18215,
					"name": "aria-roledescription",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a human-readable, author-localized description for the role of an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1714,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-roledescription"
					}
				},
				{
					"id": 18216,
					"name": "aria-rowcount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of rows in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-rowindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1719,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-rowcount"
					}
				},
				{
					"id": 18217,
					"name": "aria-rowindex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1724,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-rowindex"
					}
				},
				{
					"id": 18218,
					"name": "aria-rowspan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1729,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-rowspan"
					}
				},
				{
					"id": 18219,
					"name": "aria-selected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"selected\" state of various widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1734,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-selected"
					}
				},
				{
					"id": 18220,
					"name": "aria-setsize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-posinset."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-setsize"
					}
				},
				{
					"id": 18221,
					"name": "aria-sort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1741,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-sort"
					}
				},
				{
					"id": 18222,
					"name": "aria-valuemax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the maximum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1743,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-valuemax"
					}
				},
				{
					"id": 18223,
					"name": "aria-valuemin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the minimum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1745,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-valuemin"
					}
				},
				{
					"id": 18224,
					"name": "aria-valuenow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the current value for a range widget."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-valuetext."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1750,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-valuenow"
					}
				},
				{
					"id": 18225,
					"name": "aria-valuetext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1752,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.aria-valuetext"
					}
				},
				{
					"id": 18164,
					"name": "autoCapitalize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 18165,
					"name": "autoCorrect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1876,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 18134,
					"name": "autoFocus",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1837,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.autoFocus"
					}
				},
				{
					"id": 18166,
					"name": "autoSave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1877,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.autoSave"
					}
				},
				{
					"id": 18226,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1354,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.children"
					}
				},
				{
					"id": 18135,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1838,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.className"
					}
				},
				{
					"id": 18167,
					"name": "color",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1878,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.color"
					}
				},
				{
					"id": 18154,
					"name": "content",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.content"
					}
				},
				{
					"id": 18136,
					"name": "contentEditable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1839,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							{
								"type": "literal",
								"value": "inherit"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.contentEditable"
					}
				},
				{
					"id": 18137,
					"name": "contextMenu",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1840,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.contextMenu"
					}
				},
				{
					"id": 18227,
					"name": "dangerouslySetInnerHTML",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1355,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 18228,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 18229,
									"name": "__html",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
											"line": 1358,
											"character": 12
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/react/ts5.0/global.d.ts",
													"qualifiedName": "TrustedHTML"
												},
												"name": "TrustedHTML",
												"package": "@types/react"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18229
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 1355,
									"character": 34
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 18155,
					"name": "datatype",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.datatype"
					}
				},
				{
					"id": 18129,
					"name": "defaultChecked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1830,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 18130,
					"name": "defaultValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1831,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.defaultValue"
					}
				},
				{
					"id": 18138,
					"name": "dir",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1841,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.dir"
					}
				},
				{
					"id": 18139,
					"name": "draggable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1842,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.draggable"
					}
				},
				{
					"id": 18140,
					"name": "hidden",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1843,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.hidden"
					}
				},
				{
					"id": 18141,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1844,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.id"
					}
				},
				{
					"id": 18156,
					"name": "inlist",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.inlist"
					}
				},
				{
					"id": 18176,
					"name": "inputMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1893,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.inputMode"
					}
				},
				{
					"id": 18177,
					"name": "is",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1898,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.is"
					}
				},
				{
					"id": 18171,
					"name": "itemID",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1882,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.itemID"
					}
				},
				{
					"id": 18168,
					"name": "itemProp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1879,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.itemProp"
					}
				},
				{
					"id": 18172,
					"name": "itemRef",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1883,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.itemRef"
					}
				},
				{
					"id": 18169,
					"name": "itemScope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1880,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.itemScope"
					}
				},
				{
					"id": 18170,
					"name": "itemType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1881,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.itemType"
					}
				},
				{
					"id": 18142,
					"name": "lang",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1845,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.lang"
					}
				},
				{
					"id": 18143,
					"name": "nonce",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1846,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.nonce"
					}
				},
				{
					"id": 18268,
					"name": "onAbort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onAbort"
					}
				},
				{
					"id": 18269,
					"name": "onAbortCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onAbortCapture"
					}
				},
				{
					"id": 18386,
					"name": "onAnimationEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1546,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onAnimationEnd"
					}
				},
				{
					"id": 18387,
					"name": "onAnimationEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1547,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 18388,
					"name": "onAnimationIteration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1548,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onAnimationIteration"
					}
				},
				{
					"id": 18389,
					"name": "onAnimationIterationCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1549,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 18384,
					"name": "onAnimationStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1544,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onAnimationStart"
					}
				},
				{
					"id": 18385,
					"name": "onAnimationStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1545,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 18314,
					"name": "onAuxClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onAuxClick"
					}
				},
				{
					"id": 18315,
					"name": "onAuxClickCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 18248,
					"name": "onBeforeInput",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onBeforeInput"
					}
				},
				{
					"id": 18249,
					"name": "onBeforeInputCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1387,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 18244,
					"name": "onBlur",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1380,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FocusEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onBlur"
					}
				},
				{
					"id": 18245,
					"name": "onBlurCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1381,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FocusEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onBlurCapture"
					}
				},
				{
					"id": 18270,
					"name": "onCanPlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1416,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onCanPlay"
					}
				},
				{
					"id": 18271,
					"name": "onCanPlayCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1417,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 18272,
					"name": "onCanPlayThrough",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 18273,
					"name": "onCanPlayThroughCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 18246,
					"name": "onChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onChange"
					}
				},
				{
					"id": 18247,
					"name": "onChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onChangeCapture"
					}
				},
				{
					"id": 18316,
					"name": "onClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onClick"
					}
				},
				{
					"id": 18317,
					"name": "onClickCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onClickCapture"
					}
				},
				{
					"id": 18236,
					"name": "onCompositionEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1370,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onCompositionEnd"
					}
				},
				{
					"id": 18237,
					"name": "onCompositionEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1371,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 18238,
					"name": "onCompositionStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1372,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onCompositionStart"
					}
				},
				{
					"id": 18239,
					"name": "onCompositionStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1373,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 18240,
					"name": "onCompositionUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1374,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 18241,
					"name": "onCompositionUpdateCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1375,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 18318,
					"name": "onContextMenu",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onContextMenu"
					}
				},
				{
					"id": 18319,
					"name": "onContextMenuCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 18230,
					"name": "onCopy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1362,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onCopy"
					}
				},
				{
					"id": 18231,
					"name": "onCopyCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1363,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onCopyCapture"
					}
				},
				{
					"id": 18232,
					"name": "onCut",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1364,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onCut"
					}
				},
				{
					"id": 18233,
					"name": "onCutCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onCutCapture"
					}
				},
				{
					"id": 18320,
					"name": "onDoubleClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDoubleClick"
					}
				},
				{
					"id": 18321,
					"name": "onDoubleClickCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 18322,
					"name": "onDrag",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDrag"
					}
				},
				{
					"id": 18323,
					"name": "onDragCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDragCapture"
					}
				},
				{
					"id": 18324,
					"name": "onDragEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDragEnd"
					}
				},
				{
					"id": 18325,
					"name": "onDragEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDragEndCapture"
					}
				},
				{
					"id": 18326,
					"name": "onDragEnter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDragEnter"
					}
				},
				{
					"id": 18327,
					"name": "onDragEnterCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 18328,
					"name": "onDragExit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDragExit"
					}
				},
				{
					"id": 18329,
					"name": "onDragExitCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDragExitCapture"
					}
				},
				{
					"id": 18330,
					"name": "onDragLeave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDragLeave"
					}
				},
				{
					"id": 18331,
					"name": "onDragLeaveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 18332,
					"name": "onDragOver",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1480,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDragOver"
					}
				},
				{
					"id": 18333,
					"name": "onDragOverCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1481,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDragOverCapture"
					}
				},
				{
					"id": 18334,
					"name": "onDragStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDragStart"
					}
				},
				{
					"id": 18335,
					"name": "onDragStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDragStartCapture"
					}
				},
				{
					"id": 18336,
					"name": "onDrop",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDrop"
					}
				},
				{
					"id": 18337,
					"name": "onDropCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1485,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDropCapture"
					}
				},
				{
					"id": 18274,
					"name": "onDurationChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDurationChange"
					}
				},
				{
					"id": 18275,
					"name": "onDurationChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 18276,
					"name": "onEmptied",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1422,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onEmptied"
					}
				},
				{
					"id": 18277,
					"name": "onEmptiedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1423,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 18278,
					"name": "onEncrypted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onEncrypted"
					}
				},
				{
					"id": 18279,
					"name": "onEncryptedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 18280,
					"name": "onEnded",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1426,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onEnded"
					}
				},
				{
					"id": 18281,
					"name": "onEndedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onEndedCapture"
					}
				},
				{
					"id": 18260,
					"name": "onError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onError"
					}
				},
				{
					"id": 18261,
					"name": "onErrorCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1401,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onErrorCapture"
					}
				},
				{
					"id": 18242,
					"name": "onFocus",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1378,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FocusEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onFocus"
					}
				},
				{
					"id": 18243,
					"name": "onFocusCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1379,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FocusEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onFocusCapture"
					}
				},
				{
					"id": 18376,
					"name": "onGotPointerCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1530,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 18377,
					"name": "onGotPointerCaptureCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 18250,
					"name": "onInput",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1388,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onInput"
					}
				},
				{
					"id": 18251,
					"name": "onInputCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1389,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onInputCapture"
					}
				},
				{
					"id": 18256,
					"name": "onInvalid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1394,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onInvalid"
					}
				},
				{
					"id": 18257,
					"name": "onInvalidCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onInvalidCapture"
					}
				},
				{
					"id": 18262,
					"name": "onKeyDown",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onKeyDown"
					}
				},
				{
					"id": 18263,
					"name": "onKeyDownCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 18264,
					"name": "onKeyPress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onKeyPress"
					}
				},
				{
					"id": 18265,
					"name": "onKeyPressCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 18266,
					"name": "onKeyUp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onKeyUp"
					}
				},
				{
					"id": 18267,
					"name": "onKeyUpCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 18258,
					"name": "onLoad",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onLoad"
					}
				},
				{
					"id": 18259,
					"name": "onLoadCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onLoadCapture"
					}
				},
				{
					"id": 18286,
					"name": "onLoadStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1432,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onLoadStart"
					}
				},
				{
					"id": 18287,
					"name": "onLoadStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1433,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 18282,
					"name": "onLoadedData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1428,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onLoadedData"
					}
				},
				{
					"id": 18283,
					"name": "onLoadedDataCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 18284,
					"name": "onLoadedMetadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 18285,
					"name": "onLoadedMetadataCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 18378,
					"name": "onLostPointerCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1532,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 18379,
					"name": "onLostPointerCaptureCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 18338,
					"name": "onMouseDown",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1486,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onMouseDown"
					}
				},
				{
					"id": 18339,
					"name": "onMouseDownCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 18340,
					"name": "onMouseEnter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onMouseEnter"
					}
				},
				{
					"id": 18341,
					"name": "onMouseLeave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1489,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onMouseLeave"
					}
				},
				{
					"id": 18342,
					"name": "onMouseMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1490,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onMouseMove"
					}
				},
				{
					"id": 18343,
					"name": "onMouseMoveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 18344,
					"name": "onMouseOut",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onMouseOut"
					}
				},
				{
					"id": 18345,
					"name": "onMouseOutCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 18346,
					"name": "onMouseOver",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onMouseOver"
					}
				},
				{
					"id": 18347,
					"name": "onMouseOverCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 18348,
					"name": "onMouseUp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onMouseUp"
					}
				},
				{
					"id": 18349,
					"name": "onMouseUpCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 18234,
					"name": "onPaste",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1366,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPaste"
					}
				},
				{
					"id": 18235,
					"name": "onPasteCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1367,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPasteCapture"
					}
				},
				{
					"id": 18288,
					"name": "onPause",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPause"
					}
				},
				{
					"id": 18289,
					"name": "onPauseCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPauseCapture"
					}
				},
				{
					"id": 18290,
					"name": "onPlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPlay"
					}
				},
				{
					"id": 18291,
					"name": "onPlayCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPlayCapture"
					}
				},
				{
					"id": 18292,
					"name": "onPlaying",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPlaying"
					}
				},
				{
					"id": 18293,
					"name": "onPlayingCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPlayingCapture"
					}
				},
				{
					"id": 18366,
					"name": "onPointerCancel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerCancel"
					}
				},
				{
					"id": 18367,
					"name": "onPointerCancelCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1521,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 18360,
					"name": "onPointerDown",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerDown"
					}
				},
				{
					"id": 18361,
					"name": "onPointerDownCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 18368,
					"name": "onPointerEnter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1522,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerEnter"
					}
				},
				{
					"id": 18369,
					"name": "onPointerEnterCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1523,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 18370,
					"name": "onPointerLeave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerLeave"
					}
				},
				{
					"id": 18371,
					"name": "onPointerLeaveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1525,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 18362,
					"name": "onPointerMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerMove"
					}
				},
				{
					"id": 18363,
					"name": "onPointerMoveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 18374,
					"name": "onPointerOut",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerOut"
					}
				},
				{
					"id": 18375,
					"name": "onPointerOutCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1529,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 18372,
					"name": "onPointerOver",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1526,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerOver"
					}
				},
				{
					"id": 18373,
					"name": "onPointerOverCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 18364,
					"name": "onPointerUp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1518,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerUp"
					}
				},
				{
					"id": 18365,
					"name": "onPointerUpCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1519,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 18294,
					"name": "onProgress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onProgress"
					}
				},
				{
					"id": 18295,
					"name": "onProgressCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onProgressCapture"
					}
				},
				{
					"id": 18296,
					"name": "onRateChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onRateChange"
					}
				},
				{
					"id": 18297,
					"name": "onRateChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 18252,
					"name": "onReset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onReset"
					}
				},
				{
					"id": 18253,
					"name": "onResetCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onResetCapture"
					}
				},
				{
					"id": 18298,
					"name": "onResize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onResize"
					}
				},
				{
					"id": 18299,
					"name": "onResizeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onResizeCapture"
					}
				},
				{
					"id": 18380,
					"name": "onScroll",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.UIEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onScroll"
					}
				},
				{
					"id": 18381,
					"name": "onScrollCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1537,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.UIEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onScrollCapture"
					}
				},
				{
					"id": 18300,
					"name": "onSeeked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onSeeked"
					}
				},
				{
					"id": 18301,
					"name": "onSeekedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1447,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onSeekedCapture"
					}
				},
				{
					"id": 18302,
					"name": "onSeeking",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1448,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onSeeking"
					}
				},
				{
					"id": 18303,
					"name": "onSeekingCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onSeekingCapture"
					}
				},
				{
					"id": 18350,
					"name": "onSelect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1500,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onSelect"
					}
				},
				{
					"id": 18351,
					"name": "onSelectCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onSelectCapture"
					}
				},
				{
					"id": 18304,
					"name": "onStalled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onStalled"
					}
				},
				{
					"id": 18305,
					"name": "onStalledCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onStalledCapture"
					}
				},
				{
					"id": 18254,
					"name": "onSubmit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onSubmit"
					}
				},
				{
					"id": 18255,
					"name": "onSubmitCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1393,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onSubmitCapture"
					}
				},
				{
					"id": 18306,
					"name": "onSuspend",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onSuspend"
					}
				},
				{
					"id": 18307,
					"name": "onSuspendCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onSuspendCapture"
					}
				},
				{
					"id": 18308,
					"name": "onTimeUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onTimeUpdate"
					}
				},
				{
					"id": 18309,
					"name": "onTimeUpdateCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 18352,
					"name": "onTouchCancel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onTouchCancel"
					}
				},
				{
					"id": 18353,
					"name": "onTouchCancelCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 18354,
					"name": "onTouchEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onTouchEnd"
					}
				},
				{
					"id": 18355,
					"name": "onTouchEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 18356,
					"name": "onTouchMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onTouchMove"
					}
				},
				{
					"id": 18357,
					"name": "onTouchMoveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 18358,
					"name": "onTouchStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onTouchStart"
					}
				},
				{
					"id": 18359,
					"name": "onTouchStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 18390,
					"name": "onTransitionEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1552,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TransitionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onTransitionEnd"
					}
				},
				{
					"id": 18391,
					"name": "onTransitionEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1553,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.TransitionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 18310,
					"name": "onVolumeChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onVolumeChange"
					}
				},
				{
					"id": 18311,
					"name": "onVolumeChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 18312,
					"name": "onWaiting",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onWaiting"
					}
				},
				{
					"id": 18313,
					"name": "onWaitingCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onWaitingCapture"
					}
				},
				{
					"id": 18382,
					"name": "onWheel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.WheelEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onWheel"
					}
				},
				{
					"id": 18383,
					"name": "onWheelCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1541,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.WheelEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLSpanElement"
								},
								"name": "HTMLSpanElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.onWheelCapture"
					}
				},
				{
					"id": 18144,
					"name": "placeholder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1847,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.placeholder"
					}
				},
				{
					"id": 18157,
					"name": "prefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.prefix"
					}
				},
				{
					"id": 18158,
					"name": "property",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.property"
					}
				},
				{
					"id": 18151,
					"name": "radioGroup",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1856,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.radioGroup"
					}
				},
				{
					"id": 18159,
					"name": "rel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.rel"
					}
				},
				{
					"id": 18160,
					"name": "resource",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1869,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.resource"
					}
				},
				{
					"id": 18173,
					"name": "results",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1884,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.results"
					}
				},
				{
					"id": 18161,
					"name": "rev",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1870,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.rev"
					}
				},
				{
					"id": 18152,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.AriaRole"
						},
						"name": "AriaRole",
						"package": "@types/react",
						"qualifiedName": "React.AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.role"
					}
				},
				{
					"id": 18174,
					"name": "security",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.security"
					}
				},
				{
					"id": 18145,
					"name": "slot",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1848,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.slot"
					}
				},
				{
					"id": 18146,
					"name": "spellCheck",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1849,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.spellCheck"
					}
				},
				{
					"id": 18147,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.style"
					}
				},
				{
					"id": 18131,
					"name": "suppressContentEditableWarning",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1832,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 18132,
					"name": "suppressHydrationWarning",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1833,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 18148,
					"name": "tabIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.tabIndex"
					}
				},
				{
					"id": 18149,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.title"
					}
				},
				{
					"id": 18150,
					"name": "translate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "yes"
							},
							{
								"type": "literal",
								"value": "no"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.translate"
					}
				},
				{
					"id": 18162,
					"name": "typeof",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1871,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.typeof"
					}
				},
				{
					"id": 18175,
					"name": "unselectable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1886,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.unselectable"
					}
				},
				{
					"id": 18163,
					"name": "vocab",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 1872,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.HTMLAttributes.vocab"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						18153,
						18133,
						18178,
						18179,
						18180,
						18181,
						18182,
						18183,
						18184,
						18185,
						18186,
						18187,
						18188,
						18189,
						18190,
						18191,
						18192,
						18193,
						18194,
						18195,
						18196,
						18197,
						18198,
						18199,
						18200,
						18201,
						18202,
						18203,
						18204,
						18205,
						18206,
						18207,
						18208,
						18209,
						18210,
						18211,
						18212,
						18213,
						18214,
						18215,
						18216,
						18217,
						18218,
						18219,
						18220,
						18221,
						18222,
						18223,
						18224,
						18225,
						18164,
						18165,
						18134,
						18166,
						18226,
						18135,
						18167,
						18154,
						18136,
						18137,
						18227,
						18155,
						18129,
						18130,
						18138,
						18139,
						18140,
						18141,
						18156,
						18176,
						18177,
						18171,
						18168,
						18172,
						18169,
						18170,
						18142,
						18143,
						18268,
						18269,
						18386,
						18387,
						18388,
						18389,
						18384,
						18385,
						18314,
						18315,
						18248,
						18249,
						18244,
						18245,
						18270,
						18271,
						18272,
						18273,
						18246,
						18247,
						18316,
						18317,
						18236,
						18237,
						18238,
						18239,
						18240,
						18241,
						18318,
						18319,
						18230,
						18231,
						18232,
						18233,
						18320,
						18321,
						18322,
						18323,
						18324,
						18325,
						18326,
						18327,
						18328,
						18329,
						18330,
						18331,
						18332,
						18333,
						18334,
						18335,
						18336,
						18337,
						18274,
						18275,
						18276,
						18277,
						18278,
						18279,
						18280,
						18281,
						18260,
						18261,
						18242,
						18243,
						18376,
						18377,
						18250,
						18251,
						18256,
						18257,
						18262,
						18263,
						18264,
						18265,
						18266,
						18267,
						18258,
						18259,
						18286,
						18287,
						18282,
						18283,
						18284,
						18285,
						18378,
						18379,
						18338,
						18339,
						18340,
						18341,
						18342,
						18343,
						18344,
						18345,
						18346,
						18347,
						18348,
						18349,
						18234,
						18235,
						18288,
						18289,
						18290,
						18291,
						18292,
						18293,
						18366,
						18367,
						18360,
						18361,
						18368,
						18369,
						18370,
						18371,
						18362,
						18363,
						18374,
						18375,
						18372,
						18373,
						18364,
						18365,
						18294,
						18295,
						18296,
						18297,
						18252,
						18253,
						18298,
						18299,
						18380,
						18381,
						18300,
						18301,
						18302,
						18303,
						18350,
						18351,
						18304,
						18305,
						18254,
						18255,
						18306,
						18307,
						18308,
						18309,
						18352,
						18353,
						18354,
						18355,
						18356,
						18357,
						18358,
						18359,
						18390,
						18391,
						18310,
						18311,
						18312,
						18313,
						18382,
						18383,
						18144,
						18157,
						18158,
						18151,
						18159,
						18160,
						18173,
						18161,
						18152,
						18174,
						18145,
						18146,
						18147,
						18131,
						18132,
						18148,
						18149,
						18150,
						18162,
						18175,
						18163
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/types/HTMLProps.d.ts",
					"line": 18,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
						"qualifiedName": "React.HTMLAttributes"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
								"qualifiedName": "HTMLSpanElement"
							},
							"name": "HTMLSpanElement",
							"package": "typescript"
						}
					],
					"name": "HTMLAttributes",
					"package": "@types/react",
					"qualifiedName": "React.HTMLAttributes"
				}
			]
		},
		{
			"id": 15722,
			"name": "LabelOwnProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15729,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Typography/Label.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				},
				{
					"id": 15724,
					"name": "isActive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Typography/Label.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15723,
					"name": "isDisabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Typography/Label.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15725,
					"name": "isFocused",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Typography/Label.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15726,
					"name": "isHover",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Typography/Label.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15727,
					"name": "size",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Typography/Label.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 18677,
						"name": "Size",
						"package": "@contember/ui"
					}
				},
				{
					"id": 15728,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Typography/Label.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "bold"
							},
							{
								"type": "literal",
								"value": "default"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15729,
						15724,
						15723,
						15725,
						15726,
						15727,
						15728
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Typography/Label.d.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 15731,
			"name": "Label",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Typography/Label.d.ts",
					"line": 16,
					"character": 21
				}
			],
			"signatures": [
				{
					"id": 15732,
					"name": "Label",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 329,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 15733,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 15722,
										"name": "LabelOwnProps",
										"package": "@contember/ui"
									},
									{
										"type": "reference",
										"target": 18128,
										"name": "HTMLSpanElementProps",
										"package": "@contember/ui"
									}
								]
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
									"qualifiedName": "React.ReactElement"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
													"qualifiedName": "React.JSXElementConstructor"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor",
												"package": "@types/react",
												"qualifiedName": "React.JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement",
								"package": "@types/react",
								"qualifiedName": "React.ReactElement"
							}
						]
					}
				}
			]
		}
	],
	"symbolIdMap": {}
}