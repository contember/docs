{
	"id": 0,
	"name": "@contember/admin",
	"kind": 1,
	"flags": {},
	"variant": "project",
	"children": [
		{
			"id": 15158,
			"name": "ControlConstraintProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15159,
					"name": "max",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						]
					}
				},
				{
					"id": 15160,
					"name": "maxLength",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 15161,
					"name": "min",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						]
					}
				},
				{
					"id": 15162,
					"name": "minLength",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 15163,
					"name": "pattern",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15164,
					"name": "step",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 46,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15159,
						15160,
						15161,
						15162,
						15163,
						15164
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 40,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 15165,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 15138,
			"name": "ControlDisplayProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15139,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15140,
					"name": "distinction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 15943,
						"name": "ControlDistinction",
						"package": "@contember/ui"
					}
				},
				{
					"id": 15141,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15142,
					"name": "intent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 18672,
						"name": "Intent",
						"package": "@contember/ui"
					}
				},
				{
					"id": 15147,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15146,
					"name": "placeholder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15143,
					"name": "scheme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 18673,
						"name": "Scheme",
						"package": "@contember/ui"
					}
				},
				{
					"id": 15144,
					"name": "size",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 18677,
						"name": "Size",
						"package": "@contember/ui"
					}
				},
				{
					"id": 15148,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					}
				},
				{
					"id": 15145,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "undefined"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15139,
						15140,
						15141,
						15142,
						15147,
						15146,
						15143,
						15144,
						15148,
						15145
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 22,
					"character": 17
				}
			]
		},
		{
			"id": 15127,
			"name": "ControlFocusProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15128,
					"name": "onBlur",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 15129,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
									"line": 18,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 15130,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
											"line": 18,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 15131,
					"name": "onFocus",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 15132,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
									"line": 19,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 15133,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
											"line": 19,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 15134,
					"name": "onFocusChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 15135,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
									"line": 20,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 15136,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
											"line": 20,
											"character": 20
										}
									],
									"parameters": [
										{
											"id": 15137,
											"name": "isFocused",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15128,
						15131,
						15134
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 17,
					"character": 17
				}
			]
		},
		{
			"id": 15119,
			"name": "ControlStateProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15120,
					"name": "active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15121,
					"name": "disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15125,
					"name": "focused",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15126,
					"name": "hovered",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15122,
					"name": "loading",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15123,
					"name": "readOnly",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15124,
					"name": "required",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15120,
						15121,
						15125,
						15126,
						15122,
						15123,
						15124
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 8,
					"character": 17
				}
			]
		},
		{
			"id": 15149,
			"name": "ControlValueProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15150,
					"name": "defaultValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						]
					}
				},
				{
					"id": 15155,
					"name": "notNull",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15151,
					"name": "onChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 15152,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
									"line": 36,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 15153,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
											"line": 36,
											"character": 15
										}
									],
									"parameters": [
										{
											"id": 15154,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": -1,
														"name": "V",
														"refersToTypeParameter": true
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 15156,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15150,
						15155,
						15151,
						15156
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 34,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 15157,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 13088,
			"name": "ErrorListProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13089,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/ErrorList/ErrorList.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 15950,
						"name": "FieldErrors",
						"package": "@contember/ui"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13089
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/ErrorList/ErrorList.d.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 9729,
			"name": "JsonArray",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9999,
					"name": "[unscopables]",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Is an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
							"line": 97,
							"character": 13
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 10000,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 10037,
									"name": "[unscopables]",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isExternal": true,
										"isOptional": true,
										"isReadonly": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Is an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
											"line": 97,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 10001,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Gets or sets the length of the array. This is a number one higher than the highest index in the array."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1305,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 10036,
									"name": "[iterator]",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 58,
											"character": 4
										}
									]
								},
								{
									"id": 10033,
									"name": "at",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2022.array.d.ts",
											"line": 24,
											"character": 4
										}
									]
								},
								{
									"id": 10006,
									"name": "concat",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1329,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1335,
											"character": 4
										}
									]
								},
								{
									"id": 10026,
									"name": "copyWithin",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 62,
											"character": 4
										}
									]
								},
								{
									"id": 10027,
									"name": "entries",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 63,
											"character": 4
										}
									]
								},
								{
									"id": 10016,
									"name": "every",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1412,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1421,
											"character": 4
										}
									]
								},
								{
									"id": 10025,
									"name": "fill",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 51,
											"character": 4
										}
									]
								},
								{
									"id": 10020,
									"name": "filter",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1448,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1454,
											"character": 4
										}
									]
								},
								{
									"id": 10023,
									"name": "find",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 29,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 30,
											"character": 4
										}
									]
								},
								{
									"id": 10024,
									"name": "findIndex",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 41,
											"character": 4
										}
									]
								},
								{
									"id": 10034,
									"name": "findLast",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
											"line": 29,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
											"line": 30,
											"character": 4
										}
									]
								},
								{
									"id": 10035,
									"name": "findLastIndex",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
											"line": 41,
											"character": 4
										}
									]
								},
								{
									"id": 10032,
									"name": "flat",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
											"line": 79,
											"character": 4
										}
									]
								},
								{
									"id": 10031,
									"name": "flatMap",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
											"line": 68,
											"character": 4
										}
									]
								},
								{
									"id": 10018,
									"name": "forEach",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1436,
											"character": 4
										}
									]
								},
								{
									"id": 10030,
									"name": "includes",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2016.array.include.d.ts",
											"line": 25,
											"character": 4
										}
									]
								},
								{
									"id": 10014,
									"name": "indexOf",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1397,
											"character": 4
										}
									]
								},
								{
									"id": 10007,
									"name": "join",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1340,
											"character": 4
										}
									]
								},
								{
									"id": 10028,
									"name": "keys",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 68,
											"character": 4
										}
									]
								},
								{
									"id": 10015,
									"name": "lastIndexOf",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1403,
											"character": 4
										}
									]
								},
								{
									"id": 10019,
									"name": "map",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1442,
											"character": 4
										}
									]
								},
								{
									"id": 10004,
									"name": "pop",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1318,
											"character": 4
										}
									]
								},
								{
									"id": 10005,
									"name": "push",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1323,
											"character": 4
										}
									]
								},
								{
									"id": 10021,
									"name": "reduce",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1460,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1461,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1467,
											"character": 4
										}
									]
								},
								{
									"id": 10022,
									"name": "reduceRight",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1473,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1474,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1480,
											"character": 4
										}
									]
								},
								{
									"id": 10008,
									"name": "reverse",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1345,
											"character": 4
										}
									]
								},
								{
									"id": 10009,
									"name": "shift",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1350,
											"character": 4
										}
									]
								},
								{
									"id": 10010,
									"name": "slice",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1360,
											"character": 4
										}
									]
								},
								{
									"id": 10017,
									"name": "some",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1430,
											"character": 4
										}
									]
								},
								{
									"id": 10011,
									"name": "sort",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1371,
											"character": 4
										}
									]
								},
								{
									"id": 10012,
									"name": "splice",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1378,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1386,
											"character": 4
										}
									]
								},
								{
									"id": 10003,
									"name": "toLocaleString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1313,
											"character": 4
										}
									]
								},
								{
									"id": 10002,
									"name": "toString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1309,
											"character": 4
										}
									]
								},
								{
									"id": 10013,
									"name": "unshift",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1391,
											"character": 4
										}
									]
								},
								{
									"id": 10029,
									"name": "values",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 73,
											"character": 4
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10037,
										10001
									]
								},
								{
									"title": "Methods",
									"children": [
										10036,
										10033,
										10006,
										10026,
										10027,
										10016,
										10025,
										10020,
										10023,
										10024,
										10034,
										10035,
										10032,
										10031,
										10018,
										10030,
										10014,
										10007,
										10028,
										10015,
										10019,
										10004,
										10005,
										10021,
										10022,
										10008,
										10009,
										10010,
										10017,
										10011,
										10012,
										10003,
										10002,
										10013,
										10029
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
									"line": 97,
									"character": 35
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.[unscopables]"
					}
				},
				{
					"id": 9730,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets or sets the length of the array. This is a number one higher than the highest index in the array."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1305,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.length"
					}
				},
				{
					"id": 9997,
					"name": "[iterator]",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 58,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9998,
							"name": "[iterator]",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Iterator"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 58,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "IterableIterator"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10039,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								],
								"name": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.[iterator]"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.[iterator]"
					}
				},
				{
					"id": 9967,
					"name": "at",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2022.array.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9968,
							"name": "at",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the item located at the specified index."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2022.array.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9969,
									"name": "index",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The zero-based index of the desired code unit. A negative index will count back from the last item."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 10039,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.at"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.at"
					}
				},
				{
					"id": 9740,
					"name": "concat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1329,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1335,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9741,
							"name": "concat",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1329,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9742,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Additional arrays and/or items to add to the end of the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "ConcatArray"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 10039,
													"typeArguments": [
														{
															"type": "reference",
															"target": -1,
															"name": "Ext",
															"refersToTypeParameter": true
														}
													],
													"name": "JsonValue",
													"package": "@contember/binding"
												}
											],
											"name": "ConcatArray",
											"package": "typescript"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10039,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "Ext",
											"refersToTypeParameter": true
										}
									],
									"name": "JsonValue",
									"package": "@contember/binding"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.concat"
							}
						},
						{
							"id": 9743,
							"name": "concat",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1335,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9744,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Additional arrays and/or items to add to the end of the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 10039,
													"typeArguments": [
														{
															"type": "reference",
															"target": -1,
															"name": "Ext",
															"refersToTypeParameter": true
														}
													],
													"name": "JsonValue",
													"package": "@contember/binding"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "ConcatArray"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": 10039,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "Ext",
																	"refersToTypeParameter": true
																}
															],
															"name": "JsonValue",
															"package": "@contember/binding"
														}
													],
													"name": "ConcatArray",
													"package": "typescript"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10039,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "Ext",
											"refersToTypeParameter": true
										}
									],
									"name": "JsonValue",
									"package": "@contember/binding"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.concat"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.concat"
					}
				},
				{
					"id": 9934,
					"name": "copyWithin",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 62,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9935,
							"name": "copyWithin",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 62,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9936,
									"name": "target",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If target is negative, it is treated as length+target where length is the\nlength of the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 9937,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If start is negative, it is treated as length+start. If end is negative, it\nis treated as length+end."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 9938,
									"name": "end",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If not specified, length of the this object is used as its default value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 9729,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Ext",
										"refersToTypeParameter": true
									}
								],
								"name": "JsonArray",
								"package": "@contember/binding"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.copyWithin"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.copyWithin"
					}
				},
				{
					"id": 9939,
					"name": "entries",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9940,
							"name": "entries",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an iterable of key, value pairs for every entry in the array"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "IterableIterator"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": 10039,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "Ext",
														"refersToTypeParameter": true
													}
												],
												"name": "JsonValue",
												"package": "@contember/binding"
											}
										]
									}
								],
								"name": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.entries"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.entries"
					}
				},
				{
					"id": 9782,
					"name": "every",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1412,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1421,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9783,
							"name": "every",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether all the members of an array satisfy the specified test."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1412,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9784,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 9785,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9786,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1412,
													"character": 34
												}
											],
											"signatures": [
												{
													"id": 9787,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1412,
															"character": 34
														}
													],
													"parameters": [
														{
															"id": 9788,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9789,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9790,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"target": -1,
															"name": "S",
															"refersToTypeParameter": true
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 9791,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "S",
										"refersToTypeParameter": true
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.every"
							}
						},
						{
							"id": 9792,
							"name": "every",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether all the members of an array satisfy the specified test."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1421,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9793,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9794,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1421,
													"character": 21
												}
											],
											"signatures": [
												{
													"id": 9795,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1421,
															"character": 21
														}
													],
													"parameters": [
														{
															"id": 9796,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9797,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9798,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 9799,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.every"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.every"
					}
				},
				{
					"id": 9929,
					"name": "fill",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 51,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9930,
							"name": "fill",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Changes all array elements from "
									},
									{
										"kind": "code",
										"text": "`start`"
									},
									{
										"kind": "text",
										"text": " to "
									},
									{
										"kind": "code",
										"text": "`end`"
									},
									{
										"kind": "text",
										"text": " index to a static "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " and returns the modified array"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9931,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "value to fill array section with"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10039,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								},
								{
									"id": 9932,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "index to start filling the array at. If start is negative, it is treated as\nlength+start where length is the length of the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 9933,
									"name": "end",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "index to stop filling the array at. If end is negative, it is treated as\nlength+end."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 9729,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Ext",
										"refersToTypeParameter": true
									}
								],
								"name": "JsonArray",
								"package": "@contember/binding"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.fill"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.fill"
					}
				},
				{
					"id": 9828,
					"name": "filter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1448,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1454,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9829,
							"name": "filter",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the elements of an array that meet the condition specified in a callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1448,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9830,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 9831,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9832,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1448,
													"character": 35
												}
											],
											"signatures": [
												{
													"id": 9833,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1448,
															"character": 35
														}
													],
													"parameters": [
														{
															"id": 9834,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9835,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9836,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"target": -1,
															"name": "S",
															"refersToTypeParameter": true
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 9837,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "S",
									"refersToTypeParameter": true
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.filter"
							}
						},
						{
							"id": 9838,
							"name": "filter",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the elements of an array that meet the condition specified in a callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1454,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9839,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9840,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1454,
													"character": 22
												}
											],
											"signatures": [
												{
													"id": 9841,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1454,
															"character": 22
														}
													],
													"parameters": [
														{
															"id": 9842,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9843,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9844,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 9845,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10039,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "Ext",
											"refersToTypeParameter": true
										}
									],
									"name": "JsonValue",
									"package": "@contember/binding"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.filter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.filter"
					}
				},
				{
					"id": 9902,
					"name": "find",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 29,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9903,
							"name": "find",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the value of the first element in the array where predicate is true, and undefined\notherwise."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9904,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 9905,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found, find\nimmediately returns that element value. Otherwise, find returns undefined."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9906,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 29,
													"character": 33
												}
											],
											"signatures": [
												{
													"id": 9907,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
															"line": 29,
															"character": 33
														}
													],
													"parameters": [
														{
															"id": 9908,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9909,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9910,
															"name": "obj",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"target": -1,
															"name": "S",
															"refersToTypeParameter": true
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 9911,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "S",
										"refersToTypeParameter": true
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.find"
							}
						},
						{
							"id": 9912,
							"name": "find",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9913,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9914,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 30,
													"character": 20
												}
											],
											"signatures": [
												{
													"id": 9915,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
															"line": 30,
															"character": 20
														}
													],
													"parameters": [
														{
															"id": 9916,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9917,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9918,
															"name": "obj",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 9919,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 10039,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.find"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.find"
					}
				},
				{
					"id": 9920,
					"name": "findIndex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9921,
							"name": "findIndex",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the first element in the array where predicate is true, and -1\notherwise."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9922,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found,\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9923,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 41,
													"character": 25
												}
											],
											"signatures": [
												{
													"id": 9924,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
															"line": 41,
															"character": 25
														}
													],
													"parameters": [
														{
															"id": 9925,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9926,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9927,
															"name": "obj",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 9928,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.findIndex"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.findIndex"
					}
				},
				{
					"id": 9970,
					"name": "findLast",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
							"line": 29,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9971,
							"name": "findLast",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the value of the last element in the array where predicate is true, and undefined\notherwise."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9972,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 9973,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "findLast calls predicate once for each element of the array, in descending\norder, until it finds one where predicate returns true. If such an element is found, findLast\nimmediately returns that element value. Otherwise, findLast returns undefined."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9974,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
													"line": 29,
													"character": 37
												}
											],
											"signatures": [
												{
													"id": 9975,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
															"line": 29,
															"character": 37
														}
													],
													"parameters": [
														{
															"id": 9976,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9977,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9978,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"target": -1,
															"name": "S",
															"refersToTypeParameter": true
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 9979,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "S",
										"refersToTypeParameter": true
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.findLast"
							}
						},
						{
							"id": 9980,
							"name": "findLast",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9981,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9982,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
													"line": 30,
													"character": 24
												}
											],
											"signatures": [
												{
													"id": 9983,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
															"line": 30,
															"character": 24
														}
													],
													"parameters": [
														{
															"id": 9984,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9985,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9986,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 9987,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 10039,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.findLast"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.findLast"
					}
				},
				{
					"id": 9988,
					"name": "findLastIndex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9989,
							"name": "findLastIndex",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the last element in the array where predicate is true, and -1\notherwise."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9990,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "findLastIndex calls predicate once for each element of the array, in descending\norder, until it finds one where predicate returns true. If such an element is found,\nfindLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9991,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
													"line": 41,
													"character": 29
												}
											],
											"signatures": [
												{
													"id": 9992,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
															"line": 41,
															"character": 29
														}
													],
													"parameters": [
														{
															"id": 9993,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9994,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9995,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 9996,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.findLastIndex"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.findLastIndex"
					}
				},
				{
					"id": 9961,
					"name": "flat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
							"line": 79,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9962,
							"name": "flat",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a new array with all sub-array elements concatenated into it recursively up to the\nspecified depth."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
									"line": 79,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9963,
									"name": "A",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 9964,
									"name": "D",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"default": {
										"type": "literal",
										"value": 1
									}
								}
							],
							"parameters": [
								{
									"id": 9965,
									"name": "this",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "A",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 9966,
									"name": "depth",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum recursion depth"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "D",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es2019.array.d.ts",
										"qualifiedName": "FlatArray"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "A",
											"refersToTypeParameter": true
										},
										{
											"type": "reference",
											"target": -1,
											"name": "D",
											"refersToTypeParameter": true
										}
									],
									"name": "FlatArray",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.flat"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.flat"
					}
				},
				{
					"id": 9949,
					"name": "flatMap",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
							"line": 68,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9950,
							"name": "flatMap",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls a defined callback function on each element of an array. Then, flattens the result into\na new array.\nThis is identical to a map followed by flat with depth 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9951,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 9952,
									"name": "This",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"parameters": [
								{
									"id": 9953,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The flatMap method calls the\ncallback function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9954,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
													"line": 69,
													"character": 18
												}
											],
											"signatures": [
												{
													"id": 9955,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
															"line": 69,
															"character": 18
														}
													],
													"parameters": [
														{
															"id": 9956,
															"name": "this",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "This",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 9957,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9958,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9959,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": -1,
																"name": "U",
																"refersToTypeParameter": true
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "array",
																	"elementType": {
																		"type": "reference",
																		"target": -1,
																		"name": "U",
																		"refersToTypeParameter": true
																	}
																}
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"id": 9960,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the callback function. If\nthisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "This",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "U",
									"refersToTypeParameter": true
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.flatMap"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.flatMap"
					}
				},
				{
					"id": 9809,
					"name": "forEach",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1436,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9810,
							"name": "forEach",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Performs the specified action for each element in an array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1436,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9811,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9812,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1436,
													"character": 24
												}
											],
											"signatures": [
												{
													"id": 9813,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1436,
															"character": 24
														}
													],
													"parameters": [
														{
															"id": 9814,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9815,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9816,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 9817,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.forEach"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.forEach"
					}
				},
				{
					"id": 9945,
					"name": "includes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2016.array.include.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9946,
							"name": "includes",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether an array includes a certain element, returning true or false as appropriate."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2016.array.include.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9947,
									"name": "searchElement",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The element to search for."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10039,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								},
								{
									"id": 9948,
									"name": "fromIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The position in this array at which to begin searching for searchElement."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.includes"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.includes"
					}
				},
				{
					"id": 9774,
					"name": "indexOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1397,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9775,
							"name": "indexOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the first occurrence of a value in an array, or -1 if it is not present."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1397,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9776,
									"name": "searchElement",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to locate in the array."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10039,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								},
								{
									"id": 9777,
									"name": "fromIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.indexOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.indexOf"
					}
				},
				{
					"id": 9745,
					"name": "join",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1340,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9746,
							"name": "join",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds all the elements of an array into a string, separated by the specified separator string."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1340,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9747,
									"name": "separator",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.join"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.join"
					}
				},
				{
					"id": 9941,
					"name": "keys",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 68,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9942,
							"name": "keys",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an iterable of keys in the array"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "IterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.keys"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.keys"
					}
				},
				{
					"id": 9778,
					"name": "lastIndexOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1403,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9779,
							"name": "lastIndexOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1403,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9780,
									"name": "searchElement",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to locate in the array."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10039,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								},
								{
									"id": 9781,
									"name": "fromIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.lastIndexOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.lastIndexOf"
					}
				},
				{
					"id": 9818,
					"name": "map",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1442,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9819,
							"name": "map",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls a defined callback function on each element of an array, and returns an array that contains the results."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1442,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9820,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 9821,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9822,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1442,
													"character": 23
												}
											],
											"signatures": [
												{
													"id": 9823,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1442,
															"character": 23
														}
													],
													"parameters": [
														{
															"id": 9824,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9825,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9826,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": -1,
														"name": "U",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 9827,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "U",
									"refersToTypeParameter": true
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.map"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.map"
					}
				},
				{
					"id": 9735,
					"name": "pop",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1318,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9736,
							"name": "pop",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the last element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1318,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 10039,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.pop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.pop"
					}
				},
				{
					"id": 9737,
					"name": "push",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1323,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9738,
							"name": "push",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Appends new elements to the end of an array, and returns the new length of the array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1323,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9739,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "New elements to add to the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10039,
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "Ext",
													"refersToTypeParameter": true
												}
											],
											"name": "JsonValue",
											"package": "@contember/binding"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.push"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.push"
					}
				},
				{
					"id": 9846,
					"name": "reduce",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1460,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1461,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1467,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9847,
							"name": "reduce",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1460,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9848,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9849,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1460,
													"character": 23
												}
											],
											"signatures": [
												{
													"id": 9850,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1460,
															"character": 23
														}
													],
													"parameters": [
														{
															"id": 9851,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9852,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9853,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9854,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 10039,
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "Ext",
																"refersToTypeParameter": true
															}
														],
														"name": "JsonValue",
														"package": "@contember/binding"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 10039,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Ext",
										"refersToTypeParameter": true
									}
								],
								"name": "JsonValue",
								"package": "@contember/binding"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduce"
							}
						},
						{
							"id": 9855,
							"name": "reduce",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1461,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9856,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9857,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1461,
													"character": 23
												}
											],
											"signatures": [
												{
													"id": 9858,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1461,
															"character": 23
														}
													],
													"parameters": [
														{
															"id": 9859,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9860,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9861,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9862,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 10039,
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "Ext",
																"refersToTypeParameter": true
															}
														],
														"name": "JsonValue",
														"package": "@contember/binding"
													}
												}
											]
										}
									}
								},
								{
									"id": 9863,
									"name": "initialValue",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": 10039,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 10039,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Ext",
										"refersToTypeParameter": true
									}
								],
								"name": "JsonValue",
								"package": "@contember/binding"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduce"
							}
						},
						{
							"id": 9864,
							"name": "reduce",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1467,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9865,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 9866,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9867,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1467,
													"character": 26
												}
											],
											"signatures": [
												{
													"id": 9868,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1467,
															"character": 26
														}
													],
													"parameters": [
														{
															"id": 9869,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "U",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 9870,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9871,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9872,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": -1,
														"name": "U",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 9873,
									"name": "initialValue",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "U",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"name": "U",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduce"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.reduce"
					}
				},
				{
					"id": 9874,
					"name": "reduceRight",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1473,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1474,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1480,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9875,
							"name": "reduceRight",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1473,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9876,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9877,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1473,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 9878,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1473,
															"character": 28
														}
													],
													"parameters": [
														{
															"id": 9879,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9880,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9881,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9882,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 10039,
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "Ext",
																"refersToTypeParameter": true
															}
														],
														"name": "JsonValue",
														"package": "@contember/binding"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 10039,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Ext",
										"refersToTypeParameter": true
									}
								],
								"name": "JsonValue",
								"package": "@contember/binding"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduceRight"
							}
						},
						{
							"id": 9883,
							"name": "reduceRight",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1474,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9884,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9885,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1474,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 9886,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1474,
															"character": 28
														}
													],
													"parameters": [
														{
															"id": 9887,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9888,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9889,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9890,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 10039,
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "Ext",
																"refersToTypeParameter": true
															}
														],
														"name": "JsonValue",
														"package": "@contember/binding"
													}
												}
											]
										}
									}
								},
								{
									"id": 9891,
									"name": "initialValue",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": 10039,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 10039,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Ext",
										"refersToTypeParameter": true
									}
								],
								"name": "JsonValue",
								"package": "@contember/binding"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduceRight"
							}
						},
						{
							"id": 9892,
							"name": "reduceRight",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1480,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9893,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 9894,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9895,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1480,
													"character": 31
												}
											],
											"signatures": [
												{
													"id": 9896,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1480,
															"character": 31
														}
													],
													"parameters": [
														{
															"id": 9897,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "U",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 9898,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9899,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9900,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": -1,
														"name": "U",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 9901,
									"name": "initialValue",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "U",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"name": "U",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduceRight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.reduceRight"
					}
				},
				{
					"id": 9748,
					"name": "reverse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1345,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9749,
							"name": "reverse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reverses the elements in an array in place.\nThis method mutates the array and returns a reference to the same array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1345,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10039,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "Ext",
											"refersToTypeParameter": true
										}
									],
									"name": "JsonValue",
									"package": "@contember/binding"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reverse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.reverse"
					}
				},
				{
					"id": 9750,
					"name": "shift",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1350,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9751,
							"name": "shift",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the first element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1350,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 10039,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.shift"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.shift"
					}
				},
				{
					"id": 9752,
					"name": "slice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1360,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9753,
							"name": "slice",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of a section of an array.\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\nFor example, -2 refers to the second to last element of the array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1360,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9754,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The beginning index of the specified portion of the array.\nIf start is undefined, then the slice begins at index 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 9755,
									"name": "end",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The end index of the specified portion of the array. This is exclusive of the element at the index 'end'.\nIf end is undefined, then the slice extends to the end of the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10039,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "Ext",
											"refersToTypeParameter": true
										}
									],
									"name": "JsonValue",
									"package": "@contember/binding"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.slice"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.slice"
					}
				},
				{
					"id": 9800,
					"name": "some",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1430,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9801,
							"name": "some",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the specified callback function returns true for any element of an array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1430,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9802,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The some method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value true, or until the end of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9803,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1430,
													"character": 20
												}
											],
											"signatures": [
												{
													"id": 9804,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1430,
															"character": 20
														}
													],
													"parameters": [
														{
															"id": 9805,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9806,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9807,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 10039,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 9808,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.some"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.some"
					}
				},
				{
					"id": 9756,
					"name": "sort",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1371,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9757,
							"name": "sort",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sorts an array in place.\nThis method mutates the array and returns a reference to the same array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1371,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9758,
									"name": "compareFn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function used to determine the order of the elements. It is expected to return\na negative value if the first argument is less than the second argument, zero if they're equal, and a positive\nvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n"
											},
											{
												"kind": "code",
												"text": "```ts\n[11,2,22,1].sort((a, b) => a - b)\n```"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9759,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1371,
													"character": 21
												}
											],
											"signatures": [
												{
													"id": 9760,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1371,
															"character": 21
														}
													],
													"parameters": [
														{
															"id": 9761,
															"name": "a",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9762,
															"name": "b",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 10039,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 9729,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Ext",
										"refersToTypeParameter": true
									}
								],
								"name": "JsonArray",
								"package": "@contember/binding"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.sort"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.sort"
					}
				},
				{
					"id": 9763,
					"name": "splice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1378,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1386,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9764,
							"name": "splice",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array containing the elements that were deleted."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1378,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9765,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The zero-based location in the array from which to start removing elements."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 9766,
									"name": "deleteCount",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number of elements to remove."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10039,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "Ext",
											"refersToTypeParameter": true
										}
									],
									"name": "JsonValue",
									"package": "@contember/binding"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.splice"
							}
						},
						{
							"id": 9767,
							"name": "splice",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array containing the elements that were deleted."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1386,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9768,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The zero-based location in the array from which to start removing elements."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 9769,
									"name": "deleteCount",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number of elements to remove."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 9770,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Elements to insert into the array in place of the deleted elements."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10039,
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "Ext",
													"refersToTypeParameter": true
												}
											],
											"name": "JsonValue",
											"package": "@contember/binding"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10039,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "Ext",
											"refersToTypeParameter": true
										}
									],
									"name": "JsonValue",
									"package": "@contember/binding"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.splice"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.splice"
					}
				},
				{
					"id": 9733,
					"name": "toLocaleString",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1313,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9734,
							"name": "toLocaleString",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a string representation of an array. The elements are converted to string using their toLocaleString methods."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1313,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.toLocaleString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.toLocaleString"
					}
				},
				{
					"id": 9731,
					"name": "toString",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1309,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9732,
							"name": "toString",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a string representation of an array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1309,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.toString"
					}
				},
				{
					"id": 9771,
					"name": "unshift",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1391,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9772,
							"name": "unshift",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Inserts new elements at the start of an array, and returns the new length of the array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1391,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9773,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Elements to insert at the start of the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10039,
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "Ext",
													"refersToTypeParameter": true
												}
											],
											"name": "JsonValue",
											"package": "@contember/binding"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.unshift"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.unshift"
					}
				},
				{
					"id": 9943,
					"name": "values",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 73,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9944,
							"name": "values",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an iterable of values in the array"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "IterableIterator"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10039,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								],
								"name": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.values"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.values"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9999,
						9730
					]
				},
				{
					"title": "Methods",
					"children": [
						9997,
						9967,
						9740,
						9934,
						9939,
						9782,
						9929,
						9828,
						9902,
						9920,
						9970,
						9988,
						9961,
						9949,
						9809,
						9945,
						9774,
						9745,
						9941,
						9778,
						9818,
						9735,
						9737,
						9846,
						9874,
						9748,
						9750,
						9752,
						9800,
						9756,
						9763,
						9733,
						9731,
						9771,
						9943
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/binding/dist/types/treeParameters/primitives/Json.d.ts",
					"line": 4,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 10038,
					"name": "Ext",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Array"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 10039,
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "Ext",
									"refersToTypeParameter": true
								}
							],
							"name": "JsonValue",
							"package": "@contember/binding"
						}
					],
					"name": "Array",
					"package": "typescript"
				}
			]
		},
		{
			"id": 9725,
			"name": "JsonObject",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/binding/dist/types/treeParameters/primitives/Json.d.ts",
					"line": 1,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 9726,
					"name": "Ext",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"indexSignature": {
				"id": 9727,
				"name": "__index",
				"variant": "signature",
				"kind": 8192,
				"flags": {},
				"sources": [
					{
						"fileName": "packages/binding/dist/types/treeParameters/primitives/Json.d.ts",
						"line": 2,
						"character": 4
					}
				],
				"parameters": [
					{
						"id": 9728,
						"name": "key",
						"variant": "param",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reference",
					"target": 10039,
					"typeArguments": [
						{
							"type": "reference",
							"target": -1,
							"name": "Ext",
							"refersToTypeParameter": true
						}
					],
					"name": "JsonValue",
					"package": "@contember/binding"
				}
			}
		},
		{
			"id": 15113,
			"name": "ValidationStateProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15114,
					"name": "onValidationStateChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 15115,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
									"line": 5,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 15116,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
											"line": 5,
											"character": 30
										}
									],
									"parameters": [
										{
											"id": 15117,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 15118,
					"name": "validationState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 18678,
						"name": "ValidationState",
						"package": "@contember/ui"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15114,
						15118
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 4,
					"character": 17
				}
			]
		},
		{
			"id": 15166,
			"name": "ControlProps",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 48,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 15167,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 15138,
						"name": "ControlDisplayProps",
						"package": "@contember/ui"
					},
					{
						"type": "reference",
						"target": 15113,
						"name": "ValidationStateProps",
						"package": "@contember/ui"
					},
					{
						"type": "reference",
						"target": 15119,
						"name": "ControlStateProps",
						"package": "@contember/ui"
					},
					{
						"type": "reference",
						"target": 15127,
						"name": "ControlFocusProps",
						"package": "@contember/ui"
					},
					{
						"type": "reference",
						"target": 15158,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						],
						"name": "ControlConstraintProps",
						"package": "@contember/ui"
					},
					{
						"type": "reference",
						"target": 15149,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						],
						"name": "ControlValueProps",
						"package": "@contember/ui"
					}
				]
			}
		},
		{
			"id": 14095,
			"name": "FieldContainerProps",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 14096,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14097,
									"name": "children",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 7,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								},
								{
									"id": 14113,
									"name": "className",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 25,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14098,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 8,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								},
								{
									"id": 14099,
									"name": "direction",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "Use "
													},
													{
														"kind": "code",
														"text": "`horizontal`"
													},
													{
														"kind": "text",
														"text": " instead"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 10,
											"character": 4
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "direction"
										},
										"objectType": {
											"type": "reference",
											"target": 15568,
											"name": "StackProps",
											"package": "@contember/ui"
										}
									}
								},
								{
									"id": 14102,
									"name": "display",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 13,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "inline"
											},
											{
												"type": "literal",
												"value": "block"
											}
										]
									}
								},
								{
									"id": 14100,
									"name": "evenly",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 11,
											"character": 4
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "evenly"
										},
										"objectType": {
											"type": "reference",
											"target": 15568,
											"name": "StackProps",
											"package": "@contember/ui"
										}
									}
								},
								{
									"id": 14101,
									"name": "gap",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 12,
											"character": 4
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "gap"
										},
										"objectType": {
											"type": "reference",
											"target": 15568,
											"name": "StackProps",
											"package": "@contember/ui"
										}
									}
								},
								{
									"id": 14103,
									"name": "horizontal",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 14,
											"character": 4
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "horizontal"
										},
										"objectType": {
											"type": "reference",
											"target": 15568,
											"name": "StackProps",
											"package": "@contember/ui"
										}
									}
								},
								{
									"id": 14104,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 15,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								},
								{
									"id": 14105,
									"name": "labelDescription",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 16,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								},
								{
									"id": 14106,
									"name": "labelPosition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 17,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 14135,
										"name": "FieldContainerLabelPosition",
										"package": "@contember/ui"
									}
								},
								{
									"id": 14108,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 20,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 14111,
									"name": "reverse",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 23,
											"character": 4
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "reverse"
										},
										"objectType": {
											"type": "reference",
											"target": 15568,
											"name": "StackProps",
											"package": "@contember/ui"
										}
									}
								},
								{
									"id": 14109,
									"name": "size",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 21,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 18677,
										"name": "Size",
										"package": "@contember/ui"
									}
								},
								{
									"id": 14112,
									"name": "style",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 24,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
											"qualifiedName": "React.CSSProperties"
										},
										"name": "CSSProperties",
										"package": "@types/react",
										"qualifiedName": "React.CSSProperties"
									}
								},
								{
									"id": 14110,
									"name": "useLabelElement",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 22,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 14107,
									"name": "width",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "No alternative"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
											"line": 19,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "column"
											},
											{
												"type": "literal",
												"value": "fluid"
											},
											{
												"type": "literal",
												"value": "none"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14097,
										14113,
										14098,
										14099,
										14102,
										14100,
										14101,
										14103,
										14104,
										14105,
										14106,
										14108,
										14111,
										14109,
										14112,
										14110,
										14107
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/ui/dist/types/components/Forms/FieldContainer/FieldContainer.d.ts",
									"line": 6,
									"character": 34
								}
							]
						}
					},
					{
						"type": "reference",
						"target": 13088,
						"name": "ErrorListProps",
						"package": "@contember/ui"
					}
				]
			}
		},
		{
			"id": 9720,
			"name": "FieldValue",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/binding/dist/types/treeParameters/primitives/FieldValue.d.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": 10039,
				"name": "JsonValue",
				"package": "@contember/binding"
			}
		},
		{
			"id": 10039,
			"name": "JsonValue",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/binding/dist/types/treeParameters/primitives/Json.d.ts",
					"line": 6,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 10040,
					"name": "Ext",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "reference",
						"target": 9725,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "Ext",
								"refersToTypeParameter": true
							}
						],
						"name": "JsonObject",
						"package": "@contember/binding"
					},
					{
						"type": "reference",
						"target": 9729,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "Ext",
								"refersToTypeParameter": true
							}
						],
						"name": "JsonArray",
						"package": "@contember/binding"
					},
					{
						"type": "reference",
						"target": -1,
						"name": "Ext",
						"refersToTypeParameter": true
					}
				]
			}
		},
		{
			"id": 152,
			"name": "SimpleRelativeSingleFieldProps",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeSingleField.tsx",
					"line": 5,
					"character": 12,
					"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeSingleField.tsx#L5"
				}
			],
			"type": {
				"type": "reference",
				"target": 143,
				"name": "SimpleRelativeSingleFieldProxyProps",
				"package": "@contember/admin"
			}
		},
		{
			"id": 124,
			"name": "SimpleRelativeSingleFieldProxyExtraProps",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx",
					"line": 13,
					"character": 12,
					"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx#L13"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 125,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 126,
							"name": "className",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx",
									"line": 14,
									"character": 1,
									"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 127,
							"name": "containerClassName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx",
									"line": 15,
									"character": 1,
									"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 128,
							"name": "containerStyle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx",
									"line": 16,
									"character": 1,
									"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx#L16"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
									"qualifiedName": "React.CSSProperties"
								},
								"name": "CSSProperties",
								"package": "@types/react",
								"qualifiedName": "React.CSSProperties"
							}
						},
						{
							"id": 129,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx",
									"line": 17,
									"character": 1,
									"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx#L17"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
									"qualifiedName": "React.CSSProperties"
								},
								"name": "CSSProperties",
								"package": "@types/react",
								"qualifiedName": "React.CSSProperties"
							}
						},
						{
							"id": 130,
							"name": "suppressErrors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx",
									"line": 18,
									"character": 1,
									"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								126,
								127,
								128,
								129,
								130
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx",
							"line": 13,
							"character": 55,
							"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx#L13"
						}
					]
				}
			}
		},
		{
			"id": 123,
			"name": "SimpleRelativeSingleFieldProxyFieldContainerProps",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx",
					"line": 10,
					"character": 12,
					"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx#L10"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Omit"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 14095,
						"name": "FieldContainerProps",
						"package": "@contember/ui"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "children"
							},
							{
								"type": "literal",
								"value": "className"
							},
							{
								"type": "literal",
								"value": "style"
							}
						]
					}
				],
				"name": "Omit",
				"package": "typescript"
			}
		},
		{
			"id": 143,
			"name": "SimpleRelativeSingleFieldProxyProps",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx",
					"line": 52,
					"character": 12,
					"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/auxiliary/SimpleRelativeSingleField/SimpleRelativeFieldProxy.tsx#L52"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 123,
						"name": "SimpleRelativeSingleFieldProxyFieldContainerProps",
						"package": "@contember/admin"
					},
					{
						"type": "reference",
						"target": 10480,
						"name": "SugaredRelativeSingleField",
						"package": "@contember/binding"
					},
					{
						"type": "reference",
						"target": 124,
						"name": "SimpleRelativeSingleFieldProxyExtraProps",
						"package": "@contember/admin"
					}
				]
			}
		},
		{
			"id": 3032,
			"name": "SlugFieldProps",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/admin/src/components/bindingFacade/fields/SlugField.tsx",
					"line": 18,
					"character": 12,
					"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/fields/SlugField.tsx#L18"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 152,
						"name": "SimpleRelativeSingleFieldProps",
						"package": "@contember/admin"
					},
					{
						"type": "reference",
						"target": 15166,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "ControlProps",
						"package": "@contember/ui"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 3033,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3034,
									"name": "derivedFrom",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/admin/src/components/bindingFacade/fields/SlugField.tsx",
											"line": 22,
											"character": 2,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/fields/SlugField.tsx#L22"
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "field"
										},
										"objectType": {
											"type": "reference",
											"target": 10480,
											"name": "SugaredRelativeSingleField",
											"package": "@contember/binding"
										}
									}
								},
								{
									"id": 3038,
									"name": "linkToExternalUrl",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/admin/src/components/bindingFacade/fields/SlugField.tsx",
											"line": 26,
											"character": 2,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/fields/SlugField.tsx#L26"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3036,
									"name": "persistedHardPrefix",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/admin/src/components/bindingFacade/fields/SlugField.tsx",
											"line": 24,
											"character": 2,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/fields/SlugField.tsx#L24"
										}
									],
									"type": {
										"type": "reference",
										"target": 3028,
										"name": "SlugPrefix",
										"package": "@contember/admin"
									}
								},
								{
									"id": 3037,
									"name": "persistedSoftPrefix",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/admin/src/components/bindingFacade/fields/SlugField.tsx",
											"line": 25,
											"character": 2,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/fields/SlugField.tsx#L25"
										}
									],
									"type": {
										"type": "reference",
										"target": 3028,
										"name": "SlugPrefix",
										"package": "@contember/admin"
									}
								},
								{
									"id": 3035,
									"name": "unpersistedHardPrefix",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/admin/src/components/bindingFacade/fields/SlugField.tsx",
											"line": 23,
											"character": 2,
											"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/fields/SlugField.tsx#L23"
										}
									],
									"type": {
										"type": "reference",
										"target": 3028,
										"name": "SlugPrefix",
										"package": "@contember/admin"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3034,
										3038,
										3036,
										3037,
										3035
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/admin/src/components/bindingFacade/fields/SlugField.tsx",
									"line": 21,
									"character": 3,
									"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/fields/SlugField.tsx#L21"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 10480,
			"name": "SugaredRelativeSingleField",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/binding/dist/types/treeParameters/RelativeSingleField.d.ts",
					"line": 11,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 10479,
						"name": "UnsugarableRelativeSingleField",
						"package": "@contember/binding"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 10481,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10482,
									"name": "field",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "E.g. authors(id = 123).person.name"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/binding/dist/types/treeParameters/RelativeSingleField.d.ts",
											"line": 13,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 10476,
												"name": "SugarableRelativeSingleField",
												"package": "@contember/binding"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10482
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/binding/dist/types/treeParameters/RelativeSingleField.d.ts",
									"line": 11,
									"character": 74
								}
							]
						}
					}
				]
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 8438,
					"name": "FieldBasicProps"
				}
			]
		},
		{
			"id": 10148,
			"name": "UnsugarableFieldEventListeners",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/binding/dist/types/treeParameters/FieldEventListeners.d.ts",
					"line": 10,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 10153,
					"name": "Persisted",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 9720,
						"name": "FieldValue",
						"package": "@contember/binding"
					},
					"default": {
						"type": "reference",
						"target": 9720,
						"name": "FieldValue",
						"package": "@contember/binding"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 10149,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 10151,
							"name": "onBeforeUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/binding/dist/types/treeParameters/FieldEventListeners.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 10145,
								"typeArguments": [
									{
										"type": "literal",
										"value": "beforeUpdate"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "Persisted",
										"refersToTypeParameter": true
									}
								],
								"name": "FieldEventListenerValue",
								"package": "@contember/binding"
							}
						},
						{
							"id": 10150,
							"name": "onInitialize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/binding/dist/types/treeParameters/FieldEventListeners.d.ts",
									"line": 11,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 10145,
								"typeArguments": [
									{
										"type": "literal",
										"value": "initialize"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "Persisted",
										"refersToTypeParameter": true
									}
								],
								"name": "FieldEventListenerValue",
								"package": "@contember/binding"
							}
						},
						{
							"id": 10152,
							"name": "onUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/binding/dist/types/treeParameters/FieldEventListeners.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 10145,
								"typeArguments": [
									{
										"type": "literal",
										"value": "update"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "Persisted",
										"refersToTypeParameter": true
									}
								],
								"name": "FieldEventListenerValue",
								"package": "@contember/binding"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								10151,
								10150,
								10152
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/binding/dist/types/treeParameters/FieldEventListeners.d.ts",
							"line": 10,
							"character": 88
						}
					]
				}
			}
		},
		{
			"id": 10224,
			"name": "UnsugarableLeafField",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/binding/dist/types/treeParameters/LeafField.d.ts",
					"line": 10,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 10148,
						"name": "UnsugarableFieldEventListeners",
						"package": "@contember/binding"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 10225,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10227,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/binding/dist/types/treeParameters/LeafField.d.ts",
											"line": 12,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 9721,
										"name": "OptionallyVariableFieldValue",
										"package": "@contember/binding"
									}
								},
								{
									"id": 10226,
									"name": "isNonbearing",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/binding/dist/types/treeParameters/LeafField.d.ts",
											"line": 11,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10227,
										10226
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/binding/dist/types/treeParameters/LeafField.d.ts",
									"line": 10,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 10479,
			"name": "UnsugarableRelativeSingleField",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/binding/dist/types/treeParameters/RelativeSingleField.d.ts",
					"line": 10,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": 10224,
				"name": "UnsugarableLeafField",
				"package": "@contember/binding"
			}
		},
		{
			"id": 3039,
			"name": "SlugField",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/admin/src/components/bindingFacade/fields/SlugField.tsx",
					"line": 37,
					"character": 13,
					"url": "https://github.com/contember/admin/blob/027fac6dc/packages/admin/src/components/bindingFacade/fields/SlugField.tsx#L37"
				}
			],
			"signatures": [
				{
					"id": 3040,
					"name": "SlugField",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
							"line": 329,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 3041,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3032,
								"name": "SlugFieldProps",
								"package": "@contember/admin"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
									"qualifiedName": "React.ReactElement"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/react/ts5.0/index.d.ts",
													"qualifiedName": "React.JSXElementConstructor"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor",
												"package": "@types/react",
												"qualifiedName": "React.JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement",
								"package": "@types/react",
								"qualifiedName": "React.ReactElement"
							}
						]
					}
				}
			]
		}
	],
	"symbolIdMap": {}
}