{
	"id": 0,
	"name": "@contember/admin",
	"kind": 1,
	"flags": {},
	"variant": "project",
	"children": [
		{
			"id": 2393,
			"name": "FieldFallbackViewProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 2394,
					"name": "fallback",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/admin/src/components/bindingFacade/fieldViews/FieldFallbackView.tsx",
							"line": 9,
							"character": 1,
							"url": "https://github.com/contember/admin/blob/e1ec9d097/packages/admin/src/components/bindingFacade/fieldViews/FieldFallbackView.tsx#L9"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				},
				{
					"id": 2395,
					"name": "fallbackStyle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/admin/src/components/bindingFacade/fieldViews/FieldFallbackView.tsx",
							"line": 10,
							"character": 1,
							"url": "https://github.com/contember/admin/blob/e1ec9d097/packages/admin/src/components/bindingFacade/fieldViews/FieldFallbackView.tsx#L10"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": 2392,
								"name": "FieldFallbackViewStyle",
								"package": "@contember/admin"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						2394,
						2395
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/admin/src/components/bindingFacade/fieldViews/FieldFallbackView.tsx",
					"line": 8,
					"character": 17,
					"url": "https://github.com/contember/admin/blob/e1ec9d097/packages/admin/src/components/bindingFacade/fieldViews/FieldFallbackView.tsx#L8"
				}
			]
		},
		{
			"id": 16094,
			"name": "HTMLImageElementProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 16129,
					"name": "about",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1881,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.about"
					}
				},
				{
					"id": 16110,
					"name": "accessKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1856,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.accessKey"
					}
				},
				{
					"id": 16095,
					"name": "alt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2181,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.alt"
					}
				},
				{
					"id": 16151,
					"name": "aria-activedescendant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1590,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-activedescendant"
					}
				},
				{
					"id": 16152,
					"name": "aria-atomic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1592,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-atomic"
					}
				},
				{
					"id": 16153,
					"name": "aria-autocomplete",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1597,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-autocomplete"
					}
				},
				{
					"id": 16154,
					"name": "aria-busy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1599,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-busy"
					}
				},
				{
					"id": 16155,
					"name": "aria-checked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1604,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-checked"
					}
				},
				{
					"id": 16156,
					"name": "aria-colcount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of columns in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-colindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1609,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-colcount"
					}
				},
				{
					"id": 16157,
					"name": "aria-colindex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1614,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-colindex"
					}
				},
				{
					"id": 16158,
					"name": "aria-colspan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1619,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-colspan"
					}
				},
				{
					"id": 16159,
					"name": "aria-controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-owns."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1624,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-controls"
					}
				},
				{
					"id": 16160,
					"name": "aria-current",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the element that represents the current item within a container or set of related elements."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1626,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-current"
					}
				},
				{
					"id": 16161,
					"name": "aria-describedby",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that describes the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1631,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-describedby"
					}
				},
				{
					"id": 16162,
					"name": "aria-details",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides a detailed, extended description for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1636,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-details"
					}
				},
				{
					"id": 16163,
					"name": "aria-disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-hidden"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-readonly."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1641,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-disabled"
					}
				},
				{
					"id": 16164,
					"name": "aria-dropeffect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1646,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-dropeffect"
					}
				},
				{
					"id": 16165,
					"name": "aria-errormessage",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides an error message for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-invalid"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-describedby."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1651,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-errormessage"
					}
				},
				{
					"id": 16166,
					"name": "aria-expanded",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1653,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-expanded"
					}
				},
				{
					"id": 16167,
					"name": "aria-flowto",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-flowto"
					}
				},
				{
					"id": 16168,
					"name": "aria-grabbed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1663,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-grabbed"
					}
				},
				{
					"id": 16169,
					"name": "aria-haspopup",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1665,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-haspopup"
					}
				},
				{
					"id": 16170,
					"name": "aria-hidden",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element is exposed to an accessibility API."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1670,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-hidden"
					}
				},
				{
					"id": 16171,
					"name": "aria-invalid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the entered value does not conform to the format expected by the application."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-errormessage."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1675,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-invalid"
					}
				},
				{
					"id": 16172,
					"name": "aria-keyshortcuts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-keyshortcuts"
					}
				},
				{
					"id": 16173,
					"name": "aria-label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a string value that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-label"
					}
				},
				{
					"id": 16174,
					"name": "aria-labelledby",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-labelledby"
					}
				},
				{
					"id": 16175,
					"name": "aria-level",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the hierarchical level of an element within a structure."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1689,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-level"
					}
				},
				{
					"id": 16176,
					"name": "aria-live",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1691,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-live"
					}
				},
				{
					"id": 16177,
					"name": "aria-modal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether an element is modal when displayed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1693,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-modal"
					}
				},
				{
					"id": 16178,
					"name": "aria-multiline",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1695,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-multiline"
					}
				},
				{
					"id": 16179,
					"name": "aria-multiselectable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the user may select more than one item from the current selectable descendants."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-multiselectable"
					}
				},
				{
					"id": 16180,
					"name": "aria-orientation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-orientation"
					}
				},
				{
					"id": 16181,
					"name": "aria-owns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-controls."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1705,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-owns"
					}
				},
				{
					"id": 16182,
					"name": "aria-placeholder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1710,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-placeholder"
					}
				},
				{
					"id": 16183,
					"name": "aria-posinset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-setsize."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1715,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-posinset"
					}
				},
				{
					"id": 16184,
					"name": "aria-pressed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"pressed\" state of toggle buttons."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1720,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-pressed"
					}
				},
				{
					"id": 16185,
					"name": "aria-readonly",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is not editable, but is otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1725,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-readonly"
					}
				},
				{
					"id": 16186,
					"name": "aria-relevant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-atomic."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-relevant"
					}
				},
				{
					"id": 16187,
					"name": "aria-required",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that user input is required on the element before a form may be submitted."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-required"
					}
				},
				{
					"id": 16188,
					"name": "aria-roledescription",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a human-readable, author-localized description for the role of an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1734,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-roledescription"
					}
				},
				{
					"id": 16189,
					"name": "aria-rowcount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of rows in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-rowindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-rowcount"
					}
				},
				{
					"id": 16190,
					"name": "aria-rowindex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1744,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-rowindex"
					}
				},
				{
					"id": 16191,
					"name": "aria-rowspan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1749,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-rowspan"
					}
				},
				{
					"id": 16192,
					"name": "aria-selected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"selected\" state of various widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1754,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-selected"
					}
				},
				{
					"id": 16193,
					"name": "aria-setsize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-posinset."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1759,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-setsize"
					}
				},
				{
					"id": 16194,
					"name": "aria-sort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1761,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-sort"
					}
				},
				{
					"id": 16195,
					"name": "aria-valuemax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the maximum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1763,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-valuemax"
					}
				},
				{
					"id": 16196,
					"name": "aria-valuemin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the minimum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1765,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-valuemin"
					}
				},
				{
					"id": 16197,
					"name": "aria-valuenow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the current value for a range widget."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-valuetext."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1770,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-valuenow"
					}
				},
				{
					"id": 16198,
					"name": "aria-valuetext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1772,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.aria-valuetext"
					}
				},
				{
					"id": 16137,
					"name": "autoCapitalize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1891,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 16138,
					"name": "autoCorrect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1892,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 16139,
					"name": "autoSave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1893,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.autoSave"
					}
				},
				{
					"id": 16199,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.children"
					}
				},
				{
					"id": 16111,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.className"
					}
				},
				{
					"id": 16140,
					"name": "color",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1894,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.color"
					}
				},
				{
					"id": 16112,
					"name": "contentEditable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							{
								"type": "literal",
								"value": "inherit"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.contentEditable"
					}
				},
				{
					"id": 16113,
					"name": "contextMenu",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.contextMenu"
					}
				},
				{
					"id": 16096,
					"name": "crossOrigin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2182,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": ""
							},
							{
								"type": "literal",
								"value": "anonymous"
							},
							{
								"type": "literal",
								"value": "use-credentials"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.crossOrigin"
					}
				},
				{
					"id": 16200,
					"name": "dangerouslySetInnerHTML",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16201,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 16202,
									"name": "__html",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 1378,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16202
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1377,
									"character": 34
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 16130,
					"name": "datatype",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1882,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.datatype"
					}
				},
				{
					"id": 16097,
					"name": "decoding",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2183,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "auto"
							},
							{
								"type": "literal",
								"value": "async"
							},
							{
								"type": "literal",
								"value": "sync"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.decoding"
					}
				},
				{
					"id": 16106,
					"name": "defaultChecked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 16107,
					"name": "defaultValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.defaultValue"
					}
				},
				{
					"id": 16114,
					"name": "dir",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.dir"
					}
				},
				{
					"id": 16115,
					"name": "draggable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.draggable"
					}
				},
				{
					"id": 16098,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2184,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.height"
					}
				},
				{
					"id": 16116,
					"name": "hidden",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.hidden"
					}
				},
				{
					"id": 16117,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.id"
					}
				},
				{
					"id": 16131,
					"name": "inlist",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1883,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.inlist"
					}
				},
				{
					"id": 16149,
					"name": "inputMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1909,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.inputMode"
					}
				},
				{
					"id": 16150,
					"name": "is",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1914,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.is"
					}
				},
				{
					"id": 16144,
					"name": "itemID",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1898,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.itemID"
					}
				},
				{
					"id": 16141,
					"name": "itemProp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1895,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.itemProp"
					}
				},
				{
					"id": 16145,
					"name": "itemRef",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1899,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.itemRef"
					}
				},
				{
					"id": 16142,
					"name": "itemScope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1896,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.itemScope"
					}
				},
				{
					"id": 16143,
					"name": "itemType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1897,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.itemType"
					}
				},
				{
					"id": 16118,
					"name": "lang",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.lang"
					}
				},
				{
					"id": 16099,
					"name": "loading",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2185,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "eager"
							},
							{
								"type": "literal",
								"value": "lazy"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.loading"
					}
				},
				{
					"id": 16119,
					"name": "nonce",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.nonce"
					}
				},
				{
					"id": 16241,
					"name": "onAbort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onAbort"
					}
				},
				{
					"id": 16242,
					"name": "onAbortCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onAbortCapture"
					}
				},
				{
					"id": 16359,
					"name": "onAnimationEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onAnimationEnd"
					}
				},
				{
					"id": 16360,
					"name": "onAnimationEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1567,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 16361,
					"name": "onAnimationIteration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1568,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onAnimationIteration"
					}
				},
				{
					"id": 16362,
					"name": "onAnimationIterationCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1569,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 16357,
					"name": "onAnimationStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onAnimationStart"
					}
				},
				{
					"id": 16358,
					"name": "onAnimationStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1565,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 16287,
					"name": "onAuxClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onAuxClick"
					}
				},
				{
					"id": 16288,
					"name": "onAuxClickCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 16221,
					"name": "onBeforeInput",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onBeforeInput"
					}
				},
				{
					"id": 16222,
					"name": "onBeforeInputCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 16217,
					"name": "onBlur",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FocusEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onBlur"
					}
				},
				{
					"id": 16218,
					"name": "onBlurCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1401,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FocusEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onBlurCapture"
					}
				},
				{
					"id": 16243,
					"name": "onCanPlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onCanPlay"
					}
				},
				{
					"id": 16244,
					"name": "onCanPlayCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 16245,
					"name": "onCanPlayThrough",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 16246,
					"name": "onCanPlayThroughCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 16219,
					"name": "onChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onChange"
					}
				},
				{
					"id": 16220,
					"name": "onChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onChangeCapture"
					}
				},
				{
					"id": 16289,
					"name": "onClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onClick"
					}
				},
				{
					"id": 16290,
					"name": "onClickCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1485,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onClickCapture"
					}
				},
				{
					"id": 16209,
					"name": "onCompositionEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onCompositionEnd"
					}
				},
				{
					"id": 16210,
					"name": "onCompositionEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 16211,
					"name": "onCompositionStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onCompositionStart"
					}
				},
				{
					"id": 16212,
					"name": "onCompositionStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1393,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 16213,
					"name": "onCompositionUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1394,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 16214,
					"name": "onCompositionUpdateCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 16291,
					"name": "onContextMenu",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1486,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onContextMenu"
					}
				},
				{
					"id": 16292,
					"name": "onContextMenuCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 16203,
					"name": "onCopy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onCopy"
					}
				},
				{
					"id": 16204,
					"name": "onCopyCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onCopyCapture"
					}
				},
				{
					"id": 16205,
					"name": "onCut",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onCut"
					}
				},
				{
					"id": 16206,
					"name": "onCutCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onCutCapture"
					}
				},
				{
					"id": 16293,
					"name": "onDoubleClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDoubleClick"
					}
				},
				{
					"id": 16294,
					"name": "onDoubleClickCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1489,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 16295,
					"name": "onDrag",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1490,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDrag"
					}
				},
				{
					"id": 16296,
					"name": "onDragCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDragCapture"
					}
				},
				{
					"id": 16297,
					"name": "onDragEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDragEnd"
					}
				},
				{
					"id": 16298,
					"name": "onDragEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDragEndCapture"
					}
				},
				{
					"id": 16299,
					"name": "onDragEnter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDragEnter"
					}
				},
				{
					"id": 16300,
					"name": "onDragEnterCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 16301,
					"name": "onDragExit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDragExit"
					}
				},
				{
					"id": 16302,
					"name": "onDragExitCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDragExitCapture"
					}
				},
				{
					"id": 16303,
					"name": "onDragLeave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDragLeave"
					}
				},
				{
					"id": 16304,
					"name": "onDragLeaveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1499,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 16305,
					"name": "onDragOver",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1500,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDragOver"
					}
				},
				{
					"id": 16306,
					"name": "onDragOverCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDragOverCapture"
					}
				},
				{
					"id": 16307,
					"name": "onDragStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDragStart"
					}
				},
				{
					"id": 16308,
					"name": "onDragStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDragStartCapture"
					}
				},
				{
					"id": 16309,
					"name": "onDrop",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDrop"
					}
				},
				{
					"id": 16310,
					"name": "onDropCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDropCapture"
					}
				},
				{
					"id": 16247,
					"name": "onDurationChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDurationChange"
					}
				},
				{
					"id": 16248,
					"name": "onDurationChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 16249,
					"name": "onEmptied",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onEmptied"
					}
				},
				{
					"id": 16250,
					"name": "onEmptiedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 16251,
					"name": "onEncrypted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onEncrypted"
					}
				},
				{
					"id": 16252,
					"name": "onEncryptedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 16253,
					"name": "onEnded",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onEnded"
					}
				},
				{
					"id": 16254,
					"name": "onEndedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1447,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onEndedCapture"
					}
				},
				{
					"id": 16233,
					"name": "onError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onError"
					}
				},
				{
					"id": 16234,
					"name": "onErrorCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onErrorCapture"
					}
				},
				{
					"id": 16215,
					"name": "onFocus",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FocusEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onFocus"
					}
				},
				{
					"id": 16216,
					"name": "onFocusCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FocusEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onFocusCapture"
					}
				},
				{
					"id": 16349,
					"name": "onGotPointerCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1550,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 16350,
					"name": "onGotPointerCaptureCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1551,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 16223,
					"name": "onInput",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onInput"
					}
				},
				{
					"id": 16224,
					"name": "onInputCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onInputCapture"
					}
				},
				{
					"id": 16229,
					"name": "onInvalid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onInvalid"
					}
				},
				{
					"id": 16230,
					"name": "onInvalidCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onInvalidCapture"
					}
				},
				{
					"id": 16235,
					"name": "onKeyDown",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onKeyDown"
					}
				},
				{
					"id": 16236,
					"name": "onKeyDownCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 16237,
					"name": "onKeyPress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onKeyPress"
					}
				},
				{
					"id": 16238,
					"name": "onKeyPressCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 16239,
					"name": "onKeyUp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onKeyUp"
					}
				},
				{
					"id": 16240,
					"name": "onKeyUpCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 16231,
					"name": "onLoad",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onLoad"
					}
				},
				{
					"id": 16232,
					"name": "onLoadCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onLoadCapture"
					}
				},
				{
					"id": 16259,
					"name": "onLoadStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onLoadStart"
					}
				},
				{
					"id": 16260,
					"name": "onLoadStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 16255,
					"name": "onLoadedData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1448,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onLoadedData"
					}
				},
				{
					"id": 16256,
					"name": "onLoadedDataCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 16257,
					"name": "onLoadedMetadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 16258,
					"name": "onLoadedMetadataCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 16351,
					"name": "onLostPointerCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1552,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 16352,
					"name": "onLostPointerCaptureCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1553,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 16311,
					"name": "onMouseDown",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onMouseDown"
					}
				},
				{
					"id": 16312,
					"name": "onMouseDownCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 16313,
					"name": "onMouseEnter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onMouseEnter"
					}
				},
				{
					"id": 16314,
					"name": "onMouseLeave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onMouseLeave"
					}
				},
				{
					"id": 16315,
					"name": "onMouseMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onMouseMove"
					}
				},
				{
					"id": 16316,
					"name": "onMouseMoveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 16317,
					"name": "onMouseOut",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onMouseOut"
					}
				},
				{
					"id": 16318,
					"name": "onMouseOutCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 16319,
					"name": "onMouseOver",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onMouseOver"
					}
				},
				{
					"id": 16320,
					"name": "onMouseOverCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 16321,
					"name": "onMouseUp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onMouseUp"
					}
				},
				{
					"id": 16322,
					"name": "onMouseUpCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 16207,
					"name": "onPaste",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPaste"
					}
				},
				{
					"id": 16208,
					"name": "onPasteCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1387,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPasteCapture"
					}
				},
				{
					"id": 16261,
					"name": "onPause",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPause"
					}
				},
				{
					"id": 16262,
					"name": "onPauseCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPauseCapture"
					}
				},
				{
					"id": 16263,
					"name": "onPlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPlay"
					}
				},
				{
					"id": 16264,
					"name": "onPlayCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPlayCapture"
					}
				},
				{
					"id": 16265,
					"name": "onPlaying",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPlaying"
					}
				},
				{
					"id": 16266,
					"name": "onPlayingCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPlayingCapture"
					}
				},
				{
					"id": 16339,
					"name": "onPointerCancel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerCancel"
					}
				},
				{
					"id": 16340,
					"name": "onPointerCancelCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1541,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 16333,
					"name": "onPointerDown",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerDown"
					}
				},
				{
					"id": 16334,
					"name": "onPointerDownCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 16341,
					"name": "onPointerEnter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1542,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerEnter"
					}
				},
				{
					"id": 16342,
					"name": "onPointerEnterCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1543,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 16343,
					"name": "onPointerLeave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1544,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerLeave"
					}
				},
				{
					"id": 16344,
					"name": "onPointerLeaveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1545,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 16335,
					"name": "onPointerMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerMove"
					}
				},
				{
					"id": 16336,
					"name": "onPointerMoveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1537,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 16347,
					"name": "onPointerOut",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1548,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerOut"
					}
				},
				{
					"id": 16348,
					"name": "onPointerOutCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1549,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 16345,
					"name": "onPointerOver",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1546,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerOver"
					}
				},
				{
					"id": 16346,
					"name": "onPointerOverCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1547,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 16337,
					"name": "onPointerUp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1538,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerUp"
					}
				},
				{
					"id": 16338,
					"name": "onPointerUpCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 16267,
					"name": "onProgress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onProgress"
					}
				},
				{
					"id": 16268,
					"name": "onProgressCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onProgressCapture"
					}
				},
				{
					"id": 16269,
					"name": "onRateChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onRateChange"
					}
				},
				{
					"id": 16270,
					"name": "onRateChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 16225,
					"name": "onReset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onReset"
					}
				},
				{
					"id": 16226,
					"name": "onResetCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onResetCapture"
					}
				},
				{
					"id": 16271,
					"name": "onResize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onResize"
					}
				},
				{
					"id": 16272,
					"name": "onResizeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onResizeCapture"
					}
				},
				{
					"id": 16353,
					"name": "onScroll",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1556,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.UIEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onScroll"
					}
				},
				{
					"id": 16354,
					"name": "onScrollCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.UIEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onScrollCapture"
					}
				},
				{
					"id": 16273,
					"name": "onSeeked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onSeeked"
					}
				},
				{
					"id": 16274,
					"name": "onSeekedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onSeekedCapture"
					}
				},
				{
					"id": 16275,
					"name": "onSeeking",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onSeeking"
					}
				},
				{
					"id": 16276,
					"name": "onSeekingCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onSeekingCapture"
					}
				},
				{
					"id": 16323,
					"name": "onSelect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onSelect"
					}
				},
				{
					"id": 16324,
					"name": "onSelectCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1521,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onSelectCapture"
					}
				},
				{
					"id": 16277,
					"name": "onStalled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onStalled"
					}
				},
				{
					"id": 16278,
					"name": "onStalledCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onStalledCapture"
					}
				},
				{
					"id": 16227,
					"name": "onSubmit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onSubmit"
					}
				},
				{
					"id": 16228,
					"name": "onSubmitCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onSubmitCapture"
					}
				},
				{
					"id": 16279,
					"name": "onSuspend",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onSuspend"
					}
				},
				{
					"id": 16280,
					"name": "onSuspendCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onSuspendCapture"
					}
				},
				{
					"id": 16281,
					"name": "onTimeUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onTimeUpdate"
					}
				},
				{
					"id": 16282,
					"name": "onTimeUpdateCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 16325,
					"name": "onTouchCancel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onTouchCancel"
					}
				},
				{
					"id": 16326,
					"name": "onTouchCancelCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1525,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 16327,
					"name": "onTouchEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1526,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onTouchEnd"
					}
				},
				{
					"id": 16328,
					"name": "onTouchEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 16329,
					"name": "onTouchMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onTouchMove"
					}
				},
				{
					"id": 16330,
					"name": "onTouchMoveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1529,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 16331,
					"name": "onTouchStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1530,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onTouchStart"
					}
				},
				{
					"id": 16332,
					"name": "onTouchStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 16363,
					"name": "onTransitionEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1572,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TransitionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onTransitionEnd"
					}
				},
				{
					"id": 16364,
					"name": "onTransitionEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1573,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TransitionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 16283,
					"name": "onVolumeChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onVolumeChange"
					}
				},
				{
					"id": 16284,
					"name": "onVolumeChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 16285,
					"name": "onWaiting",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onWaiting"
					}
				},
				{
					"id": 16286,
					"name": "onWaitingCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onWaitingCapture"
					}
				},
				{
					"id": 16355,
					"name": "onWheel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1560,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.WheelEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onWheel"
					}
				},
				{
					"id": 16356,
					"name": "onWheelCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1561,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.WheelEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLImageElement"
								},
								"name": "HTMLImageElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.onWheelCapture"
					}
				},
				{
					"id": 16120,
					"name": "placeholder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.placeholder"
					}
				},
				{
					"id": 16132,
					"name": "prefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1884,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.prefix"
					}
				},
				{
					"id": 16133,
					"name": "property",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.property"
					}
				},
				{
					"id": 16127,
					"name": "radioGroup",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.radioGroup"
					}
				},
				{
					"id": 16100,
					"name": "referrerPolicy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2186,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.HTMLAttributeReferrerPolicy"
						},
						"name": "HTMLAttributeReferrerPolicy",
						"package": "@types/react",
						"qualifiedName": "React.HTMLAttributeReferrerPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.referrerPolicy"
					}
				},
				{
					"id": 16134,
					"name": "resource",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1886,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.resource"
					}
				},
				{
					"id": 16146,
					"name": "results",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1900,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.results"
					}
				},
				{
					"id": 16128,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1878,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.AriaRole"
						},
						"name": "AriaRole",
						"package": "@types/react",
						"qualifiedName": "React.AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.role"
					}
				},
				{
					"id": 16147,
					"name": "security",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1901,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.security"
					}
				},
				{
					"id": 16101,
					"name": "sizes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2187,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.sizes"
					}
				},
				{
					"id": 16121,
					"name": "slot",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.slot"
					}
				},
				{
					"id": 16122,
					"name": "spellCheck",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.spellCheck"
					}
				},
				{
					"id": 16102,
					"name": "src",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2188,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.src"
					}
				},
				{
					"id": 16103,
					"name": "srcSet",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2189,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.srcSet"
					}
				},
				{
					"id": 16123,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1869,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.style"
					}
				},
				{
					"id": 16108,
					"name": "suppressContentEditableWarning",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 16109,
					"name": "suppressHydrationWarning",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 16124,
					"name": "tabIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1870,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.tabIndex"
					}
				},
				{
					"id": 16125,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1871,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.title"
					}
				},
				{
					"id": 16126,
					"name": "translate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1872,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "yes"
							},
							{
								"type": "literal",
								"value": "no"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.translate"
					}
				},
				{
					"id": 16135,
					"name": "typeof",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1887,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.typeof"
					}
				},
				{
					"id": 16148,
					"name": "unselectable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1902,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.unselectable"
					}
				},
				{
					"id": 16104,
					"name": "useMap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2190,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.useMap"
					}
				},
				{
					"id": 16136,
					"name": "vocab",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1888,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.vocab"
					}
				},
				{
					"id": 16105,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2191,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "React.ImgHTMLAttributes.width"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16129,
						16110,
						16095,
						16151,
						16152,
						16153,
						16154,
						16155,
						16156,
						16157,
						16158,
						16159,
						16160,
						16161,
						16162,
						16163,
						16164,
						16165,
						16166,
						16167,
						16168,
						16169,
						16170,
						16171,
						16172,
						16173,
						16174,
						16175,
						16176,
						16177,
						16178,
						16179,
						16180,
						16181,
						16182,
						16183,
						16184,
						16185,
						16186,
						16187,
						16188,
						16189,
						16190,
						16191,
						16192,
						16193,
						16194,
						16195,
						16196,
						16197,
						16198,
						16137,
						16138,
						16139,
						16199,
						16111,
						16140,
						16112,
						16113,
						16096,
						16200,
						16130,
						16097,
						16106,
						16107,
						16114,
						16115,
						16098,
						16116,
						16117,
						16131,
						16149,
						16150,
						16144,
						16141,
						16145,
						16142,
						16143,
						16118,
						16099,
						16119,
						16241,
						16242,
						16359,
						16360,
						16361,
						16362,
						16357,
						16358,
						16287,
						16288,
						16221,
						16222,
						16217,
						16218,
						16243,
						16244,
						16245,
						16246,
						16219,
						16220,
						16289,
						16290,
						16209,
						16210,
						16211,
						16212,
						16213,
						16214,
						16291,
						16292,
						16203,
						16204,
						16205,
						16206,
						16293,
						16294,
						16295,
						16296,
						16297,
						16298,
						16299,
						16300,
						16301,
						16302,
						16303,
						16304,
						16305,
						16306,
						16307,
						16308,
						16309,
						16310,
						16247,
						16248,
						16249,
						16250,
						16251,
						16252,
						16253,
						16254,
						16233,
						16234,
						16215,
						16216,
						16349,
						16350,
						16223,
						16224,
						16229,
						16230,
						16235,
						16236,
						16237,
						16238,
						16239,
						16240,
						16231,
						16232,
						16259,
						16260,
						16255,
						16256,
						16257,
						16258,
						16351,
						16352,
						16311,
						16312,
						16313,
						16314,
						16315,
						16316,
						16317,
						16318,
						16319,
						16320,
						16321,
						16322,
						16207,
						16208,
						16261,
						16262,
						16263,
						16264,
						16265,
						16266,
						16339,
						16340,
						16333,
						16334,
						16341,
						16342,
						16343,
						16344,
						16335,
						16336,
						16347,
						16348,
						16345,
						16346,
						16337,
						16338,
						16267,
						16268,
						16269,
						16270,
						16225,
						16226,
						16271,
						16272,
						16353,
						16354,
						16273,
						16274,
						16275,
						16276,
						16323,
						16324,
						16277,
						16278,
						16227,
						16228,
						16279,
						16280,
						16281,
						16282,
						16325,
						16326,
						16327,
						16328,
						16329,
						16330,
						16331,
						16332,
						16363,
						16364,
						16283,
						16284,
						16285,
						16286,
						16355,
						16356,
						16120,
						16132,
						16133,
						16127,
						16100,
						16134,
						16146,
						16128,
						16147,
						16101,
						16121,
						16122,
						16102,
						16103,
						16123,
						16108,
						16109,
						16124,
						16125,
						16126,
						16135,
						16148,
						16104,
						16136,
						16105
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/types/HTMLProps.d.ts",
					"line": 10,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/@types/react/index.d.ts",
						"qualifiedName": "React.ImgHTMLAttributes"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
								"qualifiedName": "HTMLImageElement"
							},
							"name": "HTMLImageElement",
							"package": "typescript"
						}
					],
					"name": "ImgHTMLAttributes",
					"package": "@types/react",
					"qualifiedName": "React.ImgHTMLAttributes"
				}
			]
		},
		{
			"id": 9013,
			"name": "JsonArray",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9283,
					"name": "[unscopables]",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Is an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
							"line": 97,
							"character": 13
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 9284,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 9321,
									"name": "[unscopables]",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isExternal": true,
										"isOptional": true,
										"isReadonly": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Is an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
											"line": 97,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 9285,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Gets or sets the length of the array. This is a number one higher than the highest index in the array."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1305,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 9320,
									"name": "[iterator]",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 58,
											"character": 4
										}
									]
								},
								{
									"id": 9317,
									"name": "at",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2022.array.d.ts",
											"line": 24,
											"character": 4
										}
									]
								},
								{
									"id": 9290,
									"name": "concat",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1329,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1335,
											"character": 4
										}
									]
								},
								{
									"id": 9310,
									"name": "copyWithin",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 62,
											"character": 4
										}
									]
								},
								{
									"id": 9311,
									"name": "entries",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 63,
											"character": 4
										}
									]
								},
								{
									"id": 9300,
									"name": "every",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1412,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1421,
											"character": 4
										}
									]
								},
								{
									"id": 9309,
									"name": "fill",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 51,
											"character": 4
										}
									]
								},
								{
									"id": 9304,
									"name": "filter",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1448,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1454,
											"character": 4
										}
									]
								},
								{
									"id": 9307,
									"name": "find",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 29,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 30,
											"character": 4
										}
									]
								},
								{
									"id": 9308,
									"name": "findIndex",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 41,
											"character": 4
										}
									]
								},
								{
									"id": 9318,
									"name": "findLast",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
											"line": 29,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
											"line": 30,
											"character": 4
										}
									]
								},
								{
									"id": 9319,
									"name": "findLastIndex",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
											"line": 41,
											"character": 4
										}
									]
								},
								{
									"id": 9316,
									"name": "flat",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
											"line": 79,
											"character": 4
										}
									]
								},
								{
									"id": 9315,
									"name": "flatMap",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
											"line": 68,
											"character": 4
										}
									]
								},
								{
									"id": 9302,
									"name": "forEach",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1436,
											"character": 4
										}
									]
								},
								{
									"id": 9314,
									"name": "includes",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2016.array.include.d.ts",
											"line": 25,
											"character": 4
										}
									]
								},
								{
									"id": 9298,
									"name": "indexOf",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1397,
											"character": 4
										}
									]
								},
								{
									"id": 9291,
									"name": "join",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1340,
											"character": 4
										}
									]
								},
								{
									"id": 9312,
									"name": "keys",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 68,
											"character": 4
										}
									]
								},
								{
									"id": 9299,
									"name": "lastIndexOf",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1403,
											"character": 4
										}
									]
								},
								{
									"id": 9303,
									"name": "map",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1442,
											"character": 4
										}
									]
								},
								{
									"id": 9288,
									"name": "pop",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1318,
											"character": 4
										}
									]
								},
								{
									"id": 9289,
									"name": "push",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1323,
											"character": 4
										}
									]
								},
								{
									"id": 9305,
									"name": "reduce",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1460,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1461,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1467,
											"character": 4
										}
									]
								},
								{
									"id": 9306,
									"name": "reduceRight",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1473,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1474,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1480,
											"character": 4
										}
									]
								},
								{
									"id": 9292,
									"name": "reverse",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1345,
											"character": 4
										}
									]
								},
								{
									"id": 9293,
									"name": "shift",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1350,
											"character": 4
										}
									]
								},
								{
									"id": 9294,
									"name": "slice",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1360,
											"character": 4
										}
									]
								},
								{
									"id": 9301,
									"name": "some",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1430,
											"character": 4
										}
									]
								},
								{
									"id": 9295,
									"name": "sort",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1371,
											"character": 4
										}
									]
								},
								{
									"id": 9296,
									"name": "splice",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1378,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1386,
											"character": 4
										}
									]
								},
								{
									"id": 9287,
									"name": "toLocaleString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1313,
											"character": 4
										}
									]
								},
								{
									"id": 9286,
									"name": "toString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1309,
											"character": 4
										}
									]
								},
								{
									"id": 9297,
									"name": "unshift",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1391,
											"character": 4
										}
									]
								},
								{
									"id": 9313,
									"name": "values",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 73,
											"character": 4
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9321,
										9285
									]
								},
								{
									"title": "Methods",
									"children": [
										9320,
										9317,
										9290,
										9310,
										9311,
										9300,
										9309,
										9304,
										9307,
										9308,
										9318,
										9319,
										9316,
										9315,
										9302,
										9314,
										9298,
										9291,
										9312,
										9299,
										9303,
										9288,
										9289,
										9305,
										9306,
										9292,
										9293,
										9294,
										9301,
										9295,
										9296,
										9287,
										9286,
										9297,
										9313
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
									"line": 97,
									"character": 35
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.[unscopables]"
					}
				},
				{
					"id": 9014,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets or sets the length of the array. This is a number one higher than the highest index in the array."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1305,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.length"
					}
				},
				{
					"id": 9281,
					"name": "[iterator]",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 58,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9282,
							"name": "[iterator]",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Iterator"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 58,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "IterableIterator"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9323,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								],
								"name": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.[iterator]"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.[iterator]"
					}
				},
				{
					"id": 9251,
					"name": "at",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2022.array.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9252,
							"name": "at",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the item located at the specified index."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2022.array.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9253,
									"name": "index",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The zero-based index of the desired code unit. A negative index will count back from the last item."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 9323,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.at"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.at"
					}
				},
				{
					"id": 9024,
					"name": "concat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1329,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1335,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9025,
							"name": "concat",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1329,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9026,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Additional arrays and/or items to add to the end of the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "ConcatArray"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 9323,
													"typeArguments": [
														{
															"type": "reference",
															"target": -1,
															"name": "Ext",
															"refersToTypeParameter": true
														}
													],
													"name": "JsonValue",
													"package": "@contember/binding"
												}
											],
											"name": "ConcatArray",
											"package": "typescript"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9323,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "Ext",
											"refersToTypeParameter": true
										}
									],
									"name": "JsonValue",
									"package": "@contember/binding"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.concat"
							}
						},
						{
							"id": 9027,
							"name": "concat",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1335,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9028,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Additional arrays and/or items to add to the end of the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 9323,
													"typeArguments": [
														{
															"type": "reference",
															"target": -1,
															"name": "Ext",
															"refersToTypeParameter": true
														}
													],
													"name": "JsonValue",
													"package": "@contember/binding"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "ConcatArray"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": 9323,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "Ext",
																	"refersToTypeParameter": true
																}
															],
															"name": "JsonValue",
															"package": "@contember/binding"
														}
													],
													"name": "ConcatArray",
													"package": "typescript"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9323,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "Ext",
											"refersToTypeParameter": true
										}
									],
									"name": "JsonValue",
									"package": "@contember/binding"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.concat"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.concat"
					}
				},
				{
					"id": 9218,
					"name": "copyWithin",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 62,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9219,
							"name": "copyWithin",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 62,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9220,
									"name": "target",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If target is negative, it is treated as length+target where length is the\nlength of the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 9221,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If start is negative, it is treated as length+start. If end is negative, it\nis treated as length+end."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 9222,
									"name": "end",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If not specified, length of the this object is used as its default value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 9013,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Ext",
										"refersToTypeParameter": true
									}
								],
								"name": "JsonArray",
								"package": "@contember/binding"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.copyWithin"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.copyWithin"
					}
				},
				{
					"id": 9223,
					"name": "entries",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9224,
							"name": "entries",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an iterable of key, value pairs for every entry in the array"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "IterableIterator"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": 9323,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "Ext",
														"refersToTypeParameter": true
													}
												],
												"name": "JsonValue",
												"package": "@contember/binding"
											}
										]
									}
								],
								"name": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.entries"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.entries"
					}
				},
				{
					"id": 9066,
					"name": "every",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1412,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1421,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9067,
							"name": "every",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether all the members of an array satisfy the specified test."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1412,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9068,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 9069,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9070,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1412,
													"character": 34
												}
											],
											"signatures": [
												{
													"id": 9071,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1412,
															"character": 34
														}
													],
													"parameters": [
														{
															"id": 9072,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9073,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9074,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"target": -1,
															"name": "S",
															"refersToTypeParameter": true
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 9075,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "S",
										"refersToTypeParameter": true
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.every"
							}
						},
						{
							"id": 9076,
							"name": "every",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether all the members of an array satisfy the specified test."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1421,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9077,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9078,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1421,
													"character": 21
												}
											],
											"signatures": [
												{
													"id": 9079,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1421,
															"character": 21
														}
													],
													"parameters": [
														{
															"id": 9080,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9081,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9082,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 9083,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.every"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.every"
					}
				},
				{
					"id": 9213,
					"name": "fill",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 51,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9214,
							"name": "fill",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Changes all array elements from "
									},
									{
										"kind": "code",
										"text": "`start`"
									},
									{
										"kind": "text",
										"text": " to "
									},
									{
										"kind": "code",
										"text": "`end`"
									},
									{
										"kind": "text",
										"text": " index to a static "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " and returns the modified array"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9215,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "value to fill array section with"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9323,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								},
								{
									"id": 9216,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "index to start filling the array at. If start is negative, it is treated as\nlength+start where length is the length of the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 9217,
									"name": "end",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "index to stop filling the array at. If end is negative, it is treated as\nlength+end."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 9013,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Ext",
										"refersToTypeParameter": true
									}
								],
								"name": "JsonArray",
								"package": "@contember/binding"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.fill"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.fill"
					}
				},
				{
					"id": 9112,
					"name": "filter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1448,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1454,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9113,
							"name": "filter",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the elements of an array that meet the condition specified in a callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1448,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9114,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 9115,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9116,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1448,
													"character": 35
												}
											],
											"signatures": [
												{
													"id": 9117,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1448,
															"character": 35
														}
													],
													"parameters": [
														{
															"id": 9118,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9119,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9120,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"target": -1,
															"name": "S",
															"refersToTypeParameter": true
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 9121,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "S",
									"refersToTypeParameter": true
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.filter"
							}
						},
						{
							"id": 9122,
							"name": "filter",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the elements of an array that meet the condition specified in a callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1454,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9123,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9124,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1454,
													"character": 22
												}
											],
											"signatures": [
												{
													"id": 9125,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1454,
															"character": 22
														}
													],
													"parameters": [
														{
															"id": 9126,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9127,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9128,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 9129,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9323,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "Ext",
											"refersToTypeParameter": true
										}
									],
									"name": "JsonValue",
									"package": "@contember/binding"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.filter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.filter"
					}
				},
				{
					"id": 9186,
					"name": "find",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 29,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9187,
							"name": "find",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the value of the first element in the array where predicate is true, and undefined\notherwise."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9188,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 9189,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found, find\nimmediately returns that element value. Otherwise, find returns undefined."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9190,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 29,
													"character": 33
												}
											],
											"signatures": [
												{
													"id": 9191,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
															"line": 29,
															"character": 33
														}
													],
													"parameters": [
														{
															"id": 9192,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9193,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9194,
															"name": "obj",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"target": -1,
															"name": "S",
															"refersToTypeParameter": true
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 9195,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "S",
										"refersToTypeParameter": true
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.find"
							}
						},
						{
							"id": 9196,
							"name": "find",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9197,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9198,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 30,
													"character": 20
												}
											],
											"signatures": [
												{
													"id": 9199,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
															"line": 30,
															"character": 20
														}
													],
													"parameters": [
														{
															"id": 9200,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9201,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9202,
															"name": "obj",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 9203,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 9323,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.find"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.find"
					}
				},
				{
					"id": 9204,
					"name": "findIndex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9205,
							"name": "findIndex",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the first element in the array where predicate is true, and -1\notherwise."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9206,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found,\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9207,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 41,
													"character": 25
												}
											],
											"signatures": [
												{
													"id": 9208,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
															"line": 41,
															"character": 25
														}
													],
													"parameters": [
														{
															"id": 9209,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9210,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9211,
															"name": "obj",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 9212,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.findIndex"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.findIndex"
					}
				},
				{
					"id": 9254,
					"name": "findLast",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
							"line": 29,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9255,
							"name": "findLast",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the value of the last element in the array where predicate is true, and undefined\notherwise."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9256,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 9257,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "findLast calls predicate once for each element of the array, in descending\norder, until it finds one where predicate returns true. If such an element is found, findLast\nimmediately returns that element value. Otherwise, findLast returns undefined."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9258,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
													"line": 29,
													"character": 37
												}
											],
											"signatures": [
												{
													"id": 9259,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
															"line": 29,
															"character": 37
														}
													],
													"parameters": [
														{
															"id": 9260,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9261,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9262,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"target": -1,
															"name": "S",
															"refersToTypeParameter": true
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 9263,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "S",
										"refersToTypeParameter": true
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.findLast"
							}
						},
						{
							"id": 9264,
							"name": "findLast",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9265,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9266,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
													"line": 30,
													"character": 24
												}
											],
											"signatures": [
												{
													"id": 9267,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
															"line": 30,
															"character": 24
														}
													],
													"parameters": [
														{
															"id": 9268,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9269,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9270,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 9271,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 9323,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.findLast"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.findLast"
					}
				},
				{
					"id": 9272,
					"name": "findLastIndex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9273,
							"name": "findLastIndex",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the last element in the array where predicate is true, and -1\notherwise."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9274,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "findLastIndex calls predicate once for each element of the array, in descending\norder, until it finds one where predicate returns true. If such an element is found,\nfindLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9275,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
													"line": 41,
													"character": 29
												}
											],
											"signatures": [
												{
													"id": 9276,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
															"line": 41,
															"character": 29
														}
													],
													"parameters": [
														{
															"id": 9277,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9278,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9279,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 9280,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.findLastIndex"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.findLastIndex"
					}
				},
				{
					"id": 9245,
					"name": "flat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
							"line": 79,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9246,
							"name": "flat",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a new array with all sub-array elements concatenated into it recursively up to the\nspecified depth."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
									"line": 79,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9247,
									"name": "A",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 9248,
									"name": "D",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"default": {
										"type": "literal",
										"value": 1
									}
								}
							],
							"parameters": [
								{
									"id": 9249,
									"name": "this",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "A",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 9250,
									"name": "depth",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum recursion depth"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "D",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es2019.array.d.ts",
										"qualifiedName": "FlatArray"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "A",
											"refersToTypeParameter": true
										},
										{
											"type": "reference",
											"target": -1,
											"name": "D",
											"refersToTypeParameter": true
										}
									],
									"name": "FlatArray",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.flat"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.flat"
					}
				},
				{
					"id": 9233,
					"name": "flatMap",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
							"line": 68,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9234,
							"name": "flatMap",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls a defined callback function on each element of an array. Then, flattens the result into\na new array.\nThis is identical to a map followed by flat with depth 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9235,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 9236,
									"name": "This",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"parameters": [
								{
									"id": 9237,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The flatMap method calls the\ncallback function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9238,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
													"line": 69,
													"character": 18
												}
											],
											"signatures": [
												{
													"id": 9239,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
															"line": 69,
															"character": 18
														}
													],
													"parameters": [
														{
															"id": 9240,
															"name": "this",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "This",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 9241,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9242,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9243,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": -1,
																"name": "U",
																"refersToTypeParameter": true
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "array",
																	"elementType": {
																		"type": "reference",
																		"target": -1,
																		"name": "U",
																		"refersToTypeParameter": true
																	}
																}
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"id": 9244,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the callback function. If\nthisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "This",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "U",
									"refersToTypeParameter": true
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.flatMap"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.flatMap"
					}
				},
				{
					"id": 9093,
					"name": "forEach",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1436,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9094,
							"name": "forEach",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Performs the specified action for each element in an array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1436,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9095,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9096,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1436,
													"character": 24
												}
											],
											"signatures": [
												{
													"id": 9097,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1436,
															"character": 24
														}
													],
													"parameters": [
														{
															"id": 9098,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9099,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9100,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 9101,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.forEach"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.forEach"
					}
				},
				{
					"id": 9229,
					"name": "includes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2016.array.include.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9230,
							"name": "includes",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether an array includes a certain element, returning true or false as appropriate."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2016.array.include.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9231,
									"name": "searchElement",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The element to search for."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9323,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								},
								{
									"id": 9232,
									"name": "fromIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The position in this array at which to begin searching for searchElement."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.includes"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.includes"
					}
				},
				{
					"id": 9058,
					"name": "indexOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1397,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9059,
							"name": "indexOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the first occurrence of a value in an array, or -1 if it is not present."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1397,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9060,
									"name": "searchElement",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to locate in the array."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9323,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								},
								{
									"id": 9061,
									"name": "fromIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.indexOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.indexOf"
					}
				},
				{
					"id": 9029,
					"name": "join",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1340,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9030,
							"name": "join",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds all the elements of an array into a string, separated by the specified separator string."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1340,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9031,
									"name": "separator",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.join"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.join"
					}
				},
				{
					"id": 9225,
					"name": "keys",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 68,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9226,
							"name": "keys",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an iterable of keys in the array"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "IterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.keys"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.keys"
					}
				},
				{
					"id": 9062,
					"name": "lastIndexOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1403,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9063,
							"name": "lastIndexOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1403,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9064,
									"name": "searchElement",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to locate in the array."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9323,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								},
								{
									"id": 9065,
									"name": "fromIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.lastIndexOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.lastIndexOf"
					}
				},
				{
					"id": 9102,
					"name": "map",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1442,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9103,
							"name": "map",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls a defined callback function on each element of an array, and returns an array that contains the results."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1442,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9104,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 9105,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9106,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1442,
													"character": 23
												}
											],
											"signatures": [
												{
													"id": 9107,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1442,
															"character": 23
														}
													],
													"parameters": [
														{
															"id": 9108,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9109,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9110,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": -1,
														"name": "U",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 9111,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "U",
									"refersToTypeParameter": true
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.map"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.map"
					}
				},
				{
					"id": 9019,
					"name": "pop",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1318,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9020,
							"name": "pop",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the last element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1318,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 9323,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.pop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.pop"
					}
				},
				{
					"id": 9021,
					"name": "push",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1323,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9022,
							"name": "push",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Appends new elements to the end of an array, and returns the new length of the array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1323,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9023,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "New elements to add to the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9323,
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "Ext",
													"refersToTypeParameter": true
												}
											],
											"name": "JsonValue",
											"package": "@contember/binding"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.push"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.push"
					}
				},
				{
					"id": 9130,
					"name": "reduce",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1460,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1461,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1467,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9131,
							"name": "reduce",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1460,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9132,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9133,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1460,
													"character": 23
												}
											],
											"signatures": [
												{
													"id": 9134,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1460,
															"character": 23
														}
													],
													"parameters": [
														{
															"id": 9135,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9136,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9137,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9138,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 9323,
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "Ext",
																"refersToTypeParameter": true
															}
														],
														"name": "JsonValue",
														"package": "@contember/binding"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 9323,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Ext",
										"refersToTypeParameter": true
									}
								],
								"name": "JsonValue",
								"package": "@contember/binding"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduce"
							}
						},
						{
							"id": 9139,
							"name": "reduce",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1461,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9140,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9141,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1461,
													"character": 23
												}
											],
											"signatures": [
												{
													"id": 9142,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1461,
															"character": 23
														}
													],
													"parameters": [
														{
															"id": 9143,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9144,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9145,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9146,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 9323,
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "Ext",
																"refersToTypeParameter": true
															}
														],
														"name": "JsonValue",
														"package": "@contember/binding"
													}
												}
											]
										}
									}
								},
								{
									"id": 9147,
									"name": "initialValue",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": 9323,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 9323,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Ext",
										"refersToTypeParameter": true
									}
								],
								"name": "JsonValue",
								"package": "@contember/binding"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduce"
							}
						},
						{
							"id": 9148,
							"name": "reduce",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1467,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9149,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 9150,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9151,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1467,
													"character": 26
												}
											],
											"signatures": [
												{
													"id": 9152,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1467,
															"character": 26
														}
													],
													"parameters": [
														{
															"id": 9153,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "U",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 9154,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9155,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9156,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": -1,
														"name": "U",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 9157,
									"name": "initialValue",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "U",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"name": "U",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduce"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.reduce"
					}
				},
				{
					"id": 9158,
					"name": "reduceRight",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1473,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1474,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1480,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9159,
							"name": "reduceRight",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1473,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9160,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9161,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1473,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 9162,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1473,
															"character": 28
														}
													],
													"parameters": [
														{
															"id": 9163,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9164,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9165,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9166,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 9323,
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "Ext",
																"refersToTypeParameter": true
															}
														],
														"name": "JsonValue",
														"package": "@contember/binding"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 9323,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Ext",
										"refersToTypeParameter": true
									}
								],
								"name": "JsonValue",
								"package": "@contember/binding"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduceRight"
							}
						},
						{
							"id": 9167,
							"name": "reduceRight",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1474,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9168,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9169,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1474,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 9170,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1474,
															"character": 28
														}
													],
													"parameters": [
														{
															"id": 9171,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9172,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9173,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9174,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 9323,
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "Ext",
																"refersToTypeParameter": true
															}
														],
														"name": "JsonValue",
														"package": "@contember/binding"
													}
												}
											]
										}
									}
								},
								{
									"id": 9175,
									"name": "initialValue",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": 9323,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 9323,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Ext",
										"refersToTypeParameter": true
									}
								],
								"name": "JsonValue",
								"package": "@contember/binding"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduceRight"
							}
						},
						{
							"id": 9176,
							"name": "reduceRight",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1480,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 9177,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 9178,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9179,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1480,
													"character": 31
												}
											],
											"signatures": [
												{
													"id": 9180,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1480,
															"character": 31
														}
													],
													"parameters": [
														{
															"id": 9181,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "U",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 9182,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9183,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9184,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": -1,
														"name": "U",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 9185,
									"name": "initialValue",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "U",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"name": "U",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduceRight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.reduceRight"
					}
				},
				{
					"id": 9032,
					"name": "reverse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1345,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9033,
							"name": "reverse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reverses the elements in an array in place.\nThis method mutates the array and returns a reference to the same array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1345,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9323,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "Ext",
											"refersToTypeParameter": true
										}
									],
									"name": "JsonValue",
									"package": "@contember/binding"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reverse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.reverse"
					}
				},
				{
					"id": 9034,
					"name": "shift",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1350,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9035,
							"name": "shift",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the first element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1350,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 9323,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.shift"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.shift"
					}
				},
				{
					"id": 9036,
					"name": "slice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1360,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9037,
							"name": "slice",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of a section of an array.\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\nFor example, -2 refers to the second to last element of the array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1360,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9038,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The beginning index of the specified portion of the array.\nIf start is undefined, then the slice begins at index 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 9039,
									"name": "end",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The end index of the specified portion of the array. This is exclusive of the element at the index 'end'.\nIf end is undefined, then the slice extends to the end of the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9323,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "Ext",
											"refersToTypeParameter": true
										}
									],
									"name": "JsonValue",
									"package": "@contember/binding"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.slice"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.slice"
					}
				},
				{
					"id": 9084,
					"name": "some",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1430,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9085,
							"name": "some",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the specified callback function returns true for any element of an array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1430,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9086,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The some method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value true, or until the end of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9087,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1430,
													"character": 20
												}
											],
											"signatures": [
												{
													"id": 9088,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1430,
															"character": 20
														}
													],
													"parameters": [
														{
															"id": 9089,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9090,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 9091,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 9323,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": -1,
																			"name": "Ext",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "JsonValue",
																	"package": "@contember/binding"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 9092,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.some"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.some"
					}
				},
				{
					"id": 9040,
					"name": "sort",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1371,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9041,
							"name": "sort",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sorts an array in place.\nThis method mutates the array and returns a reference to the same array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1371,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9042,
									"name": "compareFn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function used to determine the order of the elements. It is expected to return\na negative value if the first argument is less than the second argument, zero if they're equal, and a positive\nvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n"
											},
											{
												"kind": "code",
												"text": "```ts\n[11,2,22,1].sort((a, b) => a - b)\n```"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9043,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1371,
													"character": 21
												}
											],
											"signatures": [
												{
													"id": 9044,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1371,
															"character": 21
														}
													],
													"parameters": [
														{
															"id": 9045,
															"name": "a",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														},
														{
															"id": 9046,
															"name": "b",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": 9323,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "Ext",
																		"refersToTypeParameter": true
																	}
																],
																"name": "JsonValue",
																"package": "@contember/binding"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 9013,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Ext",
										"refersToTypeParameter": true
									}
								],
								"name": "JsonArray",
								"package": "@contember/binding"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.sort"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.sort"
					}
				},
				{
					"id": 9047,
					"name": "splice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1378,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1386,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9048,
							"name": "splice",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array containing the elements that were deleted."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1378,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9049,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The zero-based location in the array from which to start removing elements."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 9050,
									"name": "deleteCount",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number of elements to remove."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9323,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "Ext",
											"refersToTypeParameter": true
										}
									],
									"name": "JsonValue",
									"package": "@contember/binding"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.splice"
							}
						},
						{
							"id": 9051,
							"name": "splice",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array containing the elements that were deleted."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1386,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9052,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The zero-based location in the array from which to start removing elements."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 9053,
									"name": "deleteCount",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number of elements to remove."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 9054,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Elements to insert into the array in place of the deleted elements."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9323,
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "Ext",
													"refersToTypeParameter": true
												}
											],
											"name": "JsonValue",
											"package": "@contember/binding"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9323,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "Ext",
											"refersToTypeParameter": true
										}
									],
									"name": "JsonValue",
									"package": "@contember/binding"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.splice"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.splice"
					}
				},
				{
					"id": 9017,
					"name": "toLocaleString",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1313,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9018,
							"name": "toLocaleString",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a string representation of an array. The elements are converted to string using their toLocaleString methods."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1313,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.toLocaleString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.toLocaleString"
					}
				},
				{
					"id": 9015,
					"name": "toString",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1309,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9016,
							"name": "toString",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a string representation of an array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1309,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.toString"
					}
				},
				{
					"id": 9055,
					"name": "unshift",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1391,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9056,
							"name": "unshift",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Inserts new elements at the start of an array, and returns the new length of the array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1391,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 9057,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Elements to insert at the start of the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9323,
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "Ext",
													"refersToTypeParameter": true
												}
											],
											"name": "JsonValue",
											"package": "@contember/binding"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.unshift"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.unshift"
					}
				},
				{
					"id": 9227,
					"name": "values",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 73,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9228,
							"name": "values",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an iterable of values in the array"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "IterableIterator"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9323,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Ext",
												"refersToTypeParameter": true
											}
										],
										"name": "JsonValue",
										"package": "@contember/binding"
									}
								],
								"name": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.values"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.values"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9283,
						9014
					]
				},
				{
					"title": "Methods",
					"children": [
						9281,
						9251,
						9024,
						9218,
						9223,
						9066,
						9213,
						9112,
						9186,
						9204,
						9254,
						9272,
						9245,
						9233,
						9093,
						9229,
						9058,
						9029,
						9225,
						9062,
						9102,
						9019,
						9021,
						9130,
						9158,
						9032,
						9034,
						9036,
						9084,
						9040,
						9047,
						9017,
						9015,
						9055,
						9227
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/binding/dist/types/treeParameters/primitives/Json.d.ts",
					"line": 4,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 9322,
					"name": "Ext",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Array"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 9323,
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "Ext",
									"refersToTypeParameter": true
								}
							],
							"name": "JsonValue",
							"package": "@contember/binding"
						}
					],
					"name": "Array",
					"package": "typescript"
				}
			]
		},
		{
			"id": 9009,
			"name": "JsonObject",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/binding/dist/types/treeParameters/primitives/Json.d.ts",
					"line": 1,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 9010,
					"name": "Ext",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"indexSignature": {
				"id": 9011,
				"name": "__index",
				"variant": "signature",
				"kind": 8192,
				"flags": {},
				"sources": [
					{
						"fileName": "packages/binding/dist/types/treeParameters/primitives/Json.d.ts",
						"line": 2,
						"character": 4
					}
				],
				"parameters": [
					{
						"id": 9012,
						"name": "key",
						"variant": "param",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reference",
					"target": 9323,
					"typeArguments": [
						{
							"type": "reference",
							"target": -1,
							"name": "Ext",
							"refersToTypeParameter": true
						}
					],
					"name": "JsonValue",
					"package": "@contember/binding"
				}
			}
		},
		{
			"id": 2396,
			"name": "FieldFallbackViewPublicProps",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/admin/src/components/bindingFacade/fieldViews/FieldFallbackView.tsx",
					"line": 13,
					"character": 12,
					"url": "https://github.com/contember/admin/blob/e1ec9d097/packages/admin/src/components/bindingFacade/fieldViews/FieldFallbackView.tsx#L13"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Partial"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 2393,
						"name": "FieldFallbackViewProps",
						"package": "@contember/admin"
					}
				],
				"name": "Partial",
				"package": "typescript"
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 2363,
					"name": "CoalesceFieldViewProps"
				}
			]
		},
		{
			"id": 9004,
			"name": "FieldValue",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/binding/dist/types/treeParameters/primitives/FieldValue.d.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": 9323,
				"name": "JsonValue",
				"package": "@contember/binding"
			}
		},
		{
			"id": 2408,
			"name": "ImageFieldViewProps",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx",
					"line": 6,
					"character": 12,
					"url": "https://github.com/contember/admin/blob/e1ec9d097/packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx#L6"
				}
			],
			"typeParameters": [
				{
					"id": 2417,
					"name": "SrcField",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 9004,
						"name": "FieldValue",
						"package": "@contember/binding"
					},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 2409,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2411,
									"name": "altField",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx",
											"line": 9,
											"character": 2,
											"url": "https://github.com/contember/admin/blob/e1ec9d097/packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx#L9"
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "field"
										},
										"objectType": {
											"type": "reference",
											"target": 8160,
											"name": "SugaredFieldProps",
											"package": "@contember/binding"
										}
									}
								},
								{
									"id": 2413,
									"name": "formatUrl",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx",
											"line": 11,
											"character": 2,
											"url": "https://github.com/contember/admin/blob/e1ec9d097/packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx#L11"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2414,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx",
													"line": 11,
													"character": 14,
													"url": "https://github.com/contember/admin/blob/e1ec9d097/packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx#L11"
												}
											],
											"signatures": [
												{
													"id": 2415,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2416,
															"name": "srcFieldValue",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "SrcField",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 2410,
									"name": "srcField",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx",
											"line": 8,
											"character": 2,
											"url": "https://github.com/contember/admin/blob/e1ec9d097/packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx#L8"
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "field"
										},
										"objectType": {
											"type": "reference",
											"target": 8160,
											"name": "SugaredFieldProps",
											"package": "@contember/binding"
										}
									}
								},
								{
									"id": 2412,
									"name": "titleField",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx",
											"line": 10,
											"character": 2,
											"url": "https://github.com/contember/admin/blob/e1ec9d097/packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx#L10"
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "field"
										},
										"objectType": {
											"type": "reference",
											"target": 8160,
											"name": "SugaredFieldProps",
											"package": "@contember/binding"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2411,
										2413,
										2410,
										2412
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx",
									"line": 7,
									"character": 3,
									"url": "https://github.com/contember/admin/blob/e1ec9d097/packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx#L7"
								}
							]
						}
					},
					{
						"type": "reference",
						"target": 2396,
						"name": "FieldFallbackViewPublicProps",
						"package": "@contember/admin"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 16094,
								"name": "HTMLImageElementProps",
								"package": "@contember/ui"
							},
							{
								"type": "literal",
								"value": "src"
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 9323,
			"name": "JsonValue",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/binding/dist/types/treeParameters/primitives/Json.d.ts",
					"line": 6,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 9324,
					"name": "Ext",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "reference",
						"target": 9009,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "Ext",
								"refersToTypeParameter": true
							}
						],
						"name": "JsonObject",
						"package": "@contember/binding"
					},
					{
						"type": "reference",
						"target": 9013,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "Ext",
								"refersToTypeParameter": true
							}
						],
						"name": "JsonArray",
						"package": "@contember/binding"
					},
					{
						"type": "reference",
						"target": -1,
						"name": "Ext",
						"refersToTypeParameter": true
					}
				]
			}
		},
		{
			"id": 2418,
			"name": "ImageFieldView",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx",
					"line": 19,
					"character": 13,
					"url": "https://github.com/contember/admin/blob/e1ec9d097/packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx#L19"
				}
			],
			"signatures": [
				{
					"id": 2419,
					"name": "ImageFieldView",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx",
							"line": 55,
							"character": 5,
							"url": "https://github.com/contember/admin/blob/e1ec9d097/packages/admin/src/components/bindingFacade/fieldViews/ImageFieldView.tsx#L55"
						}
					],
					"typeParameter": [
						{
							"id": 2420,
							"name": "SrcField",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 9004,
								"name": "FieldValue",
								"package": "@contember/binding"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"parameters": [
						{
							"id": 2421,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2408,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "SrcField",
										"refersToTypeParameter": true
									}
								],
								"name": "ImageFieldViewProps",
								"package": "@contember/admin"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactElement"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSXElementConstructor"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "JSXElementConstructor",
										"package": "@types/react",
										"qualifiedName": "React.JSXElementConstructor"
									}
								]
							}
						],
						"name": "ReactElement",
						"package": "@types/react",
						"qualifiedName": "React.ReactElement"
					}
				}
			]
		}
	],
	"symbolIdMap": {}
}