{
	"id": 0,
	"name": "@contember/admin",
	"kind": 1,
	"flags": {},
	"variant": "project",
	"children": [
		{
			"id": 14342,
			"name": "ControlConstraintProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14343,
					"name": "max",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						]
					}
				},
				{
					"id": 14344,
					"name": "maxLength",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 14345,
					"name": "min",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 46,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						]
					}
				},
				{
					"id": 14346,
					"name": "minLength",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 14347,
					"name": "pattern",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14343,
						14344,
						14345,
						14346,
						14347
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 43,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 14348,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 14323,
			"name": "ControlDisplayProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14324,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14325,
					"name": "distinction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 15023,
						"name": "ControlDistinction",
						"package": "@contember/ui"
					}
				},
				{
					"id": 14326,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14327,
					"name": "intent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 17453,
						"name": "Intent",
						"package": "@contember/ui"
					}
				},
				{
					"id": 14332,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14331,
					"name": "placeholder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14328,
					"name": "scheme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 17454,
						"name": "Scheme",
						"package": "@contember/ui"
					}
				},
				{
					"id": 14329,
					"name": "size",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 17458,
						"name": "Size",
						"package": "@contember/ui"
					}
				},
				{
					"id": 14330,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "undefined"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14324,
						14325,
						14326,
						14327,
						14332,
						14331,
						14328,
						14329,
						14330
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 26,
					"character": 17
				}
			]
		},
		{
			"id": 14312,
			"name": "ControlFocusProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14313,
					"name": "onBlur",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14314,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
									"line": 22,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 14315,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
											"line": 22,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 14316,
					"name": "onFocus",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14317,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
									"line": 23,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 14318,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
											"line": 23,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 14319,
					"name": "onFocusChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14320,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
									"line": 24,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 14321,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
											"line": 24,
											"character": 20
										}
									],
									"parameters": [
										{
											"id": 14322,
											"name": "isFocused",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14313,
						14316,
						14319
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 21,
					"character": 17
				}
			]
		},
		{
			"id": 14304,
			"name": "ControlStateProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14305,
					"name": "active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14306,
					"name": "disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14310,
					"name": "focused",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14311,
					"name": "hovered",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14307,
					"name": "loading",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14308,
					"name": "readOnly",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14309,
					"name": "required",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14305,
						14306,
						14310,
						14311,
						14307,
						14308,
						14309
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 12,
					"character": 17
				}
			]
		},
		{
			"id": 14333,
			"name": "ControlValueProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14334,
					"name": "defaultValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						]
					}
				},
				{
					"id": 14339,
					"name": "notNull",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14335,
					"name": "onChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14336,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
									"line": 39,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 14337,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
											"line": 39,
											"character": 15
										}
									],
									"parameters": [
										{
											"id": 14338,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": -1,
														"name": "V",
														"refersToTypeParameter": true
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 14340,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14334,
						14339,
						14335,
						14340
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 37,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 14341,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 13812,
			"name": "TextareaInputOwnProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13814,
					"name": "minRows",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Inputs/TextareaInput.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13813,
					"name": "withTopToolbar",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Inputs/TextareaInput.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13814,
						13813
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Inputs/TextareaInput.d.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 13467,
			"name": "UnderlyingElementProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13501,
					"name": "about",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1881,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.about"
					}
				},
				{
					"id": 13750,
					"name": "accept",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1919,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.accept"
					}
				},
				{
					"id": 13751,
					"name": "acceptCharset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1920,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.acceptCharset"
					}
				},
				{
					"id": 13488,
					"name": "accessKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1856,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.accessKey"
					}
				},
				{
					"id": 13752,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1921,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.action"
					}
				},
				{
					"id": 13753,
					"name": "allowFullScreen",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1922,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.allowFullScreen"
					}
				},
				{
					"id": 13754,
					"name": "allowTransparency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1923,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.allowTransparency"
					}
				},
				{
					"id": 13755,
					"name": "alt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1924,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.alt"
					}
				},
				{
					"id": 13522,
					"name": "aria-activedescendant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1590,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-activedescendant"
					}
				},
				{
					"id": 13523,
					"name": "aria-atomic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1592,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-atomic"
					}
				},
				{
					"id": 13524,
					"name": "aria-autocomplete",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1597,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-autocomplete"
					}
				},
				{
					"id": 13525,
					"name": "aria-busy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1599,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-busy"
					}
				},
				{
					"id": 13526,
					"name": "aria-checked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1604,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-checked"
					}
				},
				{
					"id": 13527,
					"name": "aria-colcount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of columns in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-colindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1609,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-colcount"
					}
				},
				{
					"id": 13528,
					"name": "aria-colindex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1614,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-colindex"
					}
				},
				{
					"id": 13529,
					"name": "aria-colspan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1619,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-colspan"
					}
				},
				{
					"id": 13530,
					"name": "aria-controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-owns."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1624,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-controls"
					}
				},
				{
					"id": 13531,
					"name": "aria-current",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the element that represents the current item within a container or set of related elements."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1626,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-current"
					}
				},
				{
					"id": 13532,
					"name": "aria-describedby",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that describes the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1631,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-describedby"
					}
				},
				{
					"id": 13533,
					"name": "aria-details",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides a detailed, extended description for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1636,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-details"
					}
				},
				{
					"id": 13534,
					"name": "aria-disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-hidden"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-readonly."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1641,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-disabled"
					}
				},
				{
					"id": 13535,
					"name": "aria-dropeffect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1646,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-dropeffect"
					}
				},
				{
					"id": 13536,
					"name": "aria-errormessage",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides an error message for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-invalid"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-describedby."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1651,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-errormessage"
					}
				},
				{
					"id": 13537,
					"name": "aria-expanded",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1653,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-expanded"
					}
				},
				{
					"id": 13538,
					"name": "aria-flowto",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-flowto"
					}
				},
				{
					"id": 13539,
					"name": "aria-grabbed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1663,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-grabbed"
					}
				},
				{
					"id": 13540,
					"name": "aria-haspopup",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1665,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-haspopup"
					}
				},
				{
					"id": 13541,
					"name": "aria-hidden",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element is exposed to an accessibility API."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1670,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-hidden"
					}
				},
				{
					"id": 13542,
					"name": "aria-invalid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the entered value does not conform to the format expected by the application."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-errormessage."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1675,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-invalid"
					}
				},
				{
					"id": 13543,
					"name": "aria-keyshortcuts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-keyshortcuts"
					}
				},
				{
					"id": 13544,
					"name": "aria-label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a string value that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-label"
					}
				},
				{
					"id": 13545,
					"name": "aria-labelledby",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-labelledby"
					}
				},
				{
					"id": 13546,
					"name": "aria-level",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the hierarchical level of an element within a structure."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1689,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-level"
					}
				},
				{
					"id": 13547,
					"name": "aria-live",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1691,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-live"
					}
				},
				{
					"id": 13548,
					"name": "aria-modal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether an element is modal when displayed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1693,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-modal"
					}
				},
				{
					"id": 13549,
					"name": "aria-multiline",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1695,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-multiline"
					}
				},
				{
					"id": 13550,
					"name": "aria-multiselectable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the user may select more than one item from the current selectable descendants."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-multiselectable"
					}
				},
				{
					"id": 13551,
					"name": "aria-orientation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-orientation"
					}
				},
				{
					"id": 13552,
					"name": "aria-owns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-controls."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1705,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-owns"
					}
				},
				{
					"id": 13553,
					"name": "aria-placeholder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1710,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-placeholder"
					}
				},
				{
					"id": 13554,
					"name": "aria-posinset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-setsize."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1715,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-posinset"
					}
				},
				{
					"id": 13555,
					"name": "aria-pressed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"pressed\" state of toggle buttons."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1720,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-pressed"
					}
				},
				{
					"id": 13556,
					"name": "aria-readonly",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is not editable, but is otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1725,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-readonly"
					}
				},
				{
					"id": 13557,
					"name": "aria-relevant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-atomic."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-relevant"
					}
				},
				{
					"id": 13558,
					"name": "aria-required",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that user input is required on the element before a form may be submitted."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-required"
					}
				},
				{
					"id": 13559,
					"name": "aria-roledescription",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a human-readable, author-localized description for the role of an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1734,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-roledescription"
					}
				},
				{
					"id": 13560,
					"name": "aria-rowcount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of rows in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-rowindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-rowcount"
					}
				},
				{
					"id": 13561,
					"name": "aria-rowindex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1744,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-rowindex"
					}
				},
				{
					"id": 13562,
					"name": "aria-rowspan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1749,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-rowspan"
					}
				},
				{
					"id": 13563,
					"name": "aria-selected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"selected\" state of various widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1754,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-selected"
					}
				},
				{
					"id": 13564,
					"name": "aria-setsize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-posinset."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1759,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-setsize"
					}
				},
				{
					"id": 13565,
					"name": "aria-sort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1761,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-sort"
					}
				},
				{
					"id": 13566,
					"name": "aria-valuemax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the maximum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1763,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-valuemax"
					}
				},
				{
					"id": 13567,
					"name": "aria-valuemin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the minimum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1765,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-valuemin"
					}
				},
				{
					"id": 13568,
					"name": "aria-valuenow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the current value for a range widget."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-valuetext."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1770,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-valuenow"
					}
				},
				{
					"id": 13569,
					"name": "aria-valuetext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1772,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.aria-valuetext"
					}
				},
				{
					"id": 13756,
					"name": "as",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1925,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.as"
					}
				},
				{
					"id": 13757,
					"name": "async",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1926,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.async"
					}
				},
				{
					"id": 13508,
					"name": "autoCapitalize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1891,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.autoCapitalize"
					}
				},
				{
					"id": 13758,
					"name": "autoComplete",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1927,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.autoComplete"
					}
				},
				{
					"id": 13509,
					"name": "autoCorrect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1892,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.autoCorrect"
					}
				},
				{
					"id": 13744,
					"name": "autoFocus",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1928,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.autoFocus"
					}
				},
				{
					"id": 13759,
					"name": "autoPlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1929,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.autoPlay"
					}
				},
				{
					"id": 13510,
					"name": "autoSave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1893,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.autoSave"
					}
				},
				{
					"id": 13760,
					"name": "capture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1930,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "user"
							},
							{
								"type": "literal",
								"value": "environment"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.capture"
					}
				},
				{
					"id": 13761,
					"name": "cellPadding",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1931,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.cellPadding"
					}
				},
				{
					"id": 13762,
					"name": "cellSpacing",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1932,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.cellSpacing"
					}
				},
				{
					"id": 13764,
					"name": "challenge",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1934,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.challenge"
					}
				},
				{
					"id": 13763,
					"name": "charSet",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1933,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.charSet"
					}
				},
				{
					"id": 13765,
					"name": "checked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1935,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.checked"
					}
				},
				{
					"id": 13469,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.children"
					}
				},
				{
					"id": 13470,
					"name": "cite",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1936,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.cite"
					}
				},
				{
					"id": 13766,
					"name": "classID",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1937,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.classID"
					}
				},
				{
					"id": 13768,
					"name": "colSpan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1939,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.colSpan"
					}
				},
				{
					"id": 13511,
					"name": "color",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1894,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.color"
					}
				},
				{
					"id": 13767,
					"name": "cols",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1938,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.cols"
					}
				},
				{
					"id": 13737,
					"name": "content",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1940,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.content"
					}
				},
				{
					"id": 13489,
					"name": "contentEditable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							{
								"type": "literal",
								"value": "inherit"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.contentEditable"
					}
				},
				{
					"id": 13490,
					"name": "contextMenu",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.contextMenu"
					}
				},
				{
					"id": 13769,
					"name": "controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1941,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.controls"
					}
				},
				{
					"id": 13770,
					"name": "coords",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1942,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.coords"
					}
				},
				{
					"id": 13771,
					"name": "crossOrigin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1943,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": ""
							},
							{
								"type": "literal",
								"value": "anonymous"
							},
							{
								"type": "literal",
								"value": "use-credentials"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.crossOrigin"
					}
				},
				{
					"id": 13570,
					"name": "dangerouslySetInnerHTML",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 13571,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 13572,
									"name": "__html",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 1378,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13572
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1377,
									"character": 34
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 13471,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1944,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.data"
					}
				},
				{
					"id": 13502,
					"name": "datatype",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1882,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.datatype"
					}
				},
				{
					"id": 13772,
					"name": "dateTime",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1945,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.dateTime"
					}
				},
				{
					"id": 13735,
					"name": "default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1946,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.default"
					}
				},
				{
					"id": 13485,
					"name": "defaultChecked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.defaultChecked"
					}
				},
				{
					"id": 13773,
					"name": "defer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1947,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.defer"
					}
				},
				{
					"id": 13491,
					"name": "dir",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.dir"
					}
				},
				{
					"id": 13480,
					"name": "download",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1949,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.download"
					}
				},
				{
					"id": 13492,
					"name": "draggable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.draggable"
					}
				},
				{
					"id": 13774,
					"name": "encType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1950,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.encType"
					}
				},
				{
					"id": 13472,
					"name": "form",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1951,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.form"
					}
				},
				{
					"id": 13745,
					"name": "formAction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1952,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.formAction"
					}
				},
				{
					"id": 13746,
					"name": "formEncType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1953,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.formEncType"
					}
				},
				{
					"id": 13747,
					"name": "formMethod",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1954,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.formMethod"
					}
				},
				{
					"id": 13748,
					"name": "formNoValidate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1955,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.formNoValidate"
					}
				},
				{
					"id": 13749,
					"name": "formTarget",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1956,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.formTarget"
					}
				},
				{
					"id": 13775,
					"name": "frameBorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1957,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.frameBorder"
					}
				},
				{
					"id": 13741,
					"name": "headers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1958,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.headers"
					}
				},
				{
					"id": 13776,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1959,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.height"
					}
				},
				{
					"id": 13493,
					"name": "hidden",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.hidden"
					}
				},
				{
					"id": 13777,
					"name": "high",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1960,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.high"
					}
				},
				{
					"id": 13479,
					"name": "href",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1961,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.href"
					}
				},
				{
					"id": 13481,
					"name": "hrefLang",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1962,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.hrefLang"
					}
				},
				{
					"id": 13778,
					"name": "htmlFor",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1963,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.htmlFor"
					}
				},
				{
					"id": 13779,
					"name": "httpEquiv",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1964,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.httpEquiv"
					}
				},
				{
					"id": 13503,
					"name": "inlist",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1883,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.inlist"
					}
				},
				{
					"id": 13520,
					"name": "inputMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1909,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.inputMode"
					}
				},
				{
					"id": 13780,
					"name": "integrity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1965,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.integrity"
					}
				},
				{
					"id": 13521,
					"name": "is",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1914,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.is"
					}
				},
				{
					"id": 13515,
					"name": "itemID",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1898,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.itemID"
					}
				},
				{
					"id": 13512,
					"name": "itemProp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1895,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.itemProp"
					}
				},
				{
					"id": 13516,
					"name": "itemRef",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1899,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.itemRef"
					}
				},
				{
					"id": 13513,
					"name": "itemScope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1896,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.itemScope"
					}
				},
				{
					"id": 13514,
					"name": "itemType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1897,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.itemType"
					}
				},
				{
					"id": 13781,
					"name": "keyParams",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1966,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.keyParams"
					}
				},
				{
					"id": 13782,
					"name": "keyType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1967,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.keyType"
					}
				},
				{
					"id": 13783,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1968,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.kind"
					}
				},
				{
					"id": 13473,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1969,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.label"
					}
				},
				{
					"id": 13494,
					"name": "lang",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.lang"
					}
				},
				{
					"id": 13732,
					"name": "list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1970,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.list"
					}
				},
				{
					"id": 13784,
					"name": "loop",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1971,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.loop"
					}
				},
				{
					"id": 13785,
					"name": "low",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1972,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.low"
					}
				},
				{
					"id": 13786,
					"name": "manifest",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1973,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.manifest"
					}
				},
				{
					"id": 13787,
					"name": "marginHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1974,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.marginHeight"
					}
				},
				{
					"id": 13788,
					"name": "marginWidth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1975,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.marginWidth"
					}
				},
				{
					"id": 13482,
					"name": "media",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1978,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.media"
					}
				},
				{
					"id": 13789,
					"name": "mediaGroup",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1979,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.mediaGroup"
					}
				},
				{
					"id": 13742,
					"name": "method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1980,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.method"
					}
				},
				{
					"id": 13740,
					"name": "multiple",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1983,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.multiple"
					}
				},
				{
					"id": 13790,
					"name": "muted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1984,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.muted"
					}
				},
				{
					"id": 13791,
					"name": "noValidate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1986,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.noValidate"
					}
				},
				{
					"id": 13495,
					"name": "nonce",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.nonce"
					}
				},
				{
					"id": 13608,
					"name": "onAbort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAbort"
					}
				},
				{
					"id": 13609,
					"name": "onAbortCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAbortCapture"
					}
				},
				{
					"id": 13726,
					"name": "onAnimationEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAnimationEnd"
					}
				},
				{
					"id": 13727,
					"name": "onAnimationEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1567,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAnimationEndCapture"
					}
				},
				{
					"id": 13728,
					"name": "onAnimationIteration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1568,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAnimationIteration"
					}
				},
				{
					"id": 13729,
					"name": "onAnimationIterationCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1569,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAnimationIterationCapture"
					}
				},
				{
					"id": 13724,
					"name": "onAnimationStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAnimationStart"
					}
				},
				{
					"id": 13725,
					"name": "onAnimationStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1565,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.AnimationEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAnimationStartCapture"
					}
				},
				{
					"id": 13654,
					"name": "onAuxClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAuxClick"
					}
				},
				{
					"id": 13655,
					"name": "onAuxClickCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onAuxClickCapture"
					}
				},
				{
					"id": 13588,
					"name": "onBeforeInput",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onBeforeInput"
					}
				},
				{
					"id": 13589,
					"name": "onBeforeInputCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onBeforeInputCapture"
					}
				},
				{
					"id": 13586,
					"name": "onBlurCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1401,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FocusEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onBlurCapture"
					}
				},
				{
					"id": 13610,
					"name": "onCanPlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCanPlay"
					}
				},
				{
					"id": 13611,
					"name": "onCanPlayCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCanPlayCapture"
					}
				},
				{
					"id": 13612,
					"name": "onCanPlayThrough",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCanPlayThrough"
					}
				},
				{
					"id": 13613,
					"name": "onCanPlayThroughCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCanPlayThroughCapture"
					}
				},
				{
					"id": 13587,
					"name": "onChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onChangeCapture"
					}
				},
				{
					"id": 13656,
					"name": "onClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onClick"
					}
				},
				{
					"id": 13657,
					"name": "onClickCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1485,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onClickCapture"
					}
				},
				{
					"id": 13579,
					"name": "onCompositionEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCompositionEnd"
					}
				},
				{
					"id": 13580,
					"name": "onCompositionEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCompositionEndCapture"
					}
				},
				{
					"id": 13581,
					"name": "onCompositionStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCompositionStart"
					}
				},
				{
					"id": 13582,
					"name": "onCompositionStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1393,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCompositionStartCapture"
					}
				},
				{
					"id": 13583,
					"name": "onCompositionUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1394,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCompositionUpdate"
					}
				},
				{
					"id": 13584,
					"name": "onCompositionUpdateCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CompositionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCompositionUpdateCapture"
					}
				},
				{
					"id": 13658,
					"name": "onContextMenu",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1486,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onContextMenu"
					}
				},
				{
					"id": 13659,
					"name": "onContextMenuCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onContextMenuCapture"
					}
				},
				{
					"id": 13573,
					"name": "onCopy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCopy"
					}
				},
				{
					"id": 13574,
					"name": "onCopyCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCopyCapture"
					}
				},
				{
					"id": 13575,
					"name": "onCut",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCut"
					}
				},
				{
					"id": 13576,
					"name": "onCutCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onCutCapture"
					}
				},
				{
					"id": 13660,
					"name": "onDoubleClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDoubleClick"
					}
				},
				{
					"id": 13661,
					"name": "onDoubleClickCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1489,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDoubleClickCapture"
					}
				},
				{
					"id": 13662,
					"name": "onDrag",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1490,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDrag"
					}
				},
				{
					"id": 13663,
					"name": "onDragCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragCapture"
					}
				},
				{
					"id": 13664,
					"name": "onDragEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragEnd"
					}
				},
				{
					"id": 13665,
					"name": "onDragEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragEndCapture"
					}
				},
				{
					"id": 13666,
					"name": "onDragEnter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragEnter"
					}
				},
				{
					"id": 13667,
					"name": "onDragEnterCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragEnterCapture"
					}
				},
				{
					"id": 13668,
					"name": "onDragExit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragExit"
					}
				},
				{
					"id": 13669,
					"name": "onDragExitCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragExitCapture"
					}
				},
				{
					"id": 13670,
					"name": "onDragLeave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragLeave"
					}
				},
				{
					"id": 13671,
					"name": "onDragLeaveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1499,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragLeaveCapture"
					}
				},
				{
					"id": 13672,
					"name": "onDragOver",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1500,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragOver"
					}
				},
				{
					"id": 13673,
					"name": "onDragOverCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragOverCapture"
					}
				},
				{
					"id": 13674,
					"name": "onDragStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragStart"
					}
				},
				{
					"id": 13675,
					"name": "onDragStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDragStartCapture"
					}
				},
				{
					"id": 13676,
					"name": "onDrop",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDrop"
					}
				},
				{
					"id": 13677,
					"name": "onDropCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.DragEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDropCapture"
					}
				},
				{
					"id": 13614,
					"name": "onDurationChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDurationChange"
					}
				},
				{
					"id": 13615,
					"name": "onDurationChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onDurationChangeCapture"
					}
				},
				{
					"id": 13616,
					"name": "onEmptied",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onEmptied"
					}
				},
				{
					"id": 13617,
					"name": "onEmptiedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onEmptiedCapture"
					}
				},
				{
					"id": 13618,
					"name": "onEncrypted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onEncrypted"
					}
				},
				{
					"id": 13619,
					"name": "onEncryptedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onEncryptedCapture"
					}
				},
				{
					"id": 13620,
					"name": "onEnded",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onEnded"
					}
				},
				{
					"id": 13621,
					"name": "onEndedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1447,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onEndedCapture"
					}
				},
				{
					"id": 13600,
					"name": "onError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onError"
					}
				},
				{
					"id": 13601,
					"name": "onErrorCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onErrorCapture"
					}
				},
				{
					"id": 13585,
					"name": "onFocusCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FocusEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onFocusCapture"
					}
				},
				{
					"id": 13716,
					"name": "onGotPointerCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1550,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onGotPointerCapture"
					}
				},
				{
					"id": 13717,
					"name": "onGotPointerCaptureCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1551,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 13590,
					"name": "onInput",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onInput"
					}
				},
				{
					"id": 13591,
					"name": "onInputCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onInputCapture"
					}
				},
				{
					"id": 13596,
					"name": "onInvalid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onInvalid"
					}
				},
				{
					"id": 13597,
					"name": "onInvalidCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onInvalidCapture"
					}
				},
				{
					"id": 13602,
					"name": "onKeyDown",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onKeyDown"
					}
				},
				{
					"id": 13603,
					"name": "onKeyDownCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onKeyDownCapture"
					}
				},
				{
					"id": 13604,
					"name": "onKeyPress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onKeyPress"
					}
				},
				{
					"id": 13605,
					"name": "onKeyPressCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onKeyPressCapture"
					}
				},
				{
					"id": 13606,
					"name": "onKeyUp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onKeyUp"
					}
				},
				{
					"id": 13607,
					"name": "onKeyUpCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.KeyboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onKeyUpCapture"
					}
				},
				{
					"id": 13598,
					"name": "onLoad",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoad"
					}
				},
				{
					"id": 13599,
					"name": "onLoadCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoadCapture"
					}
				},
				{
					"id": 13626,
					"name": "onLoadStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoadStart"
					}
				},
				{
					"id": 13627,
					"name": "onLoadStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoadStartCapture"
					}
				},
				{
					"id": 13622,
					"name": "onLoadedData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1448,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoadedData"
					}
				},
				{
					"id": 13623,
					"name": "onLoadedDataCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoadedDataCapture"
					}
				},
				{
					"id": 13624,
					"name": "onLoadedMetadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoadedMetadata"
					}
				},
				{
					"id": 13625,
					"name": "onLoadedMetadataCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLoadedMetadataCapture"
					}
				},
				{
					"id": 13718,
					"name": "onLostPointerCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1552,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLostPointerCapture"
					}
				},
				{
					"id": 13719,
					"name": "onLostPointerCaptureCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1553,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 13678,
					"name": "onMouseDown",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseDown"
					}
				},
				{
					"id": 13679,
					"name": "onMouseDownCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseDownCapture"
					}
				},
				{
					"id": 13680,
					"name": "onMouseEnter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseEnter"
					}
				},
				{
					"id": 13681,
					"name": "onMouseLeave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseLeave"
					}
				},
				{
					"id": 13682,
					"name": "onMouseMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseMove"
					}
				},
				{
					"id": 13683,
					"name": "onMouseMoveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseMoveCapture"
					}
				},
				{
					"id": 13684,
					"name": "onMouseOut",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseOut"
					}
				},
				{
					"id": 13685,
					"name": "onMouseOutCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseOutCapture"
					}
				},
				{
					"id": 13686,
					"name": "onMouseOver",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseOver"
					}
				},
				{
					"id": 13687,
					"name": "onMouseOverCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseOverCapture"
					}
				},
				{
					"id": 13688,
					"name": "onMouseUp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseUp"
					}
				},
				{
					"id": 13689,
					"name": "onMouseUpCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MouseEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onMouseUpCapture"
					}
				},
				{
					"id": 13577,
					"name": "onPaste",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPaste"
					}
				},
				{
					"id": 13578,
					"name": "onPasteCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1387,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ClipboardEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPasteCapture"
					}
				},
				{
					"id": 13628,
					"name": "onPause",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPause"
					}
				},
				{
					"id": 13629,
					"name": "onPauseCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPauseCapture"
					}
				},
				{
					"id": 13630,
					"name": "onPlay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPlay"
					}
				},
				{
					"id": 13631,
					"name": "onPlayCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPlayCapture"
					}
				},
				{
					"id": 13632,
					"name": "onPlaying",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPlaying"
					}
				},
				{
					"id": 13633,
					"name": "onPlayingCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPlayingCapture"
					}
				},
				{
					"id": 13706,
					"name": "onPointerCancel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerCancel"
					}
				},
				{
					"id": 13707,
					"name": "onPointerCancelCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1541,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerCancelCapture"
					}
				},
				{
					"id": 13700,
					"name": "onPointerDown",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerDown"
					}
				},
				{
					"id": 13701,
					"name": "onPointerDownCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerDownCapture"
					}
				},
				{
					"id": 13708,
					"name": "onPointerEnter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1542,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerEnter"
					}
				},
				{
					"id": 13709,
					"name": "onPointerEnterCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1543,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerEnterCapture"
					}
				},
				{
					"id": 13710,
					"name": "onPointerLeave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1544,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerLeave"
					}
				},
				{
					"id": 13711,
					"name": "onPointerLeaveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1545,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerLeaveCapture"
					}
				},
				{
					"id": 13702,
					"name": "onPointerMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerMove"
					}
				},
				{
					"id": 13703,
					"name": "onPointerMoveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1537,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerMoveCapture"
					}
				},
				{
					"id": 13714,
					"name": "onPointerOut",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1548,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerOut"
					}
				},
				{
					"id": 13715,
					"name": "onPointerOutCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1549,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerOutCapture"
					}
				},
				{
					"id": 13712,
					"name": "onPointerOver",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1546,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerOver"
					}
				},
				{
					"id": 13713,
					"name": "onPointerOverCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1547,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerOverCapture"
					}
				},
				{
					"id": 13704,
					"name": "onPointerUp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1538,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerUp"
					}
				},
				{
					"id": 13705,
					"name": "onPointerUpCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.PointerEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onPointerUpCapture"
					}
				},
				{
					"id": 13634,
					"name": "onProgress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onProgress"
					}
				},
				{
					"id": 13635,
					"name": "onProgressCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onProgressCapture"
					}
				},
				{
					"id": 13636,
					"name": "onRateChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onRateChange"
					}
				},
				{
					"id": 13637,
					"name": "onRateChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onRateChangeCapture"
					}
				},
				{
					"id": 13592,
					"name": "onReset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onReset"
					}
				},
				{
					"id": 13593,
					"name": "onResetCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onResetCapture"
					}
				},
				{
					"id": 13638,
					"name": "onResize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onResize"
					}
				},
				{
					"id": 13639,
					"name": "onResizeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onResizeCapture"
					}
				},
				{
					"id": 13720,
					"name": "onScroll",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1556,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.UIEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onScroll"
					}
				},
				{
					"id": 13721,
					"name": "onScrollCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.UIEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onScrollCapture"
					}
				},
				{
					"id": 13640,
					"name": "onSeeked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSeeked"
					}
				},
				{
					"id": 13641,
					"name": "onSeekedCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSeekedCapture"
					}
				},
				{
					"id": 13642,
					"name": "onSeeking",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSeeking"
					}
				},
				{
					"id": 13643,
					"name": "onSeekingCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSeekingCapture"
					}
				},
				{
					"id": 13690,
					"name": "onSelect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSelect"
					}
				},
				{
					"id": 13691,
					"name": "onSelectCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1521,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSelectCapture"
					}
				},
				{
					"id": 13644,
					"name": "onStalled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onStalled"
					}
				},
				{
					"id": 13645,
					"name": "onStalledCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onStalledCapture"
					}
				},
				{
					"id": 13594,
					"name": "onSubmit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSubmit"
					}
				},
				{
					"id": 13595,
					"name": "onSubmitCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.FormEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSubmitCapture"
					}
				},
				{
					"id": 13646,
					"name": "onSuspend",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSuspend"
					}
				},
				{
					"id": 13647,
					"name": "onSuspendCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onSuspendCapture"
					}
				},
				{
					"id": 13648,
					"name": "onTimeUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTimeUpdate"
					}
				},
				{
					"id": 13649,
					"name": "onTimeUpdateCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTimeUpdateCapture"
					}
				},
				{
					"id": 13692,
					"name": "onTouchCancel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchCancel"
					}
				},
				{
					"id": 13693,
					"name": "onTouchCancelCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1525,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchCancelCapture"
					}
				},
				{
					"id": 13694,
					"name": "onTouchEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1526,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchEnd"
					}
				},
				{
					"id": 13695,
					"name": "onTouchEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchEndCapture"
					}
				},
				{
					"id": 13696,
					"name": "onTouchMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchMove"
					}
				},
				{
					"id": 13697,
					"name": "onTouchMoveCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1529,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchMoveCapture"
					}
				},
				{
					"id": 13698,
					"name": "onTouchStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1530,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchStart"
					}
				},
				{
					"id": 13699,
					"name": "onTouchStartCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TouchEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTouchStartCapture"
					}
				},
				{
					"id": 13730,
					"name": "onTransitionEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1572,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TransitionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTransitionEnd"
					}
				},
				{
					"id": 13731,
					"name": "onTransitionEndCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1573,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.TransitionEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onTransitionEndCapture"
					}
				},
				{
					"id": 13650,
					"name": "onVolumeChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onVolumeChange"
					}
				},
				{
					"id": 13651,
					"name": "onVolumeChangeCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onVolumeChangeCapture"
					}
				},
				{
					"id": 13652,
					"name": "onWaiting",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onWaiting"
					}
				},
				{
					"id": 13653,
					"name": "onWaitingCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onWaitingCapture"
					}
				},
				{
					"id": 13722,
					"name": "onWheel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1560,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.WheelEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onWheel"
					}
				},
				{
					"id": 13723,
					"name": "onWheelCapture",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1561,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.WheelEventHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLTextAreaElement"
								},
								"name": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"package": "@types/react",
						"qualifiedName": "React.WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.onWheelCapture"
					}
				},
				{
					"id": 13739,
					"name": "open",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1987,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.open"
					}
				},
				{
					"id": 13792,
					"name": "optimum",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1988,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.optimum"
					}
				},
				{
					"id": 13793,
					"name": "playsInline",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1991,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.playsInline"
					}
				},
				{
					"id": 13794,
					"name": "poster",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1992,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.poster"
					}
				},
				{
					"id": 13504,
					"name": "prefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1884,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.prefix"
					}
				},
				{
					"id": 13795,
					"name": "preload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1993,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.preload"
					}
				},
				{
					"id": 13468,
					"name": "property",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.property"
					}
				},
				{
					"id": 13499,
					"name": "radioGroup",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.radioGroup"
					}
				},
				{
					"id": 13483,
					"name": "rel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1995,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.rel"
					}
				},
				{
					"id": 13505,
					"name": "resource",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1886,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.resource"
					}
				},
				{
					"id": 13517,
					"name": "results",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1900,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.results"
					}
				},
				{
					"id": 13796,
					"name": "reversed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1997,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.reversed"
					}
				},
				{
					"id": 13500,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1878,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.AriaRole"
						},
						"name": "AriaRole",
						"package": "@types/react",
						"qualifiedName": "React.AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.role"
					}
				},
				{
					"id": 13798,
					"name": "rowSpan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1999,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.rowSpan"
					}
				},
				{
					"id": 13797,
					"name": "rows",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1998,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.rows"
					}
				},
				{
					"id": 13799,
					"name": "sandbox",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2000,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.sandbox"
					}
				},
				{
					"id": 13800,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2001,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.scope"
					}
				},
				{
					"id": 13801,
					"name": "scoped",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2002,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.scoped"
					}
				},
				{
					"id": 13802,
					"name": "scrolling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2003,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.scrolling"
					}
				},
				{
					"id": 13734,
					"name": "seamless",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2004,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.seamless"
					}
				},
				{
					"id": 13518,
					"name": "security",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1901,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.security"
					}
				},
				{
					"id": 13803,
					"name": "selected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2005,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.selected"
					}
				},
				{
					"id": 13804,
					"name": "shape",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2006,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.shape"
					}
				},
				{
					"id": 13805,
					"name": "sizes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2008,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.sizes"
					}
				},
				{
					"id": 13474,
					"name": "slot",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.slot"
					}
				},
				{
					"id": 13475,
					"name": "span",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2009,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.span"
					}
				},
				{
					"id": 13496,
					"name": "spellCheck",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "Booleanish"
						},
						"name": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.spellCheck"
					}
				},
				{
					"id": 13806,
					"name": "src",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2010,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.src"
					}
				},
				{
					"id": 13807,
					"name": "srcDoc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2011,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.srcDoc"
					}
				},
				{
					"id": 13808,
					"name": "srcLang",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2012,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.srcLang"
					}
				},
				{
					"id": 13809,
					"name": "srcSet",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2013,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.srcSet"
					}
				},
				{
					"id": 13736,
					"name": "start",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2014,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.start"
					}
				},
				{
					"id": 13733,
					"name": "step",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2015,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.step"
					}
				},
				{
					"id": 13476,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1869,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.style"
					}
				},
				{
					"id": 13477,
					"name": "summary",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2016,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.summary"
					}
				},
				{
					"id": 13486,
					"name": "suppressContentEditableWarning",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.suppressContentEditableWarning"
					}
				},
				{
					"id": 13487,
					"name": "suppressHydrationWarning",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.suppressHydrationWarning"
					}
				},
				{
					"id": 13497,
					"name": "tabIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1870,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.tabIndex"
					}
				},
				{
					"id": 13484,
					"name": "target",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2017,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.target"
					}
				},
				{
					"id": 13478,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1871,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.title"
					}
				},
				{
					"id": 13498,
					"name": "translate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1872,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "yes"
							},
							{
								"type": "literal",
								"value": "no"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.translate"
					}
				},
				{
					"id": 13506,
					"name": "typeof",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1887,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.typeof"
					}
				},
				{
					"id": 13519,
					"name": "unselectable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1902,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.unselectable"
					}
				},
				{
					"id": 13810,
					"name": "useMap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2019,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.useMap"
					}
				},
				{
					"id": 13507,
					"name": "vocab",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1888,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.vocab"
					}
				},
				{
					"id": 13743,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2021,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.width"
					}
				},
				{
					"id": 13811,
					"name": "wmode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2022,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.wmode"
					}
				},
				{
					"id": 13738,
					"name": "wrap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2023,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.wrap"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13501,
						13750,
						13751,
						13488,
						13752,
						13753,
						13754,
						13755,
						13522,
						13523,
						13524,
						13525,
						13526,
						13527,
						13528,
						13529,
						13530,
						13531,
						13532,
						13533,
						13534,
						13535,
						13536,
						13537,
						13538,
						13539,
						13540,
						13541,
						13542,
						13543,
						13544,
						13545,
						13546,
						13547,
						13548,
						13549,
						13550,
						13551,
						13552,
						13553,
						13554,
						13555,
						13556,
						13557,
						13558,
						13559,
						13560,
						13561,
						13562,
						13563,
						13564,
						13565,
						13566,
						13567,
						13568,
						13569,
						13756,
						13757,
						13508,
						13758,
						13509,
						13744,
						13759,
						13510,
						13760,
						13761,
						13762,
						13764,
						13763,
						13765,
						13469,
						13470,
						13766,
						13768,
						13511,
						13767,
						13737,
						13489,
						13490,
						13769,
						13770,
						13771,
						13570,
						13471,
						13502,
						13772,
						13735,
						13485,
						13773,
						13491,
						13480,
						13492,
						13774,
						13472,
						13745,
						13746,
						13747,
						13748,
						13749,
						13775,
						13741,
						13776,
						13493,
						13777,
						13479,
						13481,
						13778,
						13779,
						13503,
						13520,
						13780,
						13521,
						13515,
						13512,
						13516,
						13513,
						13514,
						13781,
						13782,
						13783,
						13473,
						13494,
						13732,
						13784,
						13785,
						13786,
						13787,
						13788,
						13482,
						13789,
						13742,
						13740,
						13790,
						13791,
						13495,
						13608,
						13609,
						13726,
						13727,
						13728,
						13729,
						13724,
						13725,
						13654,
						13655,
						13588,
						13589,
						13586,
						13610,
						13611,
						13612,
						13613,
						13587,
						13656,
						13657,
						13579,
						13580,
						13581,
						13582,
						13583,
						13584,
						13658,
						13659,
						13573,
						13574,
						13575,
						13576,
						13660,
						13661,
						13662,
						13663,
						13664,
						13665,
						13666,
						13667,
						13668,
						13669,
						13670,
						13671,
						13672,
						13673,
						13674,
						13675,
						13676,
						13677,
						13614,
						13615,
						13616,
						13617,
						13618,
						13619,
						13620,
						13621,
						13600,
						13601,
						13585,
						13716,
						13717,
						13590,
						13591,
						13596,
						13597,
						13602,
						13603,
						13604,
						13605,
						13606,
						13607,
						13598,
						13599,
						13626,
						13627,
						13622,
						13623,
						13624,
						13625,
						13718,
						13719,
						13678,
						13679,
						13680,
						13681,
						13682,
						13683,
						13684,
						13685,
						13686,
						13687,
						13688,
						13689,
						13577,
						13578,
						13628,
						13629,
						13630,
						13631,
						13632,
						13633,
						13706,
						13707,
						13700,
						13701,
						13708,
						13709,
						13710,
						13711,
						13702,
						13703,
						13714,
						13715,
						13712,
						13713,
						13704,
						13705,
						13634,
						13635,
						13636,
						13637,
						13592,
						13593,
						13638,
						13639,
						13720,
						13721,
						13640,
						13641,
						13642,
						13643,
						13690,
						13691,
						13644,
						13645,
						13594,
						13595,
						13646,
						13647,
						13648,
						13649,
						13692,
						13693,
						13694,
						13695,
						13696,
						13697,
						13698,
						13699,
						13730,
						13731,
						13650,
						13651,
						13652,
						13653,
						13722,
						13723,
						13739,
						13792,
						13793,
						13794,
						13504,
						13795,
						13468,
						13499,
						13483,
						13505,
						13517,
						13796,
						13500,
						13798,
						13797,
						13799,
						13800,
						13801,
						13802,
						13734,
						13518,
						13803,
						13804,
						13805,
						13474,
						13475,
						13496,
						13806,
						13807,
						13808,
						13809,
						13736,
						13733,
						13476,
						13477,
						13486,
						13487,
						13497,
						13484,
						13478,
						13498,
						13506,
						13519,
						13810,
						13507,
						13743,
						13811,
						13738
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Inputs/TextareaInput.d.ts",
					"line": 4,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Omit"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/@types/react/index.d.ts",
								"qualifiedName": "React.AllHTMLAttributes"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "HTMLTextAreaElement"
									},
									"name": "HTMLTextAreaElement",
									"package": "typescript"
								}
							],
							"name": "AllHTMLAttributes",
							"package": "@types/react",
							"qualifiedName": "React.AllHTMLAttributes"
						},
						{
							"type": "reference",
							"target": 14353,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "ControlPropsKeys",
							"package": "@contember/ui"
						}
					],
					"name": "Omit",
					"package": "typescript"
				}
			]
		},
		{
			"id": 14298,
			"name": "ValidationStateProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14299,
					"name": "onValidationStateChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14300,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
									"line": 9,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 14301,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
											"line": 9,
											"character": 30
										}
									],
									"parameters": [
										{
											"id": 14302,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 14303,
					"name": "validationState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 17459,
						"name": "ValidationState",
						"package": "@contember/ui"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14299,
						14303
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 8,
					"character": 17
				}
			]
		},
		{
			"id": 14349,
			"name": "ControlProps",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 50,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 14350,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 14323,
						"name": "ControlDisplayProps",
						"package": "@contember/ui"
					},
					{
						"type": "reference",
						"target": 14298,
						"name": "ValidationStateProps",
						"package": "@contember/ui"
					},
					{
						"type": "reference",
						"target": 14304,
						"name": "ControlStateProps",
						"package": "@contember/ui"
					},
					{
						"type": "reference",
						"target": 14312,
						"name": "ControlFocusProps",
						"package": "@contember/ui"
					},
					{
						"type": "reference",
						"target": 14342,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						],
						"name": "ControlConstraintProps",
						"package": "@contember/ui"
					},
					{
						"type": "reference",
						"target": 14333,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						],
						"name": "ControlValueProps",
						"package": "@contember/ui"
					}
				]
			}
		},
		{
			"id": 14353,
			"name": "ControlPropsKeys",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Types/ControlProps.d.ts",
					"line": 52,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 14354,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "reference",
					"target": 14349,
					"typeArguments": [
						{
							"type": "reference",
							"target": -1,
							"name": "V",
							"refersToTypeParameter": true
						}
					],
					"name": "ControlProps",
					"package": "@contember/ui"
				}
			}
		},
		{
			"id": 13818,
			"name": "TextareaInput",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/ui/dist/types/components/Forms/Inputs/TextareaInput.d.ts",
					"line": 16,
					"character": 21
				}
			],
			"signatures": [
				{
					"id": 13819,
					"name": "TextareaInput",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 351,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 13820,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 14323,
										"name": "ControlDisplayProps",
										"package": "@contember/ui"
									},
									{
										"type": "reference",
										"target": 14298,
										"name": "ValidationStateProps",
										"package": "@contember/ui"
									},
									{
										"type": "reference",
										"target": 14304,
										"name": "ControlStateProps",
										"package": "@contember/ui"
									},
									{
										"type": "reference",
										"target": 14312,
										"name": "ControlFocusProps",
										"package": "@contember/ui"
									},
									{
										"type": "reference",
										"target": 14342,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "ControlConstraintProps",
										"package": "@contember/ui"
									},
									{
										"type": "reference",
										"target": 14333,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "ControlValueProps",
										"package": "@contember/ui"
									},
									{
										"type": "reference",
										"target": 13812,
										"name": "TextareaInputOwnProps",
										"package": "@contember/ui"
									},
									{
										"type": "reference",
										"target": 13467,
										"name": "UnderlyingElementProps",
										"package": "@contember/ui"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 13821,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 13822,
													"name": "style",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/ui/dist/types/components/Forms/Inputs/TextareaInput.d.ts",
															"line": 17,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/react-textarea-autosize/dist/declarations/src/index.d.ts",
															"qualifiedName": "Style"
														},
														"name": "Style",
														"package": "react-textarea-autosize"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														13822
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/ui/dist/types/components/Forms/Inputs/TextareaInput.d.ts",
													"line": 16,
													"character": 423
												}
											]
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.RefAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLTextAreaElement"
												},
												"name": "HTMLTextAreaElement",
												"package": "typescript"
											}
										],
										"name": "RefAttributes",
										"package": "@types/react",
										"qualifiedName": "React.RefAttributes"
									}
								]
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactElement"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.JSXElementConstructor"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor",
												"package": "@types/react",
												"qualifiedName": "React.JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement",
								"package": "@types/react",
								"qualifiedName": "React.ReactElement"
							}
						]
					}
				}
			]
		}
	],
	"symbolIdMap": {}
}